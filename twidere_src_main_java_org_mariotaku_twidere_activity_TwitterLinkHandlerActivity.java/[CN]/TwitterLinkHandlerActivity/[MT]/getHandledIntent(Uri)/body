{
  final List<String> pathSegments=uri.getPathSegments();
  if (pathSegments.size() > 0) {
switch (pathSegments.get(0)) {
case "i":
{
        return getIUriIntent(uri,pathSegments);
      }
case "intent":
{
      return getIntentUriIntent(uri,pathSegments);
    }
case "share":
{
    final Intent handledIntent=new Intent(this,ComposeActivity.class);
    handledIntent.setAction(Intent.ACTION_SEND);
    final String text=uri.getQueryParameter("text");
    final String url=uri.getQueryParameter("url");
    handledIntent.putExtra(Intent.EXTRA_TEXT,Utils.getShareStatus(this,text,url));
    return Pair.create(handledIntent,true);
  }
case "search":
{
  final Uri.Builder builder=new Uri.Builder();
  builder.scheme(SCHEME_TWIDERE);
  builder.authority(AUTHORITY_SEARCH);
  builder.appendQueryParameter(QUERY_PARAM_QUERY,uri.getQueryParameter("q"));
  return Pair.create(new Intent(Intent.ACTION_VIEW,builder.build()),true);
}
case "following":
{
final Uri.Builder builder=new Uri.Builder();
builder.scheme(SCHEME_TWIDERE);
builder.authority(AUTHORITY_USER_FRIENDS);
builder.appendQueryParameter(QUERY_PARAM_USER_ID,String.valueOf(getDefaultAccountKey(this)));
return Pair.create(new Intent(Intent.ACTION_VIEW,builder.build()),true);
}
case "followers":
{
final Uri.Builder builder=new Uri.Builder();
builder.scheme(SCHEME_TWIDERE);
builder.authority(AUTHORITY_USER_FOLLOWERS);
builder.appendQueryParameter(QUERY_PARAM_USER_ID,String.valueOf(getDefaultAccountKey(this)));
return Pair.create(new Intent(Intent.ACTION_VIEW,builder.build()),true);
}
case "favorites":
{
final Uri.Builder builder=new Uri.Builder();
builder.scheme(SCHEME_TWIDERE);
builder.authority(AUTHORITY_USER_FAVORITES);
builder.appendQueryParameter(QUERY_PARAM_USER_ID,String.valueOf(getDefaultAccountKey(this)));
return Pair.create(new Intent(Intent.ACTION_VIEW,builder.build()),true);
}
default :
{
if (ArrayUtils.contains(TWITTER_RESERVED_PATHS,pathSegments.get(0))) {
return Pair.create(null,true);
}
return handleUserSpecificPageIntent(uri,pathSegments,pathSegments.get(0));
}
}
}
return Pair.create(null,false);
}
