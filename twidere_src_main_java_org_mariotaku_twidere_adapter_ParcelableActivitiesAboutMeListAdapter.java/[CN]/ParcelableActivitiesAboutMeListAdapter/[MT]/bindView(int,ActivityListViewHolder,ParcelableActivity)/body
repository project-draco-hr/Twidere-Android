{
  if (item == null)   return;
  final ParcelableUser[] sources=item.sources;
  if (sources == null || sources.length == 0)   return;
  final ParcelableStatus[] targetStatuses=item.target_statuses;
  final int action=item.action;
  final boolean displayProfileImage=shouldDisplayProfileImage();
  final TwidereLinkify linkify=getLinkify();
  final int highlightOption=getLinkHighlightOption();
  final Context context=getContext();
  final ParcelableUser firstSource=sources[0];
  final ParcelableStatus[] targetObjects=item.target_object_statuses;
  final String sourceName=getName(firstSource);
switch (action) {
case ParcelableActivity.ACTION_FAVORITE:
{
      holder.name.setVisibility(View.VISIBLE);
      holder.screen_name.setVisibility(View.GONE);
      holder.profile_image.setVisibility(View.GONE);
      holder.my_profile_image.setVisibility(View.GONE);
      holder.text.setVisibility(View.VISIBLE);
      holder.reply_retweet_status.setVisibility(View.GONE);
      holder.activity_profile_images_container.setVisibility(displayProfileImage ? View.VISIBLE : View.GONE);
      holder.name.setSingleLine(false);
      if (targetStatuses != null && targetStatuses.length > 0) {
        final ParcelableStatus status=targetStatuses[0];
        if (highlightOption != VALUE_LINK_HIGHLIGHT_OPTION_CODE_NONE) {
          holder.text.setText(Html.fromHtml(status.text_html));
          linkify.applyAllLinks(holder.text,status.account_id,status.is_possibly_sensitive);
          holder.text.setMovementMethod(null);
        }
 else {
          holder.text.setText(status.text_unescaped);
        }
      }
      if (sources.length == 1) {
        holder.name.setText(context.getString(R.string.activity_about_me_favorite,sourceName));
      }
 else {
        holder.name.setText(context.getString(R.string.activity_about_me_favorite_multi,sourceName,sources.length - 1));
      }
      displayActivityUserProfileImages(holder,sources);
      break;
    }
case ParcelableActivity.ACTION_FOLLOW:
{
    holder.name.setVisibility(View.VISIBLE);
    holder.screen_name.setVisibility(View.GONE);
    holder.profile_image.setVisibility(View.GONE);
    holder.my_profile_image.setVisibility(View.GONE);
    holder.text.setVisibility(View.GONE);
    holder.reply_retweet_status.setVisibility(View.GONE);
    holder.name.setSingleLine(false);
    if (sources.length == 1) {
      holder.name.setText(context.getString(R.string.activity_about_me_follow,sourceName));
    }
 else {
      holder.name.setText(context.getString(R.string.activity_about_me_follow_multi,sourceName,sources.length - 1));
    }
    displayActivityUserProfileImages(holder,sources);
    break;
  }
case ParcelableActivity.ACTION_MENTION:
{
  if (targetObjects != null && targetObjects.length > 0) {
    final ParcelableStatus status=targetObjects[0];
    displayStatus(status,holder,position);
  }
  break;
}
case ParcelableActivity.ACTION_REPLY:
{
if (targetStatuses != null && targetStatuses.length > 0) {
  final ParcelableStatus status=targetStatuses[0];
  displayStatus(status,holder,position);
}
break;
}
case ParcelableActivity.ACTION_RETWEET:
{
holder.name.setVisibility(View.VISIBLE);
holder.screen_name.setVisibility(View.GONE);
holder.profile_image.setVisibility(View.GONE);
holder.my_profile_image.setVisibility(View.GONE);
holder.text.setVisibility(View.VISIBLE);
holder.reply_retweet_status.setVisibility(View.GONE);
holder.name.setSingleLine(false);
if (targetObjects != null && targetObjects.length > 0) {
final ParcelableStatus status=targetObjects[0];
if (highlightOption != VALUE_LINK_HIGHLIGHT_OPTION_CODE_NONE) {
  holder.text.setText(Html.fromHtml(status.text_html));
  linkify.applyAllLinks(holder.text,status.account_id,status.is_possibly_sensitive);
  holder.text.setMovementMethod(null);
}
 else {
  holder.text.setText(status.text_unescaped);
}
}
if (sources.length == 1) {
holder.name.setText(context.getString(R.string.activity_about_me_retweet,sourceName));
}
 else {
holder.name.setText(context.getString(R.string.activity_about_me_retweet_multi,sourceName,sources.length - 1));
}
holder.activity_profile_images_container.setVisibility(View.VISIBLE);
displayActivityUserProfileImages(holder,sources);
break;
}
case ParcelableActivity.ACTION_LIST_MEMBER_ADDED:
{
holder.name.setVisibility(View.VISIBLE);
holder.screen_name.setVisibility(View.GONE);
holder.profile_image.setVisibility(View.GONE);
holder.my_profile_image.setVisibility(View.GONE);
holder.text.setVisibility(View.GONE);
holder.reply_retweet_status.setVisibility(View.GONE);
holder.name.setSingleLine(false);
if (sources.length == 1) {
if (item.target_object_user_lists != null && item.target_object_user_lists.length > 0) {
final ParcelableUserList list=item.target_object_user_lists[0];
holder.name.setText(context.getString(R.string.activity_about_me_list_member_added_with_name,sourceName,list.name));
}
 else {
holder.name.setText(context.getString(R.string.activity_about_me_list_member_added,sourceName));
}
}
 else {
holder.name.setText(context.getString(R.string.activity_about_me_list_member_added_multi,sourceName,sources.length - 1));
}
displayActivityUserProfileImages(holder,sources);
break;
}
}
}
