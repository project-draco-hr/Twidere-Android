{
  try {
    name=getHTMLUnescapedString("name",json);
    streetAddress=getHTMLUnescapedString("street_address",json);
    countryCode=getRawString("country_code",json);
    id=getRawString("id",json);
    country=getRawString("country",json);
    if (!json.isNull("place_type")) {
      placeType=getRawString("place_type",json);
    }
 else {
      placeType=getRawString("type",json);
    }
    url=getRawString("url",json);
    fullName=getRawString("full_name",json);
    if (!json.isNull("bounding_box")) {
      final JSONObject boundingBoxJSON=json.getJSONObject("bounding_box");
      boundingBoxType=getRawString("type",boundingBoxJSON);
      final JSONArray array=boundingBoxJSON.getJSONArray("coordinates");
      boundingBoxCoordinates=InternalJSONFactoryImpl.coordinatesAsGeoLocationArray(array);
    }
 else {
      boundingBoxType=null;
      boundingBoxCoordinates=null;
    }
    if (!json.isNull("geometry")) {
      final JSONObject geometryJSON=json.getJSONObject("geometry");
      geometryType=getRawString("type",geometryJSON);
      final JSONArray array=geometryJSON.getJSONArray("coordinates");
      if (geometryType.equals("Point")) {
        geometryCoordinates=new GeoLocation[1][1];
        geometryCoordinates[0][0]=new GeoLocation(array.getDouble(0),array.getDouble(1));
      }
 else       if (geometryType.equals("Polygon")) {
        geometryCoordinates=InternalJSONFactoryImpl.coordinatesAsGeoLocationArray(array);
      }
 else {
        geometryType=null;
        geometryCoordinates=null;
      }
    }
 else {
      geometryType=null;
      geometryCoordinates=null;
    }
    if (!json.isNull("contained_within")) {
      final JSONArray containedWithInJSON=json.getJSONArray("contained_within");
      containedWithIn=new Place[containedWithInJSON.length()];
      for (int i=0; i < containedWithInJSON.length(); i++) {
        containedWithIn[i]=new PlaceJSONImpl(containedWithInJSON.getJSONObject(i));
      }
    }
 else {
      containedWithIn=null;
    }
  }
 catch (  final JSONException jsone) {
    throw new TwitterException(jsone.getMessage() + ":" + json.toString(),jsone);
  }
}
