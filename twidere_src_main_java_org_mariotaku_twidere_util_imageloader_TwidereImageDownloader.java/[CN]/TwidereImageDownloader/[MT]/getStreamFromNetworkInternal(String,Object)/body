{
  final Uri uri=Uri.parse(uriString);
  final Authorization auth;
  final ParcelableCredentials account;
  if (isTwitterAuthRequired(uri) && extras instanceof AccountExtra) {
    final AccountExtra accountExtra=(AccountExtra)extras;
    account=ParcelableAccount.getCredentials(mContext,accountExtra.account_id);
    auth=TwitterAPIFactory.getAuthorization(account);
  }
 else {
    account=null;
    auth=null;
  }
  Uri modifiedUri=getReplacedUri(uri,account != null ? account.api_url_format : null);
  final List<Pair<String,String>> additionalHeaders=new ArrayList<>();
  if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.JELLY_BEAN_MR1) {
    additionalHeaders.add(Pair.create("Accept","image/webp, */*"));
  }
  additionalHeaders.add(Pair.create("User-Agent",mUserAgent));
  final String method=GET.METHOD;
  final String requestUri;
  if (auth != null && auth.hasAuthorization()) {
    final Endpoint endpoint;
    if (auth instanceof OAuthAuthorization) {
      endpoint=new OAuthEndpoint(getEndpoint(modifiedUri),getEndpoint(uri));
    }
 else {
      endpoint=new Endpoint(getEndpoint(modifiedUri));
    }
    final List<Pair<String,String>> queries=new ArrayList<>();
    for (    String name : uri.getQueryParameterNames()) {
      for (      String value : uri.getQueryParameters(name)) {
        queries.add(Pair.create(name,value));
      }
    }
    final RestRequestInfo info=new RestRequestInfo(method,uri.getPath(),queries,null,additionalHeaders,null,null,null,null);
    additionalHeaders.add(Pair.create("Authorization",auth.getHeader(endpoint,info)));
    requestUri=modifiedUri.toString();
  }
 else   if (mThumbor != null) {
    requestUri=mThumbor.buildImage(modifiedUri.toString()).filter(ThumborUrlBuilder.quality(85)).toUrl();
  }
 else {
    requestUri=modifiedUri.toString();
  }
  final RestHttpRequest.Builder builder=new RestHttpRequest.Builder();
  builder.method(method);
  builder.url(requestUri);
  builder.headers(additionalHeaders);
  builder.extra(RequestType.MEDIA);
  final RestHttpResponse resp=mClient.execute(builder.build());
  final TypedData body=resp.getBody();
  return new ContentLengthInputStream(body.stream(),(int)body.length());
}
