{
  if (host == null)   return null;
  if (isValidIpAddress(host))   return null;
  if (mHostCache.containsKey(host)) {
    if (Utils.isDebugBuild()) {
      Log.d(RESOLVER_LOGTAG,"Got cached address " + mHostCache.get(host) + " for host "+ host);
    }
    return mHostCache.get(host);
  }
  if (mHostMapping.contains(host)) {
    final String mappedAddr=mHostMapping.getString(host,null);
    mHostCache.put(host,mappedAddr);
    if (Utils.isDebugBuild()) {
      Log.d(RESOLVER_LOGTAG,"Got mapped address " + mappedAddr + " for host "+ host);
    }
    return mappedAddr;
  }
  mSystemHosts.reloadIfNeeded();
  if (mSystemHosts.contains(host)) {
    final String hostAddr=mSystemHosts.getAddress(host);
    mHostCache.put(host,hostAddr);
    if (Utils.isDebugBuild()) {
      Log.d(RESOLVER_LOGTAG,"Got mapped address " + hostAddr + " for host "+ host);
    }
    return hostAddr;
  }
  final String customMappedHost=findHost(host);
  if (customMappedHost != null) {
    mHostCache.put(host,customMappedHost);
    if (Utils.isDebugBuild()) {
      Log.d(RESOLVER_LOGTAG,"Got mapped address " + customMappedHost + " for host "+ host);
    }
    return customMappedHost;
  }
  initDns();
  if (mDns != null && mPreferences.getBoolean(KEY_TCP_DNS_QUERY,false)) {
    final Lookup lookup=new Lookup(new Name(host),Type.A,DClass.IN);
    final Record[] records;
    lookup.setResolver(mDns);
    lookup.run();
    final int result=lookup.getResult();
    if (result != Lookup.SUCCESSFUL) {
      throw new IOException("Could not find " + host);
    }
    records=lookup.getAnswers();
    String hostAddr=null;
    for (    final Record record : records) {
      if (record instanceof ARecord) {
        final InetAddress ipv4Addr=((ARecord)record).getAddress();
        if (ipv4Addr.isReachable(300)) {
          hostAddr=ipv4Addr.getHostAddress();
        }
      }
 else       if (record instanceof AAAARecord) {
        final InetAddress ipv6Addr=((AAAARecord)record).getAddress();
        if (ipv6Addr.isReachable(300)) {
          hostAddr=ipv6Addr.getHostAddress();
        }
      }
      if (hostAddr != null) {
        mHostCache.put(host,hostAddr);
        if (Utils.isDebugBuild()) {
          Log.d(RESOLVER_LOGTAG,"Resolved address " + hostAddr + " for host "+ host);
        }
        return hostAddr;
      }
    }
    final Record record=records[0];
    if (record instanceof ARecord) {
      final InetAddress ipv4Addr=((ARecord)record).getAddress();
      hostAddr=ipv4Addr.getHostAddress();
    }
 else     if (record instanceof AAAARecord) {
      final InetAddress ipv6Addr=((AAAARecord)record).getAddress();
      hostAddr=ipv6Addr.getHostAddress();
    }
 else     if (record instanceof CNAMERecord)     return resolve(((CNAMERecord)record).getTarget().toString());
    mHostCache.put(host,hostAddr);
    if (Utils.isDebugBuild()) {
      Log.d(RESOLVER_LOGTAG,"Resolved address " + hostAddr + " for host "+ host);
    }
    return hostAddr;
  }
  if (Utils.isDebugBuild()) {
    Log.w(RESOLVER_LOGTAG,"Resolve address " + host + " failed, using original host");
  }
  return host;
}
