{
  if (!(paint instanceof TextPaint))   return;
  final TextPaint tp=(TextPaint)paint;
  mBounds.left=x;
  mBounds.right=x + paint.measureText(text,start,end) + mPadding * 2;
  mBounds.top=top;
  mBounds.bottom=bottom;
  final int innerTextColor=TwidereColorUtils.getContrastYIQ(tp.linkColor,ThemeUtils.ACCENT_COLOR_THRESHOLD,mDarkLightColors[0],mDarkLightColors[1]);
  mPaint.setStyle(Paint.Style.FILL);
  mPaint.setColor(tp.linkColor);
  mBounds.inset(mPaint.getStrokeWidth() / 2,mPaint.getStrokeWidth() / 2);
  canvas.drawRoundRect(mBounds,mCornerRadius,mCornerRadius,mPaint);
  mBounds.inset(-mPaint.getStrokeWidth() / 2,-mPaint.getStrokeWidth() / 2);
  mPaint.setStyle(Paint.Style.STROKE);
  mPaint.setColor(ColorUtils.compositeColors(ColorUtils.setAlphaComponent(innerTextColor,0x80),tp.linkColor));
  mBounds.inset(mPaint.getStrokeWidth() / 2,mPaint.getStrokeWidth() / 2);
  canvas.drawRoundRect(mBounds,mCornerRadius,mCornerRadius,mPaint);
  paint.setColor(innerTextColor);
  canvas.drawText(text,start,end,x + mPadding,top + (bottom - top) / 2 - (paint.descent() + paint.ascent()) / 2,paint);
}
