{
  final ViewPager viewPager=findViewPager();
  final PagerAdapter adapter=viewPager.getAdapter();
  final Object object=adapter.instantiateItem(viewPager,viewPager.getCurrentItem());
  if (!(object instanceof CacheDownloadMediaViewerFragment))   return;
  CacheDownloadLoader.Result result=((CacheDownloadMediaViewerFragment)object).getDownloadResult();
  if (result == null || result.cacheUri == null) {
    return;
  }
  final File destination=new File(getCacheDir(),"shared_files");
  final SaveFileTask task=new SaveFileTask(this,result.cacheUri,destination,new CacheProvider.CacheFileTypeCallback(this)){
    private static final String PROGRESS_FRAGMENT_TAG="progress";
    protected void dismissProgress(){
      final IExtendedActivity activity=(IExtendedActivity)getContext();
      if (activity == null)       return;
      activity.executeAfterFragmentResumed(new IExtendedActivity.Action(){
        @Override public void execute(        IExtendedActivity activity){
          final FragmentManager fm=((Activity)activity).getFragmentManager();
          final DialogFragment fragment=(DialogFragment)fm.findFragmentByTag(PROGRESS_FRAGMENT_TAG);
          if (fragment != null) {
            fragment.dismiss();
          }
        }
      }
);
    }
    protected void showProgress(){
      final IExtendedActivity activity=(IExtendedActivity)getContext();
      if (activity == null)       return;
      activity.executeAfterFragmentResumed(new IExtendedActivity.Action(){
        @Override public void execute(        IExtendedActivity activity){
          final DialogFragment fragment=new ProgressDialogFragment();
          fragment.setCancelable(false);
          fragment.show(((Activity)activity).getFragmentManager(),PROGRESS_FRAGMENT_TAG);
        }
      }
);
    }
    protected void onFileSaved(    @NonNull File savedFile,    @Nullable String mimeType){
      final MediaViewerActivity activity=(MediaViewerActivity)getContext();
      if (activity == null)       return;
      activity.mShareFile=savedFile;
      final Uri fileUri=FileProvider.getUriForFile(activity,AUTHORITY_TWIDERE_FILE,savedFile);
      final Intent intent=new Intent(Intent.ACTION_SEND);
      intent.setDataAndType(fileUri,mimeType);
      intent.putExtra(Intent.EXTRA_STREAM,fileUri);
      intent.addFlags(Intent.FLAG_GRANT_READ_URI_PERMISSION);
      activity.processShareIntent(intent);
      startActivityForResult(Intent.createChooser(intent,activity.getString(R.string.share)),REQUEST_SHARE_MEDIA);
    }
    @Override protected void onFileSaveFailed(){
      final MediaViewerActivity activity=(MediaViewerActivity)getContext();
      if (activity == null)       return;
      Toast.makeText(activity,R.string.error_occurred,Toast.LENGTH_SHORT).show();
    }
  }
;
  task.execute();
}
