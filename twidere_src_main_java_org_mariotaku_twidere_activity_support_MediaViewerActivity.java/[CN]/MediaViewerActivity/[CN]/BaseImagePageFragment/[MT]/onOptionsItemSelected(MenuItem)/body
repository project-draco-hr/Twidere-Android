{
switch (item.getItemId()) {
case R.id.open_in_browser:
{
      openInBrowser();
      return true;
    }
case R.id.save:
{
    requestAndSaveToGallery();
    return true;
  }
case R.id.refresh:
{
  loadImage();
  return true;
}
case R.id.share:
{
final FragmentActivity activity=getActivity();
final File destination=new File(activity.getCacheDir(),"shared_files");
final SaveFileTask task=new SaveFileTask(activity,mImageFile,destination,new SaveImageToGalleryTask.ImageMimeTypeCallback()){
  private static final String PROGRESS_FRAGMENT_TAG="progress";
  protected void dismissProgress(){
    final MediaViewerActivity activity=(MediaViewerActivity)getActivity();
    if (activity == null)     return;
    activity.executeAfterFragmentResumed(new IExtendedActivity.Action(){
      @Override public void execute(      IExtendedActivity activity){
        final FragmentManager fm=((Activity)activity).getFragmentManager();
        final DialogFragment fragment=(DialogFragment)fm.findFragmentByTag(PROGRESS_FRAGMENT_TAG);
        if (fragment != null) {
          fragment.dismiss();
        }
      }
    }
);
  }
  protected void showProgress(){
    final MediaViewerActivity activity=(MediaViewerActivity)getActivity();
    if (activity == null)     return;
    activity.executeAfterFragmentResumed(new IExtendedActivity.Action(){
      @Override public void execute(      IExtendedActivity activity){
        final DialogFragment fragment=new ProgressDialogFragment();
        fragment.setCancelable(false);
        fragment.show(((Activity)activity).getFragmentManager(),PROGRESS_FRAGMENT_TAG);
      }
    }
);
  }
  protected void onFileSaved(  File savedFile,  String mimeType){
    final MediaViewerActivity activity=(MediaViewerActivity)getActivity();
    if (activity == null)     return;
    final Uri fileUri=FileProvider.getUriForFile(activity,AUTHORITY_TWIDERE_FILE,savedFile);
    final Intent intent=new Intent(Intent.ACTION_SEND);
    intent.setDataAndType(fileUri,mimeType);
    intent.putExtra(Intent.EXTRA_STREAM,fileUri);
    intent.addFlags(Intent.FLAG_GRANT_READ_URI_PERMISSION);
    if (activity.hasStatus()) {
      final ParcelableStatus status=activity.getStatus();
      intent.putExtra(Intent.EXTRA_TEXT,Utils.getStatusShareText(activity,status));
      intent.putExtra(Intent.EXTRA_SUBJECT,Utils.getStatusShareSubject(activity,status));
    }
    startActivityForResult(Intent.createChooser(intent,activity.getString(R.string.share)),REQUEST_SHARE_IMAGE);
  }
}
;
task.execute();
return true;
}
}
return super.onOptionsItemSelected(item);
}
