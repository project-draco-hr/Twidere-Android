{
  if (mUri == null) {
    return Result.nullInstance();
  }
  final String scheme=mUri.getScheme();
  if ("http".equals(scheme) || "https".equals(scheme)) {
    final String url=mUri.toString();
    if (url == null)     return Result.nullInstance();
    File cacheFile=mDiskCache.get(url);
    if (cacheFile != null) {
      final int cachedValidity=ImageValidator.checkImageValidity(cacheFile);
      if (ImageValidator.isValid(cachedValidity)) {
        return decodeBitmapOnly(cacheFile,ImageValidator.isValidForRegionDecoder(cachedValidity));
      }
    }
    try {
      final InputStream is=mDownloader.getStream(url,new AccountFullImageExtra(mAccountId));
      if (is == null)       return Result.nullInstance();
      try {
        final long length=is.available();
        mHandler.post(new DownloadStartRunnable(this,mListener,length));
        mDiskCache.save(url,is,new IoUtils.CopyListener(){
          @Override public boolean onBytesCopied(          int current,          int total){
            mHandler.post(new ProgressUpdateRunnable(mListener,current));
            return !isAbandoned();
          }
        }
);
        mHandler.post(new DownloadFinishRunnable(this,mListener));
      }
  finally {
        IoUtils.closeSilently(is);
      }
      cacheFile=mDiskCache.get(url);
      final int downloadedValidity=ImageValidator.checkImageValidity(cacheFile);
      if (ImageValidator.isValid(downloadedValidity)) {
        return decodeBitmapOnly(cacheFile,ImageValidator.isValidForRegionDecoder(downloadedValidity));
      }
 else {
        mDiskCache.remove(url);
        throw new IOException();
      }
    }
 catch (    final Exception e) {
      mHandler.post(new DownloadErrorRunnable(this,mListener,e));
      return Result.getInstance(cacheFile,e);
    }
  }
 else   if (ContentResolver.SCHEME_FILE.equals(scheme)) {
    final File file=new File(mUri.getPath());
    try {
      return decodeBitmapOnly(file,ImageValidator.isValidForRegionDecoder(ImageValidator.checkImageValidity(file)));
    }
 catch (    final Exception e) {
      return Result.getInstance(file,e);
    }
  }
  return Result.nullInstance();
}
