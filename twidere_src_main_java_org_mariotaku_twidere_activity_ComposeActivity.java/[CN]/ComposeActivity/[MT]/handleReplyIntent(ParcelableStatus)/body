{
  if (status == null || status.id == null)   return false;
  final ParcelableAccount account=ParcelableAccountUtils.getAccount(this,status.account_key);
  if (account == null)   return false;
  int selectionStart=0;
  final Collection<String> mentions=new TreeSet<>(String.CASE_INSENSITIVE_ORDER);
  mEditText.append("@" + status.user_screen_name + " ");
  if (!status.account_key.equals(status.user_key)) {
    selectionStart=mEditText.length();
  }
  if (status.is_retweet) {
    mentions.add(status.retweeted_by_user_screen_name);
  }
  if (status.is_quote) {
    mentions.add(status.quoted_user_screen_name);
  }
  if (!ArrayUtils.isEmpty(status.mentions)) {
    for (    ParcelableUserMention mention : status.mentions) {
      if (mention.key.equals(status.account_key))       continue;
      mentions.add(mention.screen_name);
    }
    mentions.addAll(mExtractor.extractMentionedScreennames(status.quoted_text_plain));
  }
 else   if (USER_TYPE_FANFOU_COM.equals(status.account_key.getHost())) {
    addFanfouHtmlToMentions(status.text_unescaped,status.spans,mentions);
    if (status.is_quote) {
      addFanfouHtmlToMentions(status.quoted_text_unescaped,status.quoted_spans,mentions);
    }
  }
 else {
    mentions.addAll(mExtractor.extractMentionedScreennames(status.text_plain));
    if (status.is_quote) {
      mentions.addAll(mExtractor.extractMentionedScreennames(status.quoted_text_plain));
    }
  }
  for (  final String mention : mentions) {
    if (mention.equalsIgnoreCase(status.user_screen_name) || mention.equalsIgnoreCase(account.screen_name)) {
      continue;
    }
    mEditText.append("@" + mention + " ");
  }
  final int selectionEnd=mEditText.length();
  mEditText.setSelection(selectionStart,selectionEnd);
  mAccountsAdapter.setSelectedAccountIds(status.account_key);
  showReplyLabel(status);
  return true;
}
