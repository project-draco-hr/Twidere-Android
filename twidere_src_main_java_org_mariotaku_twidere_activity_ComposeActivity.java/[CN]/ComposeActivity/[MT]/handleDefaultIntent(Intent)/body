{
  if (intent == null)   return false;
  final String action=intent.getAction();
  final boolean hasAccountIds;
  if (intent.hasExtra(EXTRA_ACCOUNT_KEYS)) {
    final UserKey[] accountKeys=Utils.newParcelableArray(intent.getParcelableArrayExtra(EXTRA_ACCOUNT_KEYS),UserKey.CREATOR);
    mAccountsAdapter.setSelectedAccountIds(accountKeys);
    hasAccountIds=true;
  }
 else   if (intent.hasExtra(EXTRA_ACCOUNT_KEY)) {
    final UserKey accountKey=intent.getParcelableExtra(EXTRA_ACCOUNT_KEY);
    mAccountsAdapter.setSelectedAccountIds(accountKey);
    hasAccountIds=true;
  }
 else {
    hasAccountIds=false;
  }
  if (Intent.ACTION_SEND.equals(action)) {
    mShouldSaveAccounts=false;
    final Uri stream=intent.getParcelableExtra(Intent.EXTRA_STREAM);
    if (stream != null) {
      final Uri[] src={stream};
      final Uri[] dst={createTempImageUri(0)};
      AsyncTaskUtils.executeTask(new AddMediaTask(this,src,dst,getMediaType(intent.getType(),ParcelableMedia.Type.IMAGE),false));
    }
  }
 else   if (Intent.ACTION_SEND_MULTIPLE.equals(action)) {
    mShouldSaveAccounts=false;
    final List<Uri> extraStream=intent.getParcelableArrayListExtra(Intent.EXTRA_STREAM);
    if (extraStream != null) {
      final Uri[] src=extraStream.toArray(new Uri[extraStream.size()]);
      final Uri[] dst=new Uri[extraStream.size()];
      for (int i=0; i < dst.length; i++) {
        dst[i]=createTempImageUri(i);
      }
      AsyncTaskUtils.executeTask(new AddMediaTask(this,src,dst,getMediaType(intent.getType(),ParcelableMedia.Type.IMAGE),false));
    }
  }
 else {
    mShouldSaveAccounts=!hasAccountIds;
    final Uri data=intent.getData();
    if (data != null) {
      final Uri[] src={data};
      final Uri[] dst={createTempImageUri(0)};
      AsyncTaskUtils.executeTask(new AddMediaTask(this,src,dst,getMediaType(intent.getType(),ParcelableMedia.Type.IMAGE),false));
    }
  }
  final CharSequence extraSubject=intent.getCharSequenceExtra(Intent.EXTRA_SUBJECT);
  final CharSequence extraText=intent.getCharSequenceExtra(Intent.EXTRA_TEXT);
  mEditText.setText(Utils.getShareStatus(this,extraSubject,extraText));
  final int selectionEnd=mEditText.length();
  mEditText.setSelection(selectionEnd);
  return true;
}
