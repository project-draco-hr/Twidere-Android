{
  final boolean sendByEnter=mPreferences.getBoolean(KEY_QUICK_SEND);
  EditTextEnterHandler.attach(mEditText,new EnterListener(){
    @Override public boolean shouldCallListener(){
      return mKeyMetaState == 0;
    }
    @Override public boolean onHitEnter(){
      confirmAndUpdateStatus();
      return true;
    }
  }
,sendByEnter);
  mEditText.addTextChangedListener(new TextWatcher(){
    @Override public void beforeTextChanged(    final CharSequence s,    final int start,    final int count,    final int after){
    }
    @Override public void onTextChanged(    final CharSequence s,    final int start,    final int before,    final int count){
      setMenu();
      updateTextCount();
      if (s instanceof Spannable && count == 1 && before == 0) {
        final ImageSpan[] imageSpans=((Spannable)s).getSpans(start,start + count,ImageSpan.class);
        List<String> imageSources=new ArrayList<>();
        for (        ImageSpan imageSpan : imageSpans) {
          imageSources.add(imageSpan.getSource());
          ((Spannable)s).setSpan(new MarkForDeleteSpan(),start,start + count,Spanned.SPAN_INCLUSIVE_INCLUSIVE);
        }
        if (!imageSources.isEmpty()) {
          final Intent intent=ThemedImagePickerActivity.withThemed(ComposeActivity.this).getImage(Uri.parse(imageSources.get(0))).build();
          startActivityForResult(intent,REQUEST_PICK_IMAGE);
        }
      }
    }
    @Override public void afterTextChanged(    final Editable s){
      mTextChanged=s.length() == 0;
      final MarkForDeleteSpan[] deletes=s.getSpans(0,s.length(),MarkForDeleteSpan.class);
      for (      MarkForDeleteSpan delete : deletes) {
        s.delete(s.getSpanStart(delete),s.getSpanEnd(delete));
        s.removeSpan(delete);
      }
      for (      Object span : s.getSpans(0,s.length(),UpdateAppearance.class)) {
        trimSpans(s,span);
      }
    }
    private void trimSpans(    Editable s,    Object span){
      if (span instanceof EmojiSpan)       return;
      if (span instanceof SuggestionSpan)       return;
      s.removeSpan(span);
    }
  }
);
  mEditText.setCustomSelectionActionModeCallback(this);
}
