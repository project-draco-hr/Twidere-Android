{
switch (item.getItemId()) {
case MENU_TAKE_PHOTO:
case R.id.take_photo_sub_item:
{
      takePhoto();
      break;
    }
case MENU_ADD_IMAGE:
case R.id.add_image_sub_item:
{
    pickImage();
    break;
  }
case MENU_ADD_LOCATION:
{
  toggleLocation();
  break;
}
case MENU_DRAFTS:
{
startActivity(new Intent(INTENT_ACTION_DRAFTS));
break;
}
case MENU_DELETE:
{
AsyncTaskUtils.executeTask(new DeleteImageTask(this));
break;
}
case MENU_TOGGLE_SENSITIVE:
{
if (!hasMedia()) return false;
mIsPossiblySensitive=!mIsPossiblySensitive;
setMenu();
updateTextCount();
break;
}
case MENU_VIEW:
{
if (mInReplyToStatus == null) return false;
final DialogFragment fragment=new ViewStatusDialogFragment();
final Bundle args=new Bundle();
args.putParcelable(EXTRA_STATUS,mInReplyToStatus);
fragment.setArguments(args);
fragment.show(getSupportFragmentManager(),"view_status");
break;
}
case R.id.link_to_quoted_status:
{
final boolean newValue=!item.isChecked();
item.setChecked(newValue);
mPreferences.edit().putBoolean(KEY_LINK_TO_QUOTED_TWEET,newValue).apply();
break;
}
default :
{
final Intent intent=item.getIntent();
if (intent != null) {
try {
final String action=intent.getAction();
if (INTENT_ACTION_EXTENSION_COMPOSE.equals(action)) {
final long[] accountIds=mAccountsAdapter.getSelectedAccountIds();
intent.putExtra(EXTRA_TEXT,ParseUtils.parseString(mEditText.getText()));
intent.putExtra(EXTRA_ACCOUNT_IDS,accountIds);
if (accountIds.length > 0) {
final long account_id=accountIds[0];
intent.putExtra(EXTRA_NAME,Utils.getAccountName(this,account_id));
intent.putExtra(EXTRA_SCREEN_NAME,Utils.getAccountScreenName(this,account_id));
}
if (mInReplyToStatusId > 0) {
intent.putExtra(EXTRA_IN_REPLY_TO_ID,mInReplyToStatusId);
}
if (mInReplyToStatus != null) {
intent.putExtra(EXTRA_IN_REPLY_TO_NAME,mInReplyToStatus.user_name);
intent.putExtra(EXTRA_IN_REPLY_TO_SCREEN_NAME,mInReplyToStatus.user_screen_name);
}
startActivityForResult(intent,REQUEST_EXTENSION_COMPOSE);
}
 else if (INTENT_ACTION_EXTENSION_EDIT_IMAGE.equals(action)) {
}
 else {
startActivity(intent);
}
}
 catch (final ActivityNotFoundException e) {
Log.w(LOGTAG,e);
return false;
}
}
break;
}
}
return true;
}
