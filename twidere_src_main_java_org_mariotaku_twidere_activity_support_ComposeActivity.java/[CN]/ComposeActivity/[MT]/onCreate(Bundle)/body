{
  super.onCreate(savedInstanceState);
  GeneralComponentHelper.build(this).inject(this);
  mLocationManager=(LocationManager)getSystemService(Context.LOCATION_SERVICE);
  mNameFirst=mPreferences.getBoolean(KEY_NAME_FIRST);
  setContentView(R.layout.activity_compose);
  setFinishOnTouchOutside(false);
  final ParcelableCredentials[] accounts=DataStoreUtils.getCredentialsArray(this,false,false);
  if (accounts.length <= 0) {
    final Intent intent=new Intent(INTENT_ACTION_TWITTER_LOGIN);
    intent.setClass(this,SignInActivity.class);
    startActivity(intent);
    finish();
    return;
  }
  final long[] defaultAccountIds=DataStoreUtils.getAccountIds(accounts);
  mMenuBar.setOnMenuItemClickListener(this);
  setupEditText();
  mAccountSelectorContainer.setOnClickListener(this);
  mAccountSelectorButton.setOnClickListener(this);
  mLocationContainer.setOnClickListener(this);
  final LinearLayoutManager linearLayoutManager=new FixedLinearLayoutManager(this);
  linearLayoutManager.setOrientation(LinearLayoutManager.VERTICAL);
  linearLayoutManager.setStackFromEnd(true);
  mAccountSelector.setLayoutManager(linearLayoutManager);
  mAccountSelector.addItemDecoration(new SpacingItemDecoration(this));
  mAccountSelector.setItemAnimator(new DefaultItemAnimator());
  mAccountsAdapter=new AccountIconsAdapter(this);
  mAccountSelector.setAdapter(mAccountsAdapter);
  mAccountsAdapter.setAccounts(accounts);
  mMediaPreviewAdapter=new MediaPreviewAdapter(this,new PreviewGridOnStartDragListener(this));
  mItemTouchHelper=new ItemTouchHelper(new AttachedMediaItemTouchHelperCallback(mMediaPreviewAdapter));
  final LinearLayoutManager layoutManager=new LinearLayoutManager(this);
  layoutManager.setOrientation(LinearLayoutManager.HORIZONTAL);
  mAttachedMediaPreview.setLayoutManager(layoutManager);
  mAttachedMediaPreview.setAdapter(mMediaPreviewAdapter);
  mItemTouchHelper.attachToRecyclerView(mAttachedMediaPreview);
  final int previewGridSpacing=getResources().getDimensionPixelSize(R.dimen.element_spacing_small);
  mAttachedMediaPreview.addItemDecoration(new PreviewGridItemDecoration(previewGridSpacing));
  final Intent intent=getIntent();
  if (savedInstanceState != null) {
    mAccountsAdapter.setSelectedAccountIds(savedInstanceState.getLongArray(EXTRA_ACCOUNT_IDS));
    mIsPossiblySensitive=savedInstanceState.getBoolean(EXTRA_IS_POSSIBLY_SENSITIVE);
    final ArrayList<ParcelableMediaUpdate> mediaList=savedInstanceState.getParcelableArrayList(EXTRA_MEDIA);
    if (mediaList != null) {
      addMedia(mediaList);
    }
    mInReplyToStatus=savedInstanceState.getParcelable(EXTRA_STATUS);
    mMentionUser=savedInstanceState.getParcelable(EXTRA_USER);
    mDraftItem=savedInstanceState.getParcelable(EXTRA_DRAFT);
    mShouldSaveAccounts=savedInstanceState.getBoolean(EXTRA_SHOULD_SAVE_ACCOUNTS);
    mOriginalText=savedInstanceState.getString(EXTRA_ORIGINAL_TEXT);
  }
 else {
    final int notificationId=intent.getIntExtra(EXTRA_NOTIFICATION_ID,-1);
    final long notificationAccount=intent.getLongExtra(EXTRA_NOTIFICATION_ACCOUNT,-1);
    if (notificationId != -1) {
      mTwitterWrapper.clearNotificationAsync(notificationId,notificationAccount);
    }
    if (!handleIntent(intent)) {
      handleDefaultIntent(intent);
    }
    final long[] selectedAccountIds=mAccountsAdapter.getSelectedAccountIds();
    if (selectedAccountIds.length == 0) {
      final long[] idsInPrefs=TwidereArrayUtils.parseLongArray(mPreferences.getString(KEY_COMPOSE_ACCOUNTS,null),',');
      final long[] intersection=TwidereArrayUtils.intersection(idsInPrefs,defaultAccountIds);
      mAccountsAdapter.setSelectedAccountIds(intersection.length > 0 ? intersection : defaultAccountIds);
    }
    mOriginalText=ParseUtils.parseString(mEditText.getText());
  }
  if (!setComposeTitle(intent)) {
    setTitle(R.string.compose);
  }
  final Menu menu=mMenuBar.getMenu();
  getMenuInflater().inflate(R.menu.menu_compose,menu);
  ThemeUtils.wrapMenuIcon(mMenuBar);
  mSendView.setOnClickListener(this);
  mSendView.setOnLongClickListener(this);
  final Intent composeExtensionsIntent=new Intent(INTENT_ACTION_EXTENSION_COMPOSE);
  MenuUtils.addIntentToMenu(this,menu,composeExtensionsIntent,MENU_GROUP_COMPOSE_EXTENSION);
  final Intent imageExtensionsIntent=new Intent(INTENT_ACTION_EXTENSION_EDIT_IMAGE);
  final MenuItem mediaMenuItem=menu.findItem(R.id.media_menu);
  if (mediaMenuItem != null && mediaMenuItem.hasSubMenu()) {
    MenuUtils.addIntentToMenu(this,mediaMenuItem.getSubMenu(),imageExtensionsIntent,MENU_GROUP_IMAGE_EXTENSION);
  }
  setMenu();
  updateLocationState();
  notifyAccountSelectionChanged();
  mTextChanged=false;
  updateAttachedMediaView();
}
