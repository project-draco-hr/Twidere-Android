{
  if (intent == null)   return false;
  final String action=intent.getAction();
  final boolean hasAccountIds;
  if (intent.hasExtra(EXTRA_ACCOUNT_IDS)) {
    mAccountsAdapter.setSelectedAccountIds(intent.getLongArrayExtra(EXTRA_ACCOUNT_IDS));
    hasAccountIds=true;
  }
 else   if (intent.hasExtra(EXTRA_ACCOUNT_ID)) {
    mAccountsAdapter.setSelectedAccountIds(intent.getLongExtra(EXTRA_ACCOUNT_ID,-1));
    hasAccountIds=true;
  }
 else {
    hasAccountIds=false;
  }
  mShouldSaveAccounts=!Intent.ACTION_SEND.equals(action) && !Intent.ACTION_SEND_MULTIPLE.equals(action) && !hasAccountIds;
  final Uri data=intent.getData();
  final CharSequence extraSubject=intent.getCharSequenceExtra(Intent.EXTRA_SUBJECT);
  final CharSequence extraText=intent.getCharSequenceExtra(Intent.EXTRA_TEXT);
  final Uri extraStream=intent.getParcelableExtra(Intent.EXTRA_STREAM);
  if (extraStream != null) {
    AsyncTaskUtils.executeTask(new AddMediaTask(this,extraStream,createTempImageUri(),ParcelableMedia.TYPE_IMAGE,false));
  }
 else   if (data != null) {
    AsyncTaskUtils.executeTask(new AddMediaTask(this,data,createTempImageUri(),ParcelableMedia.TYPE_IMAGE,false));
  }
 else   if (intent.hasExtra(EXTRA_SHARE_SCREENSHOT) && Utils.useShareScreenshot()) {
    final Bitmap bitmap=intent.getParcelableExtra(EXTRA_SHARE_SCREENSHOT);
    if (bitmap != null) {
      try {
        AsyncTaskUtils.executeTask(new AddBitmapTask(this,bitmap,createTempImageUri(),ParcelableMedia.TYPE_IMAGE));
      }
 catch (      IOException e) {
        bitmap.recycle();
      }
    }
  }
  mEditText.setText(getShareStatus(this,extraSubject,extraText));
  final int selection_end=mEditText.length();
  mEditText.setSelection(selection_end);
  return true;
}
