{
  if (isFinishing())   return;
  final boolean hasMedia=hasMedia();
  final String text=mEditText != null ? ParseUtils.parseString(mEditText.getText()) : null;
  final int tweetLength=mValidator.getTweetLength(text), maxLength=mValidator.getMaxTweetLength();
  if (!mStatusShortenerUsed && tweetLength > maxLength) {
    mEditText.setError(getString(R.string.error_message_status_too_long));
    final int textLength=mEditText.length();
    mEditText.setSelection(textLength - (tweetLength - maxLength),textLength);
    return;
  }
 else   if (!hasMedia && (TextUtils.isEmpty(text) || noReplyContent(text))) {
    mEditText.setError(getString(R.string.error_message_no_content));
    return;
  }
 else   if (mAccountsAdapter.isSelectionEmpty()) {
    mEditText.setError(getString(R.string.no_account_selected));
    return;
  }
  final boolean attachLocation=mPreferences.getBoolean(KEY_ATTACH_LOCATION,false);
  final long[] accountIds=mAccountsAdapter.getSelectedAccountIds();
  final ParcelableLocation statusLocation=attachLocation ? mRecentLocation : null;
  final boolean isPossiblySensitive=hasMedia && mIsPossiblySensitive;
  final ParcelableStatusUpdate update=new ParcelableStatusUpdate();
  @Draft.Action String action;
  if (mDraft != null) {
    action=mDraft.action_type;
  }
 else {
    action=getDraftAction(getIntent().getAction());
  }
  update.accounts=DataStoreUtils.getAccounts(this,accountIds);
  update.text=text;
  update.location=statusLocation;
  update.media=getMedia();
  update.in_reply_to_status=mInReplyToStatus;
  update.is_possibly_sensitive=isPossiblySensitive;
  BackgroundOperationService.updateStatusesAsync(this,action,update);
  if (mPreferences.getBoolean(KEY_NO_CLOSE_AFTER_TWEET_SENT,false) && mInReplyToStatus == null) {
    mIsPossiblySensitive=false;
    mShouldSaveAccounts=true;
    mInReplyToStatus=null;
    mMentionUser=null;
    mDraft=null;
    mOriginalText=null;
    mEditText.setText(null);
    clearMedia();
    final Intent intent=new Intent(INTENT_ACTION_COMPOSE);
    setIntent(intent);
    setComposeTitle(intent);
    handleIntent(intent);
    setMenu();
    updateTextCount();
  }
 else {
    setResult(Activity.RESULT_OK);
    finish();
  }
}
