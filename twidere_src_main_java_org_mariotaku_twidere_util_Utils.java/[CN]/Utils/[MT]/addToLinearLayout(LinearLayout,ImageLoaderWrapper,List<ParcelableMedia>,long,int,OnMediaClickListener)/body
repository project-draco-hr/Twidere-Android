{
  if (container.getOrientation() != LinearLayout.VERTICAL)   throw new IllegalArgumentException();
  final Context context=container.getContext();
  final ImageLoadingHandler loadingHandler=new ImageLoadingHandler(R.id.media_preview_progress);
  final LayoutInflater inflater=LayoutInflater.from(context);
  final ListIterator<ParcelableMedia> iterator=mediaList.listIterator();
  final int imageCount=mediaList.size();
  final double imageCountSqrt=Math.sqrt(imageCount);
  final int bestColumnCount=imageCountSqrt % 1 == 0 ? (int)imageCountSqrt : maxColumnCount;
  final int firstColumn=imageCount % bestColumnCount, fullRowCount=imageCount / bestColumnCount;
  final int rowCount=fullRowCount + (firstColumn > 0 ? 1 : 0);
  final View.OnClickListener clickListener=new ImageGridClickListener(mediaClickListener,accountId);
  container.setMotionEventSplittingEnabled(false);
  for (int currentRow=0; currentRow < rowCount; currentRow++) {
    final LinearLayout rowContainer=new LinearLayout(context);
    rowContainer.setOrientation(LinearLayout.HORIZONTAL);
    rowContainer.setMotionEventSplittingEnabled(false);
    container.addView(rowContainer,LinearLayout.LayoutParams.MATCH_PARENT,LinearLayout.LayoutParams.WRAP_CONTENT);
    final int columnCount=currentRow == 0 && firstColumn > 0 ? firstColumn : bestColumnCount;
    for (int currentColumn=0; currentColumn < columnCount; currentColumn++) {
      final ParcelableMedia media=iterator.next();
      final View item=inflater.inflate(R.layout.grid_item_media_preview,rowContainer,false);
      item.setTag(media);
      if (mediaClickListener != null) {
        item.setOnClickListener(clickListener);
      }
      final LinearLayout.LayoutParams lp=(LinearLayout.LayoutParams)item.getLayoutParams();
      lp.weight=1.0f;
      rowContainer.addView(item,lp);
      final ImageView imageView=(ImageView)item.findViewById(R.id.media_preview_item);
      loader.displayPreviewImage(imageView,media.page_url,loadingHandler);
    }
  }
}
