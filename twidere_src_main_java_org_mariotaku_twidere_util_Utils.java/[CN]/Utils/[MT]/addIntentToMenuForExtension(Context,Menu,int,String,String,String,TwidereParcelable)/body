{
  if (context == null || menu == null || action == null || parelableKey == null || parcelable == null)   return;
  final PackageManager pm=context.getPackageManager();
  final Resources res=context.getResources();
  final float density=res.getDisplayMetrics().density;
  final int padding=Math.round(density * 4);
  final Intent queryIntent=new Intent(action);
  queryIntent.setExtrasClassLoader(context.getClassLoader());
  final List<ResolveInfo> activities=pm.queryIntentActivities(queryIntent,PackageManager.GET_META_DATA);
  for (  final ResolveInfo info : activities) {
    final Intent intent=new Intent(queryIntent);
    if (isExtensionUseJSON(info)) {
      intent.putExtra(parelableJSONKey,JSONSerializer.toJSONObjectString(parcelable));
    }
 else {
      intent.putExtra(parelableKey,parcelable);
    }
    intent.setClassName(info.activityInfo.packageName,info.activityInfo.name);
    final MenuItem item=menu.add(groupId,Menu.NONE,Menu.NONE,info.loadLabel(pm));
    item.setIntent(intent);
    final Drawable metaDataDrawable=getMetadataDrawable(pm,info.activityInfo,METADATA_KEY_EXTENSION_ICON);
    int actionIconColor;
    if (context instanceof ITwidereContextWrapper) {
      final int themeResId=((ITwidereContextWrapper)context).getThemeResourceId();
      actionIconColor=ThemeUtils.getActionIconColor(themeResId);
    }
 else {
      actionIconColor=ThemeUtils.getActionIconColor(context);
    }
    if (metaDataDrawable != null) {
      metaDataDrawable.mutate();
      metaDataDrawable.setColorFilter(actionIconColor,PorterDuff.Mode.MULTIPLY);
      item.setIcon(metaDataDrawable);
    }
 else {
      final Drawable icon=info.loadIcon(pm);
      final int iw=icon.getIntrinsicWidth(), ih=icon.getIntrinsicHeight();
      if (iw > 0 && ih > 0) {
        final Drawable iconWithPadding=new PaddingDrawable(icon,padding);
        iconWithPadding.setBounds(0,0,iw,ih);
        item.setIcon(iconWithPadding);
      }
 else {
        item.setIcon(icon);
      }
    }
  }
}
