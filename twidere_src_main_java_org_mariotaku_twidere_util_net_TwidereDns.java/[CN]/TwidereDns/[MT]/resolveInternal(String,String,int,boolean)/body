{
  final TimingLogger logger=new TimingLogger(RESOLVER_LOGTAG,"resolve");
  final List<InetAddress> fromAddressString=fromAddressString(originalHost,host);
  if (fromAddressString != null) {
    if (BuildConfig.DEBUG) {
      addLogSplit(logger,host,"valid ip address",depth);
      dumpLog(logger,fromAddressString);
    }
    return fromAddressString;
  }
  addLogSplit(logger,host,"start custom mapping resolve",depth);
  final List<InetAddress> fromMapping=getFromMapping(host);
  addLogSplit(logger,host,"end custom mapping resolve",depth);
  if (fromMapping != null) {
    if (BuildConfig.DEBUG) {
      dumpLog(logger,fromMapping);
    }
    return fromMapping;
  }
  if (useResolver) {
    addLogSplit(logger,host,"start /etc/hosts resolve",depth);
    final List<InetAddress> fromSystemHosts=fromSystemHosts(host);
    addLogSplit(logger,host,"end /etc/hosts resolve",depth);
    if (fromSystemHosts != null) {
      if (BuildConfig.DEBUG) {
        dumpLog(logger,fromSystemHosts);
      }
      return fromSystemHosts;
    }
    addLogSplit(logger,host,"start resolver resolve",depth);
    final List<InetAddress> fromResolver=fromResolver(originalHost,host);
    addLogSplit(logger,host,"end resolver resolve",depth);
    if (fromResolver != null) {
      if (BuildConfig.DEBUG) {
        dumpLog(logger,fromResolver);
      }
      return fromResolver;
    }
  }
  addLogSplit(logger,host,"start system default resolve",depth);
  final List<InetAddress> fromDefault=Arrays.asList(InetAddress.getAllByName(host));
  addLogSplit(logger,host,"end system default resolve",depth);
  if (BuildConfig.DEBUG) {
    dumpLog(logger,fromDefault);
  }
  return fromDefault;
}
