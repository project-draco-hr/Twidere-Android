{
  this.th=th;
  final StackTraceElement[] stackTrace=th.getStackTrace();
  stackLineHash=0;
  lineNumberHash=0;
  for (int i=stackTrace.length - 1; i >= 0; i--) {
    final StackTraceElement line=stackTrace[i];
    for (    final String filter : inclusionFilter) {
      if (line.getClassName().startsWith(filter)) {
        final int hash=line.getClassName().hashCode() + line.getMethodName().hashCode();
        stackLineHash=31 * stackLineHash + hash;
        lineNumberHash=31 * lineNumberHash + line.getLineNumber();
        break;
      }
    }
  }
  hexString+=toHexString(stackLineHash) + "-" + toHexString(lineNumberHash);
  if (th.getCause() != null) {
    hexString+=" " + new ExceptionDiagnosis(th.getCause(),inclusionFilter).asHexString();
  }
}
