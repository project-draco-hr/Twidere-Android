{
  final String uuid=HotMobiLogger.getInstallationSerialId(context);
  final File logsDir=HotMobiLogger.getLogsDir(context);
  boolean hasErrors=false;
  final String todayDir=HotMobiLogger.DATE_FORMAT.format(new Date());
  final FilenameFilter filter=new FilenameFilter(){
    @Override public boolean accept(    File dir,    String filename){
      return !filename.equalsIgnoreCase(todayDir);
    }
  }
;
  File[] dayLogsDirs=logsDir.listFiles(filter);
  if (dayLogsDirs == null)   return false;
  for (  File dayLogsDir : dayLogsDirs) {
    File[] logFiles=dayLogsDir.listFiles();
    if (logFiles == null)     continue;
    boolean succeeded=true;
    for (    File logFile : logFiles) {
      OutputStream os=null;
      InputStream is=null;
      try {
        final UploadLogEvent uploadLogEvent=UploadLogEvent.create(context,logFile);
        HttpURLConnection conn=(HttpURLConnection)new URL("http://www.dnext.xyz/usage/upload").openConnection();
        conn.setRequestProperty("X-HotMobi-UUID",uuid);
        conn.setRequestProperty("X-HotMobi-Date",dayLogsDir.getName());
        conn.setRequestProperty("X-HotMobi-FileName",logFile.getName());
        conn.setRequestProperty("User-Agent",String.format(Locale.ROOT,"HotMobi (Twidere %s %d)",BuildConfig.VERSION_NAME,BuildConfig.VERSION_CODE));
        conn.setRequestMethod("POST");
        conn.setDoOutput(true);
        os=conn.getOutputStream();
        is=new FileInputStream(logFile);
        Utils.copyStream(is,os);
        final int responseCode=conn.getResponseCode();
        if (responseCode >= 200 && responseCode < 300) {
          uploadLogEvent.finish(conn);
          if (!uploadLogEvent.shouldSkip()) {
            HotMobiLogger.getInstance(context).log(uploadLogEvent);
          }
          succeeded&=logFile.delete();
        }
      }
 catch (      IOException e) {
        Log.w(HotMobiLogger.LOGTAG,e);
        succeeded=false;
        hasErrors=true;
      }
 finally {
        Utils.closeSilently(is);
        Utils.closeSilently(os);
      }
    }
    if (succeeded) {
      dayLogsDir.delete();
    }
  }
  return hasErrors;
}
