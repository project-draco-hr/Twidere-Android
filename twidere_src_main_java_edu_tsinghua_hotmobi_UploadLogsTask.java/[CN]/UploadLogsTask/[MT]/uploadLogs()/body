{
  final String uuid=HotMobiLogger.getInstallationSerialId(context);
  final File logsDir=HotMobiLogger.getLogsDir(context);
  boolean hasErrors=false;
  final String todayDir=HotMobiLogger.DATE_FORMAT.format(new Date());
  final FilenameFilter filter=new FilenameFilter(){
    @Override public boolean accept(    File dir,    String filename){
      return !filename.equalsIgnoreCase(todayDir);
    }
  }
;
  for (  Object dayLogsDirObj : ArrayUtils.nullToEmpty(logsDir.listFiles(filter))) {
    final File dayLogsDir=(File)dayLogsDirObj;
    boolean succeeded=true;
    for (    Object logFileObj : ArrayUtils.nullToEmpty(dayLogsDir.listFiles())) {
      File logFile=(File)logFileObj;
      FileBody body=null;
      HttpResponse response=null;
      try {
        final HttpRequest.Builder builder=new HttpRequest.Builder();
        builder.method(POST.METHOD);
        builder.url("http://www.dnext.xyz/usage/upload");
        final MultiValueMap<String> headers=new MultiValueMap<>();
        headers.add("X-HotMobi-UUID",uuid);
        headers.add("X-HotMobi-Date",dayLogsDir.getName());
        headers.add("X-HotMobi-FileName",logFile.getName());
        headers.add("User-Agent",String.format(Locale.ROOT,"HotMobi (Twidere %s %d)",BuildConfig.VERSION_NAME,BuildConfig.VERSION_CODE));
        builder.headers(headers);
        body=new FileBody(logFile);
        builder.body(body);
        final UploadLogEvent uploadLogEvent=UploadLogEvent.create(context,logFile);
        response=client.newCall(builder.build()).execute();
        if (response.isSuccessful()) {
          uploadLogEvent.finish(response);
          if (!uploadLogEvent.shouldSkip()) {
            HotMobiLogger.getInstance(context).log(uploadLogEvent);
          }
          succeeded&=logFile.delete();
        }
      }
 catch (      IOException e) {
        Log.w(HotMobiLogger.LOGTAG,e);
        succeeded=false;
        hasErrors=true;
      }
 finally {
        Utils.closeSilently(body);
        Utils.closeSilently(response);
      }
    }
    if (succeeded) {
      BugReporter.logIfFalse(dayLogsDir.delete(),"Unable to delete log dir");
    }
  }
  return hasErrors;
}
