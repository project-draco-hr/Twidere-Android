{
  final Bundle args=getArguments();
  if (args == null || !args.containsKey(EXTRA_STATUS))   return new FilterItemInfo[0];
  final ParcelableStatus status=args.getParcelable(EXTRA_STATUS);
  if (status == null)   return new FilterItemInfo[0];
  final ArrayList<FilterItemInfo> list=new ArrayList<>();
  if (status.is_retweet) {
    list.add(new FilterItemInfo(FilterItemInfo.FILTER_TYPE_USER,new UserItem(status.retweeted_by_user_id,status.retweeted_by_user_name,status.retweeted_by_user_screen_name)));
  }
  if (status.is_quote) {
    list.add(new FilterItemInfo(FilterItemInfo.FILTER_TYPE_USER,new UserItem(status.quoted_user_id,status.quoted_user_name,status.quoted_user_screen_name)));
  }
  list.add(new FilterItemInfo(FilterItemInfo.FILTER_TYPE_USER,new UserItem(status.user_id,status.user_name,status.user_screen_name)));
  final ParcelableUserMention[] mentions=status.mentions;
  if (mentions != null) {
    for (    final ParcelableUserMention mention : mentions) {
      if (mention.id != status.user_id) {
        list.add(new FilterItemInfo(FilterItemInfo.FILTER_TYPE_USER,mention));
      }
    }
  }
  final HashSet<String> hashtags=new HashSet<>();
  hashtags.addAll(mExtractor.extractHashtags(status.text_plain));
  for (  final String hashtag : hashtags) {
    list.add(new FilterItemInfo(FilterItemInfo.FILTER_TYPE_KEYWORD,hashtag));
  }
  final String source=HtmlEscapeHelper.toPlainText(status.source);
  list.add(new FilterItemInfo(FilterItemInfo.FILTER_TYPE_SOURCE,source));
  return list.toArray(new FilterItemInfo[list.size()]);
}
