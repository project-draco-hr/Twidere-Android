{
  final ParcelableActivitiesAdapter adapter=getAdapter();
  final boolean rememberPosition=mPreferences.getBoolean(KEY_REMEMBER_POSITION,false);
  final boolean readFromBottom=mPreferences.getBoolean(KEY_READ_FROM_BOTTOM,false);
  long lastReadId;
  final int lastVisiblePos, lastVisibleTop;
  final String tag=getCurrentReadPositionTag();
  final LinearLayoutManager layoutManager=getLayoutManager();
  if (readFromBottom) {
    lastVisiblePos=layoutManager.findLastVisibleItemPosition();
  }
 else {
    lastVisiblePos=layoutManager.findFirstVisibleItemPosition();
  }
  if (lastVisiblePos != RecyclerView.NO_POSITION && lastVisiblePos < adapter.getItemCount()) {
    final int activityStartIndex=adapter.getActivityStartIndex();
    final int activityEndIndex=activityStartIndex + adapter.getActivityCount();
    final int lastItemIndex=Math.min(activityEndIndex,lastVisiblePos);
    lastReadId=adapter.getTimestamp(lastItemIndex);
    final View positionView=layoutManager.findViewByPosition(lastItemIndex);
    lastVisibleTop=positionView != null ? positionView.getTop() : 0;
  }
 else   if (rememberPosition && tag != null) {
    lastReadId=mReadStateManager.getPosition(tag);
    lastVisibleTop=0;
  }
 else {
    lastReadId=-1;
    lastVisibleTop=0;
  }
  adapter.setData(data);
  final int activityStartIndex=adapter.getActivityStartIndex();
  final int activityEndExclusiveIndex=activityStartIndex + adapter.getActivityCount();
  if (activityEndExclusiveIndex >= 0 && rememberPosition && tag != null) {
    final long lastItemId=adapter.getTimestamp(activityEndExclusiveIndex);
    if (lastItemId > 0 && lastReadId < lastItemId) {
      lastReadId=lastItemId;
    }
  }
  setRefreshEnabled(true);
  if (!(loader instanceof IExtendedLoader) || ((IExtendedLoader)loader).isFromUser()) {
    adapter.setLoadMoreSupportedPosition(hasMoreData(data) ? IndicatorPosition.END : IndicatorPosition.NONE);
    int pos=-1;
    for (int i=activityStartIndex; i < activityEndExclusiveIndex; i++) {
      if (lastReadId != -1 && adapter.getTimestamp(i) <= lastReadId) {
        pos=i;
        break;
      }
    }
    if (pos != -1 && adapter.isActivity(pos) && (readFromBottom || lastVisiblePos != 0)) {
      if (layoutManager.getHeight() == 0) {
        layoutManager.scrollToPositionWithOffset(pos,lastVisibleTop);
      }
 else {
        layoutManager.scrollToPositionWithOffset(pos,lastVisibleTop - layoutManager.getPaddingTop());
      }
    }
  }
  if (loader instanceof IExtendedLoader) {
    ((IExtendedLoader)loader).setFromUser(false);
  }
  onLoadingFinished();
}
