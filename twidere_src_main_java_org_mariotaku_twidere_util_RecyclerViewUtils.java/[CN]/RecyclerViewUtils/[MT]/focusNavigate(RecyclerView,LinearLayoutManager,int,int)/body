{
  if (direction == 0)   return;
  if (currentFocus < 0) {
    focusFallback(layoutManager);
  }
 else {
    final View view;
    if (direction > 0 && currentFocus == layoutManager.findLastVisibleItemPosition()) {
      view=recyclerView.focusSearch(recyclerView.getFocusedChild(),View.FOCUS_DOWN);
    }
 else     if (direction < 0 && currentFocus == layoutManager.findFirstVisibleItemPosition()) {
      view=recyclerView.focusSearch(recyclerView.getFocusedChild(),View.FOCUS_UP);
    }
 else {
      view=null;
    }
    final View firstVisibleView=layoutManager.findViewByPosition(currentFocus + (direction > 0 ? 1 : -1));
    final View viewToFocus;
    if (firstVisibleView != null) {
      viewToFocus=firstVisibleView;
    }
 else     if (view != null) {
      viewToFocus=findRecyclerViewChild(recyclerView,view);
    }
 else {
      viewToFocus=null;
    }
    if (viewToFocus == null)     return;
    final int nextPos=layoutManager.getPosition(viewToFocus);
    if (nextPos < 0 || (nextPos - currentFocus) * direction < 0) {
      focusFallback(layoutManager);
      return;
    }
    viewToFocus.requestFocus();
  }
}
