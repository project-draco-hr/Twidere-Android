{
  StrictModeUtils.checkDiskIO();
  if (resolver == null || uri == null || isEmpty(in_column) || col_values == null || col_values.length == 0)   return 0;
  final int col_values_length=col_values.length, blocks_count=col_values_length / MAX_DELETE_COUNT + 1;
  int rows_deleted=0;
  for (int i=0; i < blocks_count; i++) {
    final int start=i * MAX_DELETE_COUNT, end=Math.min(start + MAX_DELETE_COUNT,col_values_length);
    final String[] block=ArrayUtils.toStringArray(ArrayUtils.subArray(col_values,start,end));
    if (values_is_string) {
      final StringBuilder where=new StringBuilder(in_column + " IN(" + ArrayUtils.toStringForSQL(block)+ ")");
      if (!isEmpty(extra_where)) {
        where.append("AND ").append(extra_where);
      }
      rows_deleted+=resolver.delete(uri,where.toString(),block);
    }
 else {
      final StringBuilder where=new StringBuilder(in_column + " IN(" + ArrayUtils.toString(block,',',true)+ ")");
      if (!isEmpty(extra_where)) {
        where.append("AND ").append(extra_where);
      }
      rows_deleted+=resolver.delete(uri,where.toString(),null);
    }
  }
  return rows_deleted;
}
