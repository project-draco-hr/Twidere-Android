{
  final ArrayList<ParcelableStatus> list=new ArrayList<>();
  try {
    ParcelableStatus status=params[0];
    final long accountId=status.account_id;
    if (Utils.isOfficialKeyAccount(context,accountId)) {
      final Twitter twitter=TwitterAPIFactory.getTwitterInstance(context,accountId,true);
      while (status.in_reply_to_status_id > 0 && !isCancelled()) {
        final ParcelableStatus cached=Utils.findStatusInDatabases(context,accountId,status.in_reply_to_status_id);
        if (cached == null)         break;
        status=cached;
        publishProgress(status);
        list.add(0,status);
      }
      final Paging paging=new Paging();
      final long id=status.is_retweet ? status.retweet_id : status.id;
      paging.setMaxId(id);
      final List<ParcelableStatus> conversations=new ArrayList<>();
      for (      org.mariotaku.twidere.api.twitter.model.Status item : twitter.showConversation(id,paging)) {
        if (item.getId() < id) {
          final ParcelableStatus conversation=new ParcelableStatus(item,accountId,false);
          publishProgress(conversation);
          conversations.add(conversation);
        }
      }
      list.addAll(0,conversations);
    }
 else {
      while (status.in_reply_to_status_id > 0 && !isCancelled()) {
        status=Utils.findStatus(context,accountId,status.in_reply_to_status_id);
        publishProgress(status);
        list.add(0,status);
      }
    }
  }
 catch (  final TwitterException e) {
    return ListResponse.getListInstance(e);
  }
  return ListResponse.getListInstance(list);
}
