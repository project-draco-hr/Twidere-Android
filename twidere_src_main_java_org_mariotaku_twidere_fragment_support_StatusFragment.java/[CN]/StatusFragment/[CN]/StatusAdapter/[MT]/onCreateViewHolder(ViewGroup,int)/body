{
switch (viewType) {
case VIEW_TYPE_DETAIL_STATUS:
{
      final View view;
      if (mIsCompact) {
        view=mInflater.inflate(R.layout.header_status_compact,parent,false);
        final View cardView=view.findViewById(R.id.compact_card);
        cardView.setBackgroundColor(mCardBackgroundColor);
      }
 else {
        view=mInflater.inflate(R.layout.header_status,parent,false);
        final CardView cardView=(CardView)view.findViewById(R.id.card);
        cardView.setCardBackgroundColor(mCardBackgroundColor);
      }
      return new DetailStatusViewHolder(this,view);
    }
case VIEW_TYPE_LIST_STATUS:
{
    final View view=mInflater.inflate(mCardLayoutResource,parent,false);
    final CardView cardView=(CardView)view.findViewById(R.id.card);
    if (cardView != null) {
      cardView.setCardBackgroundColor(mCardBackgroundColor);
    }
    final StatusViewHolder holder=new StatusViewHolder(this,view);
    holder.setupViewOptions();
    holder.setOnClickListeners();
    return holder;
  }
case VIEW_TYPE_CONVERSATION_LOAD_INDICATOR:
case VIEW_TYPE_REPLIES_LOAD_INDICATOR:
{
  final View view=mInflater.inflate(R.layout.card_item_load_indicator,parent,false);
  return new LoadIndicatorViewHolder(view);
}
case VIEW_TYPE_SPACE:
{
return new SpaceViewHolder(new Space(getContext()));
}
case VIEW_TYPE_REPLY_ERROR:
{
final View view=mInflater.inflate(R.layout.adapter_item_status_error,parent,false);
return new StatusErrorItemViewHolder(view);
}
}
return null;
}
