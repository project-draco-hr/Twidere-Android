{
  menuBar.setOnMenuItemClickListener(this);
  final StatusFragment fragment=adapter.getFragment();
  final FragmentActivity activity=fragment.getActivity();
  final MenuInflater inflater=activity.getMenuInflater();
  inflater.inflate(R.menu.menu_status,menuBar.getMenu());
  ThemeUtils.wrapMenuIcon(menuBar,MENU_GROUP_STATUS_SHARE);
  mediaPreviewLoad.setOnClickListener(this);
  profileContainer.setOnClickListener(this);
  retweetsContainer.setOnClickListener(this);
  retweetedByContainer.setOnClickListener(this);
  locationView.setOnClickListener(this);
  final float defaultTextSize=adapter.getTextSize();
  nameView.setTextSize(defaultTextSize * 1.25f);
  textView.setTextSize(defaultTextSize * 1.25f);
  screenNameView.setTextSize(defaultTextSize * 0.85f);
  locationView.setTextSize(defaultTextSize * 0.85f);
  timeSourceView.setTextSize(defaultTextSize * 0.85f);
  textView.setMovementMethod(StatusContentMovementMethod.getInstance());
  textView.setCustomSelectionActionModeCallback(new Callback(){
    @Override public boolean onCreateActionMode(    ActionMode mode,    Menu menu){
      final FragmentActivity activity=fragment.getActivity();
      if (activity instanceof IThemedActivity) {
        final int themeRes=((IThemedActivity)activity).getCurrentThemeResourceId();
        final int accentColor=((IThemedActivity)activity).getCurrentThemeColor();
        ThemeUtils.applySupportActionModeBackground(mode,fragment.getActivity(),themeRes,accentColor,true);
      }
      mode.getMenuInflater().inflate(R.menu.action_status_text_selection,menu);
      return true;
    }
    @Override public boolean onPrepareActionMode(    ActionMode mode,    Menu menu){
      final int start=textView.getSelectionStart(), end=textView.getSelectionEnd();
      final SpannableString string=SpannableString.valueOf(textView.getText());
      final URLSpan[] spans=string.getSpans(start,end,URLSpan.class);
      final boolean avail=spans.length == 1 && URLUtil.isValidUrl(spans[0].getURL());
      Utils.setMenuItemAvailability(menu,android.R.id.copyUrl,avail);
      return true;
    }
    @Override public boolean onActionItemClicked(    ActionMode mode,    MenuItem item){
switch (item.getItemId()) {
case android.R.id.copyUrl:
{
          final int start=textView.getSelectionStart(), end=textView.getSelectionEnd();
          final SpannableString string=SpannableString.valueOf(textView.getText());
          final URLSpan[] spans=string.getSpans(start,end,URLSpan.class);
          if (spans.length != 1)           return true;
          ClipboardUtils.setText(activity,spans[0].getURL());
          mode.finish();
          return true;
        }
    }
    return false;
  }
  @Override public void onDestroyActionMode(  ActionMode mode){
  }
}
);
}
