{
  if (status == null)   return;
  final StatusFragment fragment=adapter.getFragment();
  final Context context=adapter.getContext();
  final Resources resources=context.getResources();
  final ImageLoaderWrapper loader=adapter.getImageLoader();
  final boolean nameFirst=adapter.isNameFirst();
  final boolean nicknameOnly=adapter.isNicknameOnly();
  final String nickname=getUserNickname(context,status.user_id,true);
  if (TextUtils.isEmpty(nickname)) {
    nameView.setText(status.user_name);
  }
 else   if (nicknameOnly) {
    nameView.setText(nickname);
  }
 else {
    nameView.setText(context.getString(R.string.name_with_nickname,status.user_name,nickname));
  }
  screenNameView.setText("@" + status.user_screen_name);
  textView.setText(Html.fromHtml(status.text_html));
  final TwidereLinkify linkify=new TwidereLinkify(new OnLinkClickHandler(context,null));
  linkify.applyAllLinks(textView,status.account_id,status.is_possibly_sensitive);
  ThemeUtils.applyParagraphSpacing(textView,1.1f);
  textView.setMovementMethod(StatusContentMovementMethod.getInstance());
  final String timeString=formatToLongTimeString(context,status.timestamp);
  final String sourceHtml=status.source;
  if (!isEmpty(timeString) && !isEmpty(sourceHtml)) {
    timeSourceView.setText(Html.fromHtml(context.getString(R.string.time_source,timeString,sourceHtml)));
  }
 else   if (isEmpty(timeString) && !isEmpty(sourceHtml)) {
    timeSourceView.setText(Html.fromHtml(context.getString(R.string.source,sourceHtml)));
  }
 else   if (!isEmpty(timeString) && isEmpty(sourceHtml)) {
    timeSourceView.setText(timeString);
  }
  timeSourceView.setMovementMethod(LinkMovementMethod.getInstance());
  retweetsContainer.setVisibility(!status.user_is_protected ? View.VISIBLE : View.GONE);
  repliesContainer.setVisibility(status.reply_count < 0 ? View.GONE : View.VISIBLE);
  final Locale locale=context.getResources().getConfiguration().locale;
  repliesCountView.setText(getLocalizedNumber(locale,status.reply_count));
  retweetsCountView.setText(getLocalizedNumber(locale,status.retweet_count));
  favoritesCountView.setText(getLocalizedNumber(locale,status.favorite_count));
  loader.displayProfileImage(profileImageView,status.user_profile_image_url);
  final int typeIconRes=getUserTypeIconRes(status.user_is_verified,status.user_is_protected);
  if (typeIconRes != 0) {
    profileTypeView.setImageResource(typeIconRes);
    profileTypeView.setVisibility(View.VISIBLE);
  }
 else {
    profileTypeView.setImageDrawable(null);
    profileTypeView.setVisibility(View.GONE);
  }
  if (status.media == null) {
    mediaPreviewContainer.setVisibility(View.GONE);
  }
 else   if (adapter.isDetailMediaExpanded()) {
    mediaPreviewContainer.setVisibility(View.VISIBLE);
    mediaPreviewLoad.setVisibility(View.GONE);
    mediaPreviewGrid.setVisibility(View.VISIBLE);
    mediaPreviewGrid.removeAllViews();
    final int maxColumns=resources.getInteger(R.integer.grid_column_image_preview);
    MediaPreviewUtils.addToLinearLayout(mediaPreviewGrid,loader,status.media,status.account_id,maxColumns,adapter.getFragment());
  }
 else {
    mediaPreviewContainer.setVisibility(View.VISIBLE);
    mediaPreviewLoad.setVisibility(View.VISIBLE);
    mediaPreviewGrid.setVisibility(View.GONE);
    mediaPreviewGrid.removeAllViews();
  }
  if (TwitterCardUtils.isCardSupported(status.card)) {
    final Point size=TwitterCardUtils.getCardSize(status.card);
    twitterCard.setVisibility(View.VISIBLE);
    if (size != null) {
      twitterCard.setCardSize(size.x,size.y);
    }
 else {
      twitterCard.setCardSize(0,0);
    }
    final Fragment cardFragment=TwitterCardUtils.createCardFragment(status.card);
    final FragmentManager fm=fragment.getChildFragmentManager();
    final FragmentTransaction ft=fm.beginTransaction();
    ft.replace(R.id.twitter_card,cardFragment);
    ft.commit();
  }
 else {
    twitterCard.setVisibility(View.GONE);
    final FragmentManager fm=fragment.getChildFragmentManager();
  }
  setMenuForStatus(context,menuBar.getMenu(),status,adapter.getStatusAccount());
  menuBar.show();
}
