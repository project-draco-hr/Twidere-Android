{
  if (status == null)   return;
  final StatusFragment fragment=adapter.getFragment();
  final Context context=adapter.getContext();
  final MediaLoaderWrapper loader=adapter.getMediaLoader();
  final UserColorNameManager manager=adapter.getUserColorNameManager();
  final boolean nameFirst=adapter.isNameFirst();
  linkClickHandler.setStatus(status);
  if (status.retweet_id > 0) {
    final String retweetedBy=manager.getDisplayName(status.retweeted_by_user_id,status.retweeted_by_user_name,status.retweeted_by_user_screen_name,nameFirst,false);
    retweetedByView.setText(context.getString(R.string.name_retweeted,retweetedBy));
    retweetedByContainer.setVisibility(View.VISIBLE);
  }
 else {
    retweetedByView.setText(null);
    retweetedByContainer.setVisibility(View.GONE);
  }
  profileContainer.drawEnd(Utils.getAccountColor(context,status.account_id));
  final int typeIconRes, typeDescriptionRes;
  final long timestamp;
  final String source;
  final int layoutPosition=getLayoutPosition();
  if (status.is_quote) {
    quotedNameView.setText(manager.getUserNickname(status.user_id,status.user_name,false));
    quotedScreenNameView.setText("@" + status.user_screen_name);
    nameView.setText(manager.getUserNickname(status.quoted_by_user_id,status.quoted_by_user_name,false));
    screenNameView.setText("@" + status.quoted_by_user_screen_name);
    final int idx=status.quote_text_unescaped.lastIndexOf(" twitter.com");
    final Spanned quote_text=Html.fromHtml(status.quote_text_html);
    quoteTextView.setText(idx > 0 ? quote_text.subSequence(0,idx) : quote_text);
    linkify.applyAllLinks(quoteTextView,status.account_id,layoutPosition,status.is_possibly_sensitive);
    ThemeUtils.applyParagraphSpacing(quoteTextView,1.1f);
    loader.displayProfileImage(profileImageView,status.quoted_by_user_profile_image);
    quotedNameContainer.setVisibility(View.VISIBLE);
    quoteTextView.setVisibility(View.VISIBLE);
    quoteIndicator.setVisibility(View.VISIBLE);
    quoteIndicator.setColor(manager.getUserColor(status.user_id,false));
    profileContainer.drawStart(manager.getUserColor(status.quoted_by_user_id,false));
    typeIconRes=Utils.getUserTypeIconRes(status.quoted_by_user_is_verified,status.quoted_by_user_is_protected);
    typeDescriptionRes=Utils.getUserTypeDescriptionRes(status.quoted_by_user_is_verified,status.quoted_by_user_is_protected);
    timestamp=status.quote_timestamp;
    source=status.quote_source;
  }
 else {
    nameView.setText(manager.getUserNickname(status.user_id,status.user_name,false));
    screenNameView.setText("@" + status.user_screen_name);
    loader.displayProfileImage(profileImageView,status.user_profile_image_url);
    quotedNameContainer.setVisibility(View.GONE);
    quoteTextView.setVisibility(View.GONE);
    quoteIndicator.setVisibility(View.GONE);
    profileContainer.drawStart(manager.getUserColor(status.user_id,false));
    typeIconRes=Utils.getUserTypeIconRes(status.user_is_verified,status.user_is_protected);
    typeDescriptionRes=Utils.getUserTypeDescriptionRes(status.user_is_verified,status.user_is_protected);
    timestamp=status.timestamp;
    source=status.source;
  }
  if (typeIconRes != 0 && typeDescriptionRes != 0) {
    profileTypeView.setImageResource(typeIconRes);
    profileTypeView.setContentDescription(context.getString(typeDescriptionRes));
    profileTypeView.setVisibility(View.VISIBLE);
  }
 else {
    profileTypeView.setImageDrawable(null);
    profileTypeView.setContentDescription(null);
    profileTypeView.setVisibility(View.GONE);
  }
  final String timeString=Utils.formatToLongTimeString(context,timestamp);
  if (!TextUtils.isEmpty(timeString) && !TextUtils.isEmpty(source)) {
    timeSourceView.setText(Html.fromHtml(context.getString(R.string.time_source,timeString,source)));
  }
 else   if (TextUtils.isEmpty(timeString) && !TextUtils.isEmpty(source)) {
    timeSourceView.setText(Html.fromHtml(context.getString(R.string.source,source)));
  }
 else   if (!TextUtils.isEmpty(timeString) && TextUtils.isEmpty(source)) {
    timeSourceView.setText(timeString);
  }
  timeSourceView.setMovementMethod(LinkMovementMethod.getInstance());
  textView.setText(Html.fromHtml(status.text_html));
  linkify.applyAllLinks(textView,status.account_id,layoutPosition,status.is_possibly_sensitive);
  ThemeUtils.applyParagraphSpacing(textView,1.1f);
  if (!TextUtils.isEmpty(status.place_full_name)) {
    locationView.setVisibility(View.VISIBLE);
    locationView.setText(status.place_full_name);
    locationView.setClickable(ParcelableLocation.isValidLocation(status.location));
  }
 else   if (ParcelableLocation.isValidLocation(status.location)) {
    locationView.setVisibility(View.VISIBLE);
    locationView.setText(R.string.view_map);
    locationView.setClickable(true);
  }
 else {
    locationView.setVisibility(View.GONE);
    locationView.setText(null);
  }
  retweetsContainer.setVisibility(!status.user_is_protected ? View.VISIBLE : View.GONE);
  repliesContainer.setVisibility(status.reply_count < 0 ? View.GONE : View.VISIBLE);
  favoritesContainer.setVisibility(status.favorite_count < 0 ? View.GONE : View.VISIBLE);
  final Locale locale=context.getResources().getConfiguration().locale;
  repliesCountView.setText(Utils.getLocalizedNumber(locale,status.reply_count));
  retweetsCountView.setText(Utils.getLocalizedNumber(locale,status.retweet_count));
  favoritesCountView.setText(Utils.getLocalizedNumber(locale,status.favorite_count));
  if (status.media == null) {
    mediaPreviewContainer.setVisibility(View.GONE);
    mediaPreview.setVisibility(View.GONE);
    mediaPreviewLoad.setVisibility(View.GONE);
    mediaPreview.displayMedia();
  }
 else   if (adapter.isDetailMediaExpanded()) {
    mediaPreviewContainer.setVisibility(View.VISIBLE);
    mediaPreview.setVisibility(View.VISIBLE);
    mediaPreviewLoad.setVisibility(View.GONE);
    mediaPreview.displayMedia(status.media,loader,status.account_id,adapter.getFragment(),adapter.getMediaLoadingHandler());
  }
 else {
    mediaPreviewContainer.setVisibility(View.VISIBLE);
    mediaPreview.setVisibility(View.GONE);
    mediaPreviewLoad.setVisibility(View.VISIBLE);
    mediaPreview.displayMedia();
  }
  if (TwitterCardUtils.isCardSupported(status.card)) {
    final Point size=TwitterCardUtils.getCardSize(status.card);
    twitterCard.setVisibility(View.VISIBLE);
    if (size != null) {
      twitterCard.setCardSize(size.x,size.y);
    }
 else {
      twitterCard.setCardSize(0,0);
    }
    final Fragment cardFragment=TwitterCardUtils.createCardFragment(status.card);
    if (cardFragment != null) {
      final FragmentManager fm=fragment.getChildFragmentManager();
      final FragmentTransaction ft=fm.beginTransaction();
      ft.replace(R.id.twitter_card,cardFragment);
      ft.commit();
    }
 else {
      twitterCard.setVisibility(View.GONE);
    }
  }
 else {
    twitterCard.setVisibility(View.GONE);
  }
  Utils.setMenuForStatus(context,menuBar.getMenu(),status,adapter.getStatusAccount());
  quoteTextView.setTextIsSelectable(true);
  textView.setTextIsSelectable(true);
  quoteTextView.setMovementMethod(LinkMovementMethod.getInstance());
  textView.setMovementMethod(LinkMovementMethod.getInstance());
}
