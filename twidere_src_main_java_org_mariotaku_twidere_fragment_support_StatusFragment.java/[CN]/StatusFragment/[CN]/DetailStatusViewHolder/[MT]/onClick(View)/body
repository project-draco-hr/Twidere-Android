{
  final ParcelableStatus status=adapter.getStatus(getLayoutPosition());
  final StatusFragment fragment=adapter.getFragment();
  if (status == null || fragment == null)   return;
switch (v.getId()) {
case R.id.media_preview_load:
{
      if (adapter.isSensitiveContentEnabled() || !status.is_possibly_sensitive) {
        adapter.setDetailMediaExpanded(true);
      }
 else {
        final LoadSensitiveImageConfirmDialogFragment f=new LoadSensitiveImageConfirmDialogFragment();
        f.show(fragment.getChildFragmentManager(),"load_sensitive_image_confirm");
      }
      break;
    }
case R.id.profile_container:
{
    final FragmentActivity activity=fragment.getActivity();
    final Bundle activityOption=Utils.makeSceneTransitionOption(activity,new Pair<View,String>(profileImageView,UserFragment.TRANSITION_NAME_PROFILE_IMAGE),new Pair<View,String>(profileTypeView,UserFragment.TRANSITION_NAME_PROFILE_TYPE));
    if (status.is_quote) {
      Utils.openUserProfile(adapter.getContext(),status.account_id,status.quoted_by_user_id,status.quoted_by_user_screen_name,activityOption);
    }
 else {
      Utils.openUserProfile(activity,status.account_id,status.user_id,status.user_screen_name,activityOption);
    }
    break;
  }
case R.id.retweets_container:
{
  final FragmentActivity activity=fragment.getActivity();
  Utils.openStatusRetweeters(activity,status.account_id,status.id);
  break;
}
case R.id.favorites_container:
{
final FragmentActivity activity=fragment.getActivity();
if (!Utils.isOfficialCredentials(activity,adapter.getStatusAccount())) return;
if (status.is_retweet) {
  Utils.openStatusFavoriters(activity,status.account_id,status.retweet_id);
}
 else {
  Utils.openStatusFavoriters(activity,status.account_id,status.id);
}
break;
}
case R.id.retweeted_by:
{
if (status.retweet_id > 0) {
Utils.openUserProfile(adapter.getContext(),status.account_id,status.retweeted_by_user_id,status.retweeted_by_user_screen_name,null);
}
break;
}
case R.id.location_view:
{
final ParcelableLocation location=status.location;
if (!ParcelableLocation.isValidLocation(location)) return;
Utils.openMap(adapter.getContext(),location.latitude,location.longitude);
break;
}
case R.id.quoted_name_container:
{
Utils.openUserProfile(adapter.getContext(),status.account_id,status.user_id,status.user_screen_name,null);
break;
}
}
}
