{
  final boolean status_unchanged=mStatus != null && status != null && status.equals(mStatus);
  if (!status_unchanged) {
    getListAdapter().setData(null);
    if (mStatus != null) {
      ProfilingUtil.profile(getActivity(),mStatus.account_id,"End, " + mStatus.id);
    }
  }
 else {
    setSelection(0);
  }
  if (mConversationTask != null && mConversationTask.getStatus() == AsyncTask.Status.RUNNING) {
    mConversationTask.cancel(true);
  }
  mStatus=status;
  if (mStatus != null) {
    ProfilingUtil.profile(getActivity(),mStatus.account_id,"Start, " + mStatus.id);
  }
  if (!status_unchanged) {
    clearPreviewImages();
    hidePreviewImages();
  }
  if (status == null || getActivity() == null)   return;
  final Bundle args=getArguments();
  args.putLong(EXTRA_ACCOUNT_ID,status.account_id);
  args.putLong(EXTRA_STATUS_ID,status.id);
  args.putParcelable(EXTRA_STATUS,status);
  if (shouldUseNativeMenu()) {
    getActivity().supportInvalidateOptionsMenu();
  }
 else {
    setMenuForStatus(getActivity(),mMenuBar.getMenu(),status);
    mMenuBar.show();
  }
  updateUserColor();
  mProfileView.drawEnd(getAccountColor(getActivity(),status.account_id));
  final boolean nickname_only=mPreferences.getBoolean(KEY_NICKNAME_ONLY,false);
  final boolean name_first=mPreferences.getBoolean(KEY_NAME_FIRST,true);
  final boolean display_image_preview=mPreferences.getBoolean(KEY_DISPLAY_IMAGE_PREVIEW,false);
  final String nick=getUserNickname(getActivity(),status.user_id,true);
  mNameView.setText(TextUtils.isEmpty(nick) ? status.user_name : nickname_only ? nick : getString(R.string.name_with_nickname,status.user_name,nick));
  mNameView.setCompoundDrawablesWithIntrinsicBounds(0,0,getUserTypeIconRes(status.user_is_verified,status.user_is_protected),0);
  mScreenNameView.setText("@" + status.user_screen_name);
  mTextView.setText(Html.fromHtml(status.text_html));
  final TwidereLinkify linkify=new TwidereLinkify(new OnLinkClickHandler(getActivity(),getMultiSelectManager()));
  linkify.setLinkTextColor(ThemeUtils.getUserLinkTextColor(getActivity()));
  linkify.applyAllLinks(mTextView,status.account_id,status.is_possibly_sensitive);
  mTextView.setMovementMethod(StatusContentMovementMethod.getInstance());
  mTextView.setCustomSelectionActionModeCallback(this);
  long timestamp=status.retweet_timestamp > 0 ? status.retweet_timestamp : status.timestamp;
  final String timeString=formatToLongTimeString(getActivity(),timestamp);
  final String sourceHtml=status.source;
  if (!isEmpty(timeString) && !isEmpty(sourceHtml)) {
    mTimeSourceView.setText(Html.fromHtml(getString(R.string.time_source,timeString,sourceHtml)));
  }
 else   if (isEmpty(timeString) && !isEmpty(sourceHtml)) {
    mTimeSourceView.setText(Html.fromHtml(getString(R.string.source,sourceHtml)));
  }
 else   if (!isEmpty(timeString) && isEmpty(sourceHtml)) {
    mTimeSourceView.setText(timeString);
  }
  mTimeSourceView.setMovementMethod(LinkMovementMethod.getInstance());
  final String in_reply_to=getDisplayName(getActivity(),status.in_reply_to_user_id,status.in_reply_to_name,status.in_reply_to_screen_name,name_first,nickname_only,true);
  mInReplyToView.setText(getString(R.string.in_reply_to,in_reply_to));
  if (mPreferences.getBoolean(KEY_DISPLAY_PROFILE_IMAGE,true)) {
    mImageLoader.displayProfileImage(mProfileImageView,status.user_profile_image_url);
  }
 else {
    mProfileImageView.setImageResource(R.drawable.ic_profile_image_default);
  }
  mImagePreviewContainer.setVisibility(status.media == null || status.media.length == 0 ? View.GONE : View.VISIBLE);
  if (display_image_preview) {
    loadPreviewImages();
  }
  mRetweetsContainer.setVisibility(!status.user_is_protected ? View.VISIBLE : View.GONE);
  mRepliesContainer.setVisibility(status.reply_count < 0 ? View.GONE : View.VISIBLE);
  mRepliesCountView.setText(getLocalizedNumber(mLocale,status.reply_count));
  mRetweetsCountView.setText(getLocalizedNumber(mLocale,status.retweet_count));
  mFavoritesCountView.setText(getLocalizedNumber(mLocale,status.favorite_count));
  final ParcelableLocation location=status.location;
  final boolean is_valid_location=ParcelableLocation.isValidLocation(location);
  mLocationContainer.setVisibility(is_valid_location ? View.VISIBLE : View.GONE);
  if (display_image_preview) {
    mMapView.setVisibility(is_valid_location ? View.VISIBLE : View.GONE);
    mLocationBackgroundView.setVisibility(is_valid_location ? View.VISIBLE : View.GONE);
    mLocationView.setVisibility(View.VISIBLE);
    if (is_valid_location) {
      mHandler.post(new DisplayMapRunnable(location,mImageLoader,mMapView));
    }
 else {
      mMapView.setImageDrawable(null);
    }
  }
 else {
    mMapView.setVisibility(View.GONE);
    mLocationBackgroundView.setVisibility(View.GONE);
    mMapView.setImageDrawable(null);
    mLocationView.setVisibility(View.VISIBLE);
  }
  if (mLoadMoreAutomatically) {
    showFollowInfo(true);
    showLocationInfo(true);
    showConversation();
  }
 else {
    mFollowIndicator.setVisibility(View.GONE);
  }
  updateConversationInfo();
  scrollToStart();
}
