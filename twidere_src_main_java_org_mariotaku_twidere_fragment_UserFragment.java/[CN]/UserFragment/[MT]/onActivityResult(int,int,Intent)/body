{
  final ParcelableUser user=getUser();
switch (requestCode) {
case REQUEST_SET_COLOR:
{
      if (user == null)       return;
      if (resultCode == Activity.RESULT_OK) {
        if (data == null)         return;
        final int color=data.getIntExtra(EXTRA_COLOR,Color.TRANSPARENT);
        mUserColorNameManager.setUserColor(mUser.key,color);
      }
 else       if (resultCode == ColorPickerDialogActivity.RESULT_CLEARED) {
        mUserColorNameManager.clearUserColor(mUser.key);
      }
      break;
    }
case REQUEST_ADD_TO_LIST:
{
    if (user == null)     return;
    if (resultCode == Activity.RESULT_OK && data != null) {
      final AsyncTwitterWrapper twitter=mTwitterWrapper;
      final ParcelableUserList list=data.getParcelableExtra(EXTRA_USER_LIST);
      if (list == null || twitter == null)       return;
      twitter.addUserListMembersAsync(user.account_key,list.id,user);
    }
    break;
  }
case REQUEST_SELECT_ACCOUNT:
{
  if (user == null)   return;
  if (resultCode == Activity.RESULT_OK) {
    if (data == null || !data.hasExtra(EXTRA_ID))     return;
    final UserKey accountKey=data.getParcelableExtra(EXTRA_KEY);
    @Referral final String referral=getArguments().getString(EXTRA_REFERRAL);
    IntentUtils.openUserProfile(getActivity(),accountKey,user.key,user.screen_name,null,mPreferences.getBoolean(KEY_NEW_DOCUMENT_API),referral);
  }
  break;
}
}
}
