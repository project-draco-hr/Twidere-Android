{
  final ParcelableUser user=getUser();
  if (user == null)   return false;
switch (type) {
case TwidereLinkify.LINK_TYPE_MENTION:
{
      IntentUtils.openUserProfile(getActivity(),user.account_key,null,link,null,mPreferences.getBoolean(KEY_NEW_DOCUMENT_API),Referral.USER_MENTION);
      return true;
    }
case TwidereLinkify.LINK_TYPE_HASHTAG:
{
    IntentUtils.openTweetSearch(getActivity(),user.account_key,"#" + link);
    return true;
  }
case TwidereLinkify.LINK_TYPE_LINK_IN_TEXT:
case TwidereLinkify.LINK_TYPE_ENTITY_URL:
{
  final Uri uri=Uri.parse(link);
  final Intent intent;
  if (uri.getScheme() != null) {
    intent=new Intent(Intent.ACTION_VIEW,uri);
  }
 else {
    intent=new Intent(Intent.ACTION_VIEW,uri.buildUpon().scheme("http").build());
  }
  startActivity(intent);
  return true;
}
case TwidereLinkify.LINK_TYPE_LIST:
{
if (link == null) break;
final String[] mentionList=link.split("/");
if (mentionList.length != 2) {
  break;
}
return true;
}
}
return false;
}
