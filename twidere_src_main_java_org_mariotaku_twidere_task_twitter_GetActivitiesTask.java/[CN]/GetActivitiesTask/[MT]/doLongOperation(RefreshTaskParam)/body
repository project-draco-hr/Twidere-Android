{
  final AccountKey[] accountIds=param.getAccountKeys();
  final long[] maxIds=param.getMaxIds();
  final long[] sinceIds=param.getSinceIds();
  final ContentResolver cr=context.getContentResolver();
  final int loadItemLimit=preferences.getInt(KEY_LOAD_ITEM_LIMIT);
  boolean saveReadPosition=false;
  for (int i=0; i < accountIds.length; i++) {
    final AccountKey accountKey=accountIds[i];
    final boolean noItemsBefore=DataStoreUtils.getActivitiesCount(context,getContentUri(),accountKey) <= 0;
    final Twitter twitter=TwitterAPIFactory.getTwitterInstance(context,accountKey,true);
    if (twitter == null)     continue;
    final Paging paging=new Paging();
    paging.count(loadItemLimit);
    if (maxIds != null && maxIds[i] > 0) {
      paging.maxId(maxIds[i]);
    }
    if (sinceIds != null && sinceIds[i] > 0) {
      paging.sinceId(sinceIds[i]);
      if (maxIds == null || maxIds[i] <= 0) {
        paging.setLatestResults(true);
        saveReadPosition=true;
      }
    }
    try {
      final ResponseList<Activity> activities=getActivities(twitter,accountKey,paging);
      storeActivities(cr,loadItemLimit,accountKey,noItemsBefore,activities);
      if (saveReadPosition) {
        saveReadPosition(accountKey,twitter);
      }
      errorInfoStore.remove(getErrorInfoKey(),accountKey);
    }
 catch (    TwitterException e) {
      if (BuildConfig.DEBUG) {
        Log.w(LOGTAG,e);
      }
      if (e.getErrorCode() == 220) {
        errorInfoStore.put(getErrorInfoKey(),accountKey,ErrorInfoStore.CODE_NO_ACCESS_FOR_CREDENTIALS);
      }
 else       if (e.isCausedByNetworkIssue()) {
        errorInfoStore.put(getErrorInfoKey(),accountKey,ErrorInfoStore.CODE_NETWORK_ERROR);
      }
    }
  }
  return null;
}
