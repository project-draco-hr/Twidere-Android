{
  final ParcelableStatus status=mStatus;
  final ParcelableCredentials credentials=DataStoreUtils.getCredentials(getContext(),getAccountKey());
  if (credentials == null)   throw new TwitterException("Null credentials");
  if (Utils.isOfficialCredentials(getContext(),credentials)) {
    return twitter.showConversation(status.id,paging);
  }
 else   if (!TwitterAPIFactory.isTwitterCredentials(credentials)) {
    return twitter.getStatusNetConversation(status.id,paging);
  }
  final List<Status> statuses=new ArrayList<>();
  final long maxId=getMaxId(), sinceId=getSinceId();
  final boolean noSinceMaxId=maxId <= 0 && sinceId <= 0;
  if ((maxId > 0 && maxId < status.id) || noSinceMaxId) {
    long inReplyToId=maxId > 0 ? maxId : status.in_reply_to_status_id;
    int count=0;
    while (inReplyToId > 0 && count < 10) {
      final Status item=twitter.showStatus(inReplyToId);
      inReplyToId=item.getInReplyToStatusId();
      statuses.add(item);
      count++;
    }
  }
  if ((sinceId > 0 && sinceId > status.id) || noSinceMaxId) {
    SearchQuery query=new SearchQuery();
    if (TwitterAPIFactory.isTwitterCredentials(credentials)) {
      query.query("to:" + status.user_screen_name);
    }
 else {
      query.query("@" + status.user_screen_name);
    }
    query.sinceId(sinceId > 0 ? sinceId : status.id);
    try {
      for (      Status item : twitter.search(query)) {
        if (item.getInReplyToStatusId() == status.id) {
          statuses.add(item);
        }
      }
    }
 catch (    TwitterException e) {
    }
  }
  return statuses;
}
