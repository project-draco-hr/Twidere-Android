{
  final String stackTrace=report.getProperty(ReportField.STACK_TRACE);
  final StringBuilder bodyBuilder=new StringBuilder();
  buildIssueBody(report,bodyBuilder);
  final Scanner scanner=new Scanner(stackTrace);
  final String messageLine=scanner.nextLine();
  final String recentLine=scanner.nextLine();
  final String titleContent=messageLine + " " + recentLine;
  scanner.close();
  final StringBuilder titleBuilder=new StringBuilder();
  final CRC32 crc32=new CRC32();
  crc32.update(titleContent.getBytes(Charset.defaultCharset()));
  final String checksum=Long.toHexString(crc32.getValue());
  titleBuilder.append(checksum);
  titleBuilder.append(" ");
  titleBuilder.append(titleContent);
  final String query=String.format(Locale.ROOT,"%s repo:%s",checksum,USER_REPO);
  final Uri.Builder searchIssueUrlBuilder=Uri.parse("https://api.github.com/search/issues").buildUpon();
  searchIssueUrlBuilder.appendQueryParameter("q",query);
  HttpURLConnection searchIssueConnection=null;
  int searchIssueConnectionStatus=-1;
  try {
    searchIssueConnection=(HttpURLConnection)new URL(searchIssueUrlBuilder.build().toString()).openConnection();
    searchIssueConnection.setRequestMethod("GET");
    authorizeRequest(searchIssueConnection);
    searchIssueConnection.setDoInput(true);
    searchIssueConnectionStatus=searchIssueConnection.getResponseCode();
    final InputStreamReader reader=new InputStreamReader(searchIssueConnection.getInputStream());
    final JsonReader jsonReader=new JsonReader(reader);
    boolean isDuplicate=false;
    jsonReader.beginObject();
    while (jsonReader.hasNext()) {
      if ("total_count".equals(jsonReader.nextName())) {
        isDuplicate=jsonReader.nextInt() > 0;
      }
 else {
        jsonReader.skipValue();
      }
    }
    jsonReader.endObject();
    if (isDuplicate) {
      Log.d(LOGTAG,"Issue already exists");
      return;
    }
  }
 catch (  IOException e) {
    final String msg="Network error when searching issues, code " + searchIssueConnectionStatus;
    Log.w(LOGTAG,msg,e);
    throw new ReportSenderException(msg,e);
  }
 finally {
    if (searchIssueConnection != null) {
      searchIssueConnection.disconnect();
    }
  }
  createIssue(bodyBuilder.toString(),titleBuilder.toString());
}
