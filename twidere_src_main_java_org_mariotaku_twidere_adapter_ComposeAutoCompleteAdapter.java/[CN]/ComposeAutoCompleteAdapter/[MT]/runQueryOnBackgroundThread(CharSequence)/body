{
  if (TextUtils.isEmpty(constraint))   return null;
  char token=constraint.charAt(0);
  if (getNormalizedSymbol(token) == getNormalizedSymbol(mToken)) {
    final FilterQueryProvider filter=getFilterQueryProvider();
    if (filter != null)     return filter.runQuery(constraint);
  }
  mToken=token;
  final Uri.Builder builder=Suggestions.AutoComplete.CONTENT_URI.buildUpon();
  builder.appendQueryParameter(QUERY_PARAM_QUERY,String.valueOf(constraint.subSequence(1,constraint.length())));
switch (getNormalizedSymbol(token)) {
case '#':
{
      builder.appendQueryParameter(QUERY_PARAM_TYPE,Suggestions.AutoComplete.TYPE_HASHTAGS);
      break;
    }
case '@':
{
    builder.appendQueryParameter(QUERY_PARAM_TYPE,Suggestions.AutoComplete.TYPE_USERS);
    break;
  }
default :
{
  return null;
}
}
builder.appendQueryParameter(QUERY_PARAM_ACCOUNT_KEY,String.valueOf(accountKey));
return mContext.getContentResolver().query(builder.build(),Suggestions.AutoComplete.COLUMNS,null,null,null);
}
