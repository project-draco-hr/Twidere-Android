{
  final Fragment f=mActivity.getSupportFragmentManager().findFragmentByTag(TAG_COPYING_IMAGE);
  if (f instanceof DialogFragment) {
    ((DialogFragment)f).dismiss();
  }
  if (result.hasData()) {
    final Uri dstUri=Uri.fromFile(result.getData());
    final Intent callingIntent=mActivity.getIntent();
    if (mNeedsCrop && ((callingIntent.hasExtra(EXTRA_ASPECT_X) && callingIntent.hasExtra(EXTRA_ASPECT_Y)) || (callingIntent.hasExtra(EXTRA_MAX_WIDTH) && callingIntent.hasExtra(EXTRA_MAX_HEIGHT)))) {
      final Uri tempImageUri=mActivity.createTempImageUri();
      final Crop crop=Crop.of(dstUri,tempImageUri);
      final int aspectX=callingIntent.getIntExtra(EXTRA_ASPECT_X,-1);
      final int aspectY=callingIntent.getIntExtra(EXTRA_ASPECT_Y,-1);
      if (aspectX > 0 && aspectY > 0) {
        crop.withAspect(aspectX,aspectY);
      }
      final int maxWidth=callingIntent.getIntExtra(EXTRA_MAX_WIDTH,-1);
      final int maxHeight=callingIntent.getIntExtra(EXTRA_MAX_HEIGHT,-1);
      if (maxWidth > 0 && maxHeight > 0) {
        crop.withMaxSize(maxWidth,maxHeight);
      }
      final Intent cropIntent=crop.getIntent(mActivity);
      cropIntent.setClass(mActivity,ImageCropperActivity.class);
      mActivity.mTempPhotoUri=tempImageUri;
      mActivity.startActivityForResult(cropIntent,REQUEST_CROP);
      return;
    }
    final Intent data=new Intent();
    data.setData(dstUri);
    mActivity.setResult(RESULT_OK,data);
  }
 else   if (result.hasException()) {
    Log.w(LOGTAG,result.getException());
  }
  mActivity.finish();
}
