{
  final Context context=getActivity();
  final Uri uri=getContentUri();
  final String table=getTableNameByUri(uri);
  final String sortOrder=Statuses.DEFAULT_SORT_ORDER;
  final long account_id=getAccountId();
  final long[] accountIds=account_id > 0 ? new long[]{account_id} : getActivatedAccountIds(context);
  final boolean no_account_selected=accountIds.length == 0;
  setEmptyText(no_account_selected ? getString(R.string.no_account_selected) : null);
  if (!no_account_selected) {
    getListView().setEmptyView(null);
  }
  final Where accountWhere=Where.in(new Column(Statuses.ACCOUNT_ID),new RawItemArray(accountIds));
  final Where where;
  if (isFiltersEnabled()) {
    final Where filterWhere=new Where(buildStatusFilterWhereClause(table,null,shouldEnableFiltersForRTs(context)));
    where=Where.and(accountWhere,filterWhere);
  }
 else {
    where=accountWhere;
  }
  final String selection=processWhere(where).getSQL();
  return new CursorLoader(context,uri,CursorStatusesAdapter.CURSOR_COLS,selection,null,sortOrder);
}
