{
  id=getLong("id",json);
  text=getUnescapedString("text",json);
  rawText=getRawString("text",json);
  senderId=getLong("sender_id",json);
  recipientId=getLong("recipient_id",json);
  createdAt=getDate("created_at",json);
  senderScreenName=getRawString("sender_screen_name",json);
  recipientScreenName=getRawString("recipient_screen_name",json);
  if (!json.isNull("entities")) {
    try {
      final JSONObject entities=json.getJSONObject("entities");
      int len;
      if (!entities.isNull("user_mentions")) {
        final JSONArray userMentionsArray=entities.getJSONArray("user_mentions");
        len=userMentionsArray.length();
        userMentionEntities=new UserMentionEntity[len];
        for (int i=0; i < len; i++) {
          userMentionEntities[i]=new UserMentionEntityJSONImpl(userMentionsArray.getJSONObject(i));
        }
      }
      if (!entities.isNull("urls")) {
        final JSONArray urlsArray=entities.getJSONArray("urls");
        len=urlsArray.length();
        urlEntities=new URLEntity[len];
        for (int i=0; i < len; i++) {
          urlEntities[i]=new URLEntityJSONImpl(urlsArray.getJSONObject(i));
        }
      }
      if (!entities.isNull("hashtags")) {
        final JSONArray hashtagsArray=entities.getJSONArray("hashtags");
        len=hashtagsArray.length();
        hashtagEntities=new HashtagEntity[len];
        for (int i=0; i < len; i++) {
          hashtagEntities[i]=new HashtagEntityJSONImpl(hashtagsArray.getJSONObject(i));
        }
      }
      if (!entities.isNull("media")) {
        final JSONArray mediaArray=entities.getJSONArray("media");
        len=mediaArray.length();
        mediaEntities=new MediaEntity[len];
        for (int i=0; i < len; i++) {
          mediaEntities[i]=new MediaEntityJSONImpl(mediaArray.getJSONObject(i));
        }
      }
    }
 catch (    final JSONException jsone) {
      throw new TwitterException(jsone);
    }
  }
  try {
    sender=new UserJSONImpl(json.getJSONObject("sender"));
    recipient=new UserJSONImpl(json.getJSONObject("recipient"));
  }
 catch (  final JSONException jsone) {
    throw new TwitterException(jsone);
  }
}
