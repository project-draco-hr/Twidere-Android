{
  final MaterialDialog.Builder builder=new MaterialDialog.Builder(getContext());
  builder.positiveText(R.string.sign_in);
  builder.negativeText(android.R.string.cancel);
  builder.customView(R.layout.dialog_password_sign_in,true);
  builder.onPositive(new MaterialDialog.SingleButtonCallback(){
    @Override public void onClick(    @NonNull MaterialDialog dialog,    @NonNull DialogAction which){
      EditText editUsername=(EditText)dialog.findViewById(R.id.username);
      EditText editPassword=(EditText)dialog.findViewById(R.id.password);
      SignInActivity activity=(SignInActivity)getActivity();
      activity.setUsernamePassword(String.valueOf(editUsername.getText()),String.valueOf(editPassword.getText()));
      activity.doLogin();
    }
  }
);
  builder.showListener(new DialogInterface.OnShowListener(){
    @Override public void onShow(    DialogInterface dialog){
      final MaterialDialog materialDialog=(MaterialDialog)dialog;
      final EditText editUsername=(EditText)materialDialog.findViewById(R.id.username);
      final EditText editPassword=(EditText)materialDialog.findViewById(R.id.password);
      TextWatcher textWatcher=new TextWatcher(){
        @Override public void beforeTextChanged(        CharSequence s,        int start,        int count,        int after){
        }
        @Override public void onTextChanged(        CharSequence s,        int start,        int before,        int count){
          MDButton button=materialDialog.getActionButton(DialogAction.POSITIVE);
          if (button == null)           return;
          button.setEnabled(editUsername.length() > 0 && editPassword.length() > 0);
        }
        @Override public void afterTextChanged(        Editable s){
        }
      }
;
      editUsername.addTextChangedListener(textWatcher);
      editPassword.addTextChangedListener(textWatcher);
    }
  }
);
  return builder.build();
}
