{
  final SignInActivity activity=activityRef.get();
  if (activity == null)   return new SignInResponse(false,false,null);
  final String versionSuffix=noVersionSuffix ? null : "1.1";
  final Endpoint endpoint=new Endpoint(MicroBlogAPIFactory.getApiUrl(apiUrlFormat,"api",versionSuffix));
  final Authorization auth=new BasicAuthorization(username,password);
  final MicroBlog twitter=MicroBlogAPIFactory.getInstance(activity,endpoint,auth,MicroBlog.class);
  User user;
  try {
    user=twitter.verifyCredentials();
  }
 catch (  MicroBlogException e) {
    if (e.getStatusCode() == 401) {
      throw new WrongBasicCredentialException();
    }
 else     if (e.getStatusCode() == 404) {
      throw new WrongAPIURLFormatException();
    }
    throw e;
  }
  final String userId=user.getId();
  if (userId == null)   return new SignInResponse(false,false,null);
  int color=analyseUserProfileColor(user);
  final Pair<String,String> accountType=detectAccountType(twitter,user);
  final ParcelableAccount account=ParcelableAccountUtils.getAccount(activity,new UserKey(userId,UserKeyUtils.getUserHost(user)));
  if (account != null) {
    color=account.color;
  }
  return new SignInResponse(account != null,username,password,user,color,apiUrlFormat,noVersionSuffix,accountType);
}
