{
  super.onCreate(savedInstanceState);
  mResolver=getContentResolver();
  setContentView(R.layout.activity_sign_in);
  if (savedInstanceState != null) {
    mAPIUrlFormat=savedInstanceState.getString(Accounts.API_URL_FORMAT);
    mAuthType=savedInstanceState.getInt(Accounts.AUTH_TYPE);
    mSameOAuthSigningUrl=savedInstanceState.getBoolean(Accounts.SAME_OAUTH_SIGNING_URL);
    mConsumerKey=trim(savedInstanceState.getString(Accounts.CONSUMER_KEY));
    mConsumerSecret=trim(savedInstanceState.getString(Accounts.CONSUMER_SECRET));
    mUsername=savedInstanceState.getString(Accounts.SCREEN_NAME);
    mPassword=savedInstanceState.getString(Accounts.PASSWORD);
    mAPIChangeTimestamp=savedInstanceState.getLong(EXTRA_API_LAST_CHANGE);
  }
  final boolean isTwipOMode=mAuthType == ParcelableCredentials.AUTH_TYPE_TWIP_O_MODE;
  mUsernamePasswordContainer.setVisibility(isTwipOMode ? View.GONE : View.VISIBLE);
  mSignInSignUpContainer.setOrientation(isTwipOMode ? LinearLayout.VERTICAL : LinearLayout.HORIZONTAL);
  mEditUsername.setText(mUsername);
  mEditUsername.addTextChangedListener(this);
  mEditPassword.setText(mPassword);
  mEditPassword.addTextChangedListener(this);
  mSignUpButton.setOnClickListener(this);
  final Resources resources=getResources();
  final ColorStateList color=ColorStateList.valueOf(resources.getColor(R.color.material_light_green));
  ViewCompat.setBackgroundTintList(mSignInButton,color);
  setSignInButton();
  final String consumerKey=mPreferences.getString(KEY_CONSUMER_KEY,null);
  final String consumerSecret=mPreferences.getString(KEY_CONSUMER_SECRET,null);
  if (BuildConfig.SHOW_CUSTOM_TOKEN_DIALOG && savedInstanceState == null && !mPreferences.getBoolean(KEY_CONSUMER_KEY_SECRET_SET,false) && !Utils.isCustomConsumerKeySecret(consumerKey,consumerSecret)) {
    final SetConsumerKeySecretDialogFragment df=new SetConsumerKeySecretDialogFragment();
    df.setCancelable(false);
    df.show(getSupportFragmentManager(),"set_consumer_key_secret");
  }
}
