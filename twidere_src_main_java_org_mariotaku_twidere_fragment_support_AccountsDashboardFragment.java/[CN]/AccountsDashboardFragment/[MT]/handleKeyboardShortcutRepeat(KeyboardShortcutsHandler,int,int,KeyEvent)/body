{
  final String action=handler.getKeyAction(CONTEXT_TAG_NAVIGATION,keyCode,event);
  if (action == null)   return false;
  final int offset;
switch (action) {
case ACTION_NAVIGATION_PREVIOUS:
{
      offset=-1;
      break;
    }
case ACTION_NAVIGATION_NEXT:
{
    offset=1;
    break;
  }
default :
{
  return false;
}
}
final int firstVisiblePosition=ListViewUtils.getFirstFullyVisiblePosition(mListView);
final int selectedItem=mListView.getSelectedItemPosition();
final int count=mListView.getCount();
int resultPosition;
if (!mListView.isFocused() || selectedItem == ListView.INVALID_POSITION) {
resultPosition=firstVisiblePosition;
}
 else {
resultPosition=selectedItem + offset;
while (resultPosition >= 0 && resultPosition < count && !mAdapter.isEnabled(resultPosition)) {
resultPosition+=offset;
}
}
final View focusedChild=mListView.getFocusedChild();
if (focusedChild == null) {
mListView.requestChildFocus(mListView.getChildAt(0),null);
}
if (resultPosition >= 0 && resultPosition < count) {
mListView.setSelection(resultPosition);
}
return true;
}
