{
  super.onActivityCreated(savedInstanceState);
  mPreferences=getSharedPreferences(SHARED_PREFERENCES_NAME,Context.MODE_PRIVATE);
  mResolver=getContentResolver();
  final View view=getView();
  if (view == null)   throw new AssertionError();
  final Context context=view.getContext();
  mImageLoader=TwidereApplication.getInstance(context).getImageLoaderWrapper();
  final LayoutInflater inflater=LayoutInflater.from(context);
  final ListView listView=getListView();
  mAdapter=new MergeAdapter();
  mAccountsAdapter=new AccountSelectorAdapter(context,this);
  mAccountOptionsAdapter=new AccountOptionsAdapter(context);
  mAppMenuAdapter=new AppMenuAdapter(context);
  mAppMenuSectionView=Utils.newSectionView(context,R.string.more);
  mAccountSelectorView=inflater.inflate(R.layout.header_drawer_account_selector,listView,false);
  mAccountsSelector=(RecyclerView)mAccountSelectorView.findViewById(R.id.other_accounts_list);
  final LinearLayoutManager layoutManager=new FixedLinearLayoutManager(context);
  layoutManager.setOrientation(LinearLayoutManager.HORIZONTAL);
  layoutManager.setStackFromEnd(true);
  mAccountsSelector.setLayoutManager(layoutManager);
  mAccountsSelector.setAdapter(mAccountsAdapter);
  mAccountsSelector.setItemAnimator(null);
  mAccountProfileContainer=mAccountSelectorView.findViewById(R.id.profile_container);
  mAccountProfileImageView=(ShapedImageView)mAccountSelectorView.findViewById(R.id.profile_image);
  mAccountProfileBannerView=(ImageView)mAccountSelectorView.findViewById(R.id.account_profile_banner);
  mFloatingProfileImageSnapshotView=(ImageView)mAccountSelectorView.findViewById(R.id.floating_profile_image_snapshot);
  mAccountProfileNameView=(TextView)mAccountSelectorView.findViewById(R.id.name);
  mAccountProfileScreenNameView=(TextView)mAccountSelectorView.findViewById(R.id.screen_name);
  mAccountsToggleMenu=(ActionMenuView)mAccountSelectorView.findViewById(R.id.toggle_menu);
  final SupportMenuInflater menuInflater=new SupportMenuInflater(context);
  menuInflater.inflate(R.menu.action_dashboard_timeline_toggle,mAccountsToggleMenu.getMenu());
  mAccountsToggleMenu.setOnMenuItemClickListener(new OnMenuItemClickListener(){
    @Override public boolean onMenuItemClick(    MenuItem item){
      if (item.getGroupId() != SupportAccountActionProvider.MENU_GROUP)       return false;
      final ParcelableAccount[] accounts=mAccountActionProvider.getAccounts();
      final ParcelableAccount account=accounts[item.getOrder()];
      final ContentValues values=new ContentValues();
      values.put(Accounts.IS_ACTIVATED,!account.is_activated);
      final String where=Accounts.ACCOUNT_ID + " = " + account.account_id;
      mResolver.update(Accounts.CONTENT_URI,values,where,null);
      return true;
    }
  }
);
  mAccountProfileContainer.setOnClickListener(this);
  mAdapter.addView(mAccountSelectorView,false);
  mAdapter.addAdapter(mAccountOptionsAdapter);
  mAdapter.addView(mAppMenuSectionView,false);
  mAdapter.addAdapter(mAppMenuAdapter);
  setListAdapter(mAdapter);
  mPreferences.registerOnSharedPreferenceChangeListener(this);
  getLoaderManager().initLoader(0,null,this);
}
