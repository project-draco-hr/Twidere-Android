{
  final ListAdapter adapter=mAdapter.getAdapter(position);
  final Object item=mAdapter.getItem(position);
  if (adapter instanceof AccountOptionsAdapter) {
    final ParcelableAccount account=mAccountsAdapter.getSelectedAccount();
    if (account == null || !(item instanceof OptionItem))     return;
    final OptionItem option=(OptionItem)item;
    final AccountKey accountKey=new AccountKey(account.account_id,account.account_host);
switch (option.id) {
case R.id.search:
{
        final Intent intent=new Intent(getActivity(),QuickSearchBarActivity.class);
        intent.putExtra(EXTRA_ACCOUNT_KEY,accountKey);
        startActivity(intent);
        closeAccountsDrawer();
        break;
      }
case R.id.compose:
{
      final Intent composeIntent=new Intent(INTENT_ACTION_COMPOSE);
      composeIntent.setClass(getActivity(),ComposeActivity.class);
      composeIntent.putExtra(EXTRA_ACCOUNT_KEY,accountKey);
      startActivity(composeIntent);
      break;
    }
case R.id.favorites:
{
    IntentUtils.openUserFavorites(getActivity(),accountKey,account.account_id,account.screen_name);
    break;
  }
case R.id.lists:
{
  IntentUtils.openUserLists(getActivity(),accountKey,account.account_id,account.screen_name);
  break;
}
case R.id.messages:
{
IntentUtils.openDirectMessages(getActivity(),accountKey);
break;
}
case R.id.interactions:
{
IntentUtils.openInteractions(getActivity(),accountKey);
break;
}
case R.id.edit:
{
Utils.openProfileEditor(getActivity(),accountKey);
break;
}
}
}
 else if (adapter instanceof AppMenuAdapter) {
if (!(item instanceof OptionItem)) return;
final OptionItem option=(OptionItem)item;
switch (option.id) {
case R.id.accounts:
{
Utils.openAccountsManager(getActivity());
break;
}
case R.id.drafts:
{
Utils.openDrafts(getActivity());
break;
}
case R.id.filters:
{
Utils.openFilters(getActivity());
break;
}
case R.id.settings:
{
final Intent intent=new Intent(getActivity(),SettingsActivity.class);
intent.addFlags(Intent.FLAG_ACTIVITY_REORDER_TO_FRONT);
startActivityForResult(intent,REQUEST_SETTINGS);
break;
}
}
closeAccountsDrawer();
}
}
