{
  inflater.inflate(R.menu.menu_custom_tabs,menu);
  final Resources res=getResources();
  final boolean hasOfficialKeyAccounts=Utils.hasAccountSignedWithOfficialKeys(getActivity());
  final boolean forcePrivateAPI=mPreferences.getBoolean(KEY_FORCE_USING_PRIVATE_APIS,false);
  final long[] accountIds=getAccountIds(getActivity());
  final MenuItem itemAdd=menu.findItem(R.id.add_submenu);
  if (itemAdd != null && itemAdd.hasSubMenu()) {
    final SubMenu subMenu=itemAdd.getSubMenu();
    subMenu.clear();
    final HashMap<String,CustomTabConfiguration> map=getConfigurationMap();
    final List<Entry<String,CustomTabConfiguration>> tabs=new ArrayList<>(map.entrySet());
    Collections.sort(tabs,CustomTabConfigurationComparator.SINGLETON);
    for (    final Entry<String,CustomTabConfiguration> entry : tabs) {
      final String type=entry.getKey();
      final CustomTabConfiguration conf=entry.getValue();
      final boolean isOfficialKeyAccountRequired=TAB_TYPE_ACTIVITIES_ABOUT_ME.equals(type) || TAB_TYPE_ACTIVITIES_BY_FRIENDS.equals(type);
      final boolean accountIdRequired=conf.getAccountRequirement() == CustomTabConfiguration.ACCOUNT_REQUIRED;
      final Intent intent=new Intent(INTENT_ACTION_ADD_TAB);
      intent.setClass(getActivity(),CustomTabEditorActivity.class);
      intent.putExtra(EXTRA_TYPE,type);
      intent.putExtra(EXTRA_OFFICIAL_KEY_ONLY,isOfficialKeyAccountRequired);
      final MenuItem subItem=subMenu.add(conf.getDefaultTitle());
      final boolean disabledByNoAccount=accountIdRequired && accountIds.length == 0;
      final boolean disabledByNoOfficialKey=!forcePrivateAPI && isOfficialKeyAccountRequired && !hasOfficialKeyAccounts;
      final boolean disabledByDuplicateTab=conf.isSingleTab() && isTabAdded(getActivity(),type);
      final boolean shouldDisable=disabledByDuplicateTab || disabledByNoOfficialKey || disabledByNoAccount;
      subItem.setVisible(!shouldDisable);
      subItem.setEnabled(!shouldDisable);
      final Drawable icon=ResourcesCompat.getDrawable(res,conf.getDefaultIcon(),null);
      subItem.setIcon(icon);
      subItem.setIntent(intent);
    }
  }
}
