{
  if (lm.getChildCount() == 0 || state.getItemCount() == 0 || startChild == null || endChild == null) {
    return 0;
  }
  final int minPosition=Math.min(lm.getPosition(startChild),lm.getPosition(endChild));
  final int maxPosition=Math.max(lm.getPosition(startChild),lm.getPosition(endChild));
  final int itemsBefore=reverseLayout ? Math.max(0,state.getItemCount() - maxPosition - 1) : Math.max(0,minPosition);
  if (!smoothScrollbarEnabled) {
    return itemsBefore;
  }
  final int laidOutArea=Math.abs(orientation.getDecoratedEnd(endChild) - orientation.getDecoratedStart(startChild));
  final int itemRange=Math.abs(lm.getPosition(startChild) - lm.getPosition(endChild)) + 1;
  final float avgSizePerRow=(float)laidOutArea / itemRange;
  return Math.round(itemsBefore * avgSizePerRow + (orientation.getStartAfterPadding() - orientation.getDecoratedStart(startChild)));
}
