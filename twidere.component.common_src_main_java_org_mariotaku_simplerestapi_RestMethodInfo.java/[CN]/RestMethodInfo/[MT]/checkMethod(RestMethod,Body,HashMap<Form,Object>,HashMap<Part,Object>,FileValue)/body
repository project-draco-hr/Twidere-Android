{
  if (restMethod == null)   throw new NotImplementedException("Method must has annotation annotated with @RestMethod");
  if (restMethod.hasBody() && body == null) {
    throw new IllegalArgumentException("@Body required for method " + restMethod.value());
  }
 else   if (!restMethod.hasBody() && body != null) {
    throw new IllegalArgumentException(restMethod.value() + " does not allow body");
  }
  if (body == null)   return;
switch (body.value()) {
case FILE:
{
      if (file == null) {
        throw new NullPointerException("@File annotation is required");
      }
      if (!forms.isEmpty() || !parts.isEmpty()) {
        throw new IllegalArgumentException("Only arguments with @File annotation allowed");
      }
      break;
    }
case MULTIPART:
{
    if (!forms.isEmpty() || file != null) {
      throw new IllegalArgumentException("Only arguments with @Part annotation allowed");
    }
    break;
  }
case FORM:
{
  if (file != null || !parts.isEmpty()) {
    throw new IllegalArgumentException("Only arguments with @Form annotation allowed");
  }
  break;
}
}
}
