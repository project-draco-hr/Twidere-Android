{
  final Context context=adapter.getContext();
  final Resources resources=adapter.getContext().getResources();
switch (activity.action) {
case Activity.ACTION_FOLLOW:
{
      activityTypeView.setImageResource(R.drawable.ic_activity_action_follow);
      activityTypeView.setColorFilter(ContextCompat.getColor(context,R.color.highlight_follow),Mode.SRC_ATOP);
      titleView.setText(getTitleStringAboutMe(R.string.activity_about_me_follow,R.string.activity_about_me_follow_multi,activity.sources));
      displayUserProfileImages(activity.sources);
      summaryView.setVisibility(View.GONE);
      break;
    }
case Activity.ACTION_FAVORITE:
{
    activityTypeView.setImageResource(R.drawable.ic_activity_action_favorite);
    activityTypeView.setColorFilter(ContextCompat.getColor(context,R.color.highlight_favorite),Mode.SRC_ATOP);
    titleView.setText(getTitleStringAboutMe(R.string.activity_about_me_favorite,R.string.activity_about_me_favorite_multi,activity.sources));
    displayUserProfileImages(activity.sources);
    summaryView.setText(activity.target_statuses[0].text_unescaped);
    summaryView.setVisibility(View.VISIBLE);
    break;
  }
case Activity.ACTION_RETWEET:
{
  activityTypeView.setImageResource(R.drawable.ic_activity_action_retweet);
  activityTypeView.setColorFilter(ContextCompat.getColor(context,R.color.highlight_retweet),Mode.SRC_ATOP);
  titleView.setText(getTitleStringAboutMe(R.string.activity_about_me_retweet,R.string.activity_about_me_retweet_multi,activity.sources));
  displayUserProfileImages(activity.sources);
  summaryView.setText(activity.target_statuses[0].text_unescaped);
  summaryView.setVisibility(View.VISIBLE);
  break;
}
case Activity.ACTION_FAVORITED_RETWEET:
{
activityTypeView.setImageResource(R.drawable.ic_activity_action_favorite);
activityTypeView.setColorFilter(ContextCompat.getColor(context,R.color.highlight_favorite),Mode.SRC_ATOP);
titleView.setText(getTitleStringAboutMe(R.string.activity_about_me_favorited_retweet,R.string.activity_about_me_favorited_retweet_multi,activity.sources));
displayUserProfileImages(activity.sources);
summaryView.setText(activity.target_statuses[0].text_unescaped);
summaryView.setVisibility(View.VISIBLE);
break;
}
case Activity.ACTION_RETWEETED_RETWEET:
{
activityTypeView.setImageResource(R.drawable.ic_activity_action_retweet);
activityTypeView.setColorFilter(ContextCompat.getColor(context,R.color.highlight_retweet),Mode.SRC_ATOP);
titleView.setText(getTitleStringAboutMe(R.string.activity_about_me_retweeted_retweet,R.string.activity_about_me_retweeted_retweet_multi,activity.sources));
displayUserProfileImages(activity.sources);
summaryView.setText(activity.target_statuses[0].text_unescaped);
summaryView.setVisibility(View.VISIBLE);
break;
}
case Activity.ACTION_RETWEETED_MENTION:
{
activityTypeView.setImageResource(R.drawable.ic_activity_action_retweet);
activityTypeView.setColorFilter(ContextCompat.getColor(context,R.color.highlight_retweet),Mode.SRC_ATOP);
titleView.setText(getTitleStringAboutMe(R.string.activity_about_me_retweeted_mention,R.string.activity_about_me_retweeted_mention_multi,activity.sources));
displayUserProfileImages(activity.sources);
summaryView.setText(activity.target_statuses[0].text_unescaped);
summaryView.setVisibility(View.VISIBLE);
break;
}
case Activity.ACTION_FAVORITED_MENTION:
{
activityTypeView.setImageResource(R.drawable.ic_activity_action_favorite);
activityTypeView.setColorFilter(ContextCompat.getColor(context,R.color.highlight_favorite),Mode.SRC_ATOP);
titleView.setText(getTitleStringAboutMe(R.string.activity_about_me_favorited_mention,R.string.activity_about_me_favorited_mention_multi,activity.sources));
displayUserProfileImages(activity.sources);
summaryView.setText(activity.target_statuses[0].text_unescaped);
summaryView.setVisibility(View.VISIBLE);
break;
}
case Activity.ACTION_LIST_MEMBER_ADDED:
{
activityTypeView.setImageResource(R.drawable.ic_activity_action_list_added);
activityTypeView.setColorFilter(activityTypeView.getDefaultColor(),Mode.SRC_ATOP);
if (activity.sources.length == 1 && activity.target_object_user_lists != null && activity.target_object_user_lists.length == 1) {
final UserColorNameManager manager=adapter.getUserColorNameManager();
final SpannableString firstDisplayName=new SpannableString(manager.getDisplayName(activity.sources[0],adapter.isNameFirst(),false));
final SpannableString listName=new SpannableString(activity.target_object_user_lists[0].name);
firstDisplayName.setSpan(new StyleSpan(Typeface.BOLD),0,firstDisplayName.length(),Spanned.SPAN_EXCLUSIVE_EXCLUSIVE);
listName.setSpan(new StyleSpan(Typeface.BOLD),0,listName.length(),Spanned.SPAN_EXCLUSIVE_EXCLUSIVE);
final String format=context.getString(R.string.activity_about_me_list_member_added_with_name);
final Configuration configuration=resources.getConfiguration();
titleView.setText(SpanFormatter.format(configuration.locale,format,firstDisplayName,listName));
}
 else {
titleView.setText(getTitleStringAboutMe(R.string.activity_about_me_list_member_added,R.string.activity_about_me_list_member_added_multi,activity.sources));
}
displayUserProfileImages(activity.sources);
summaryView.setVisibility(View.GONE);
break;
}
}
}
