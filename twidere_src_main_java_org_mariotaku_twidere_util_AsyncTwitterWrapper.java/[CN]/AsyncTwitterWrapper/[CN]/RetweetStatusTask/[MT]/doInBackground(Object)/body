{
  final ParcelableCredentials credentials=ParcelableCredentialsUtils.getCredentials(mContext,mAccountKey);
  if (credentials == null)   return SingleResponse.Companion.getInstance();
  final MicroBlog twitter=MicroBlogAPIFactory.getInstance(mContext,credentials,true,true);
  if (twitter == null) {
    return SingleResponse.Companion.getInstance();
  }
  try {
    final ParcelableStatus result=ParcelableStatusUtils.fromStatus(twitter.retweetStatus(mStatusId),mAccountKey,false);
    ParcelableStatusUtils.updateExtraInformation(result,credentials,mUserColorNameManager);
    Utils.setLastSeen(mContext,result.mentions,System.currentTimeMillis());
    final ContentValues values=new ContentValues();
    values.put(Statuses.MY_RETWEET_ID,result.id);
    values.put(Statuses.REPLY_COUNT,result.reply_count);
    values.put(Statuses.RETWEET_COUNT,result.retweet_count);
    values.put(Statuses.FAVORITE_COUNT,result.favorite_count);
    final Expression where=Expression.or(Expression.equalsArgs(Statuses.STATUS_ID),Expression.equalsArgs(Statuses.RETWEET_ID));
    final String[] whereArgs={mStatusId,mStatusId};
    for (    final Uri uri : TwidereDataStore.STATUSES_URIS) {
      mResolver.update(uri,values,where.getSQL(),whereArgs);
    }
    DataStoreUtils.updateActivityStatus(mResolver,mAccountKey,mStatusId,new DataStoreUtils.UpdateActivityAction(){
      @Override public void process(      ParcelableActivity activity){
        ParcelableStatus[][] statusesMatrix={activity.target_statuses,activity.target_object_statuses};
        activity.status_my_retweet_id=result.my_retweet_id;
        for (        ParcelableStatus[] statusesArray : statusesMatrix) {
          if (statusesArray == null)           continue;
          for (          ParcelableStatus status : statusesArray) {
            if (mStatusId.equals(status.id) || mStatusId.equals(status.retweet_id) || mStatusId.equals(status.my_retweet_id)) {
              status.my_retweet_id=result.id;
              status.reply_count=result.reply_count;
              status.retweet_count=result.retweet_count;
              status.favorite_count=result.favorite_count;
            }
          }
        }
      }
    }
);
    return SingleResponse.Companion.getInstance(result);
  }
 catch (  final MicroBlogException e) {
    return SingleResponse.Companion.getInstance(e);
  }
}
