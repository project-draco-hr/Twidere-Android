{
  final Twitter twitter=TwitterAPIFactory.getTwitterInstance(mContext,mAccountKey,false);
  if (twitter != null) {
    try {
      final User user=twitter.destroyFriendship(mUserId);
      Utils.setLastSeen(mContext,UserKeyUtils.fromUser(user),-1);
      final Expression where=Expression.and(Expression.equalsArgs(AccountSupportColumns.ACCOUNT_KEY),Expression.or(Expression.equalsArgs(Statuses.USER_ID),Expression.equalsArgs(Statuses.RETWEETED_BY_USER_ID)));
      final String[] whereArgs={mAccountKey.toString(),String.valueOf(mUserId),String.valueOf(mUserId)};
      mResolver.delete(Statuses.CONTENT_URI,where.getSQL(),whereArgs);
      return SingleResponse.getInstance(ParcelableUserUtils.fromUser(user,mAccountKey),null);
    }
 catch (    final TwitterException e) {
      return SingleResponse.getInstance(null,e);
    }
  }
  return SingleResponse.getInstance();
}
