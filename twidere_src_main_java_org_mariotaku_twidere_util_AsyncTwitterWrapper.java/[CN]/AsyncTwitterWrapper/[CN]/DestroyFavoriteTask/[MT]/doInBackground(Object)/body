{
  final Twitter twitter=TwitterAPIFactory.getTwitterInstance(mContext,mAccountKey,true);
  if (twitter == null) {
    return SingleResponse.getInstance();
  }
  try {
    final ParcelableStatus status=ParcelableStatusUtils.fromStatus(twitter.destroyFavorite(mStatusId),mAccountKey,false);
    final ContentValues values=new ContentValues();
    values.put(Statuses.IS_FAVORITE,false);
    values.put(Statuses.FAVORITE_COUNT,status.favorite_count - 1);
    final Expression where=Expression.and(Utils.getAccountCompareExpression(),Expression.or(Expression.equals(Statuses.STATUS_ID,mStatusId),Expression.equals(Statuses.RETWEET_ID,mStatusId)));
    String[] whereArgs={String.valueOf(mAccountKey.getId()),mAccountKey.getHost(),String.valueOf(mStatusId),String.valueOf(mStatusId)};
    for (    final Uri uri : TwidereDataStore.STATUSES_URIS) {
      mResolver.update(uri,values,where.getSQL(),whereArgs);
    }
    return SingleResponse.getInstance(status);
  }
 catch (  final TwitterException e) {
    return SingleResponse.getInstance(e);
  }
}
