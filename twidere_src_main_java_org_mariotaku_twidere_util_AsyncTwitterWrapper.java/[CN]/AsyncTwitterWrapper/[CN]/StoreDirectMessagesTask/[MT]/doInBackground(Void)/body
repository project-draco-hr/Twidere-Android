{
  boolean succeed=false;
  for (  final TwitterListResponse<DirectMessage> response : responses) {
    final long accountId=response.account_id;
    final List<DirectMessage> messages=response.list;
    if (messages != null) {
      final ContentValues[] values_array=new ContentValues[messages.size()];
      final long[] messageIds=new long[messages.size()];
      for (int i=0, j=messages.size(); i < j; i++) {
        final DirectMessage message=messages.get(i);
        messageIds[i]=message.getId();
        values_array[i]=makeDirectMessageContentValues(message,accountId,isOutgoing());
      }
{
        final Expression deleteWhere=Expression.and(Expression.equals(DirectMessages.ACCOUNT_ID,accountId),Expression.in(new Column(DirectMessages.MESSAGE_ID),new RawItemArray(messageIds)));
        final Uri deleteUri=appendQueryParameters(uri,new NameValuePairImpl(QUERY_PARAM_NOTIFY,false));
        mResolver.delete(deleteUri,deleteWhere.getSQL(),null);
      }
      final Uri insertUri=appendQueryParameters(uri,new NameValuePairImpl(QUERY_PARAM_NOTIFY,notify));
      bulkInsert(mResolver,insertUri,values_array);
    }
    succeed=true;
  }
  return SingleResponse.getInstance(succeed);
}
