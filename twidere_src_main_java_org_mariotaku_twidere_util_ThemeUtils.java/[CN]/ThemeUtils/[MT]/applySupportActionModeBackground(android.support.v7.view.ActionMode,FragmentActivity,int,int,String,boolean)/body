{
  if (!(modeCompat instanceof ActionModeImpl))   return;
  try {
    WindowDecorActionBar actionBar=null;
    final Field[] fields=ActionModeImpl.class.getDeclaredFields();
    for (    Field field : fields) {
      if (WindowDecorActionBar.class.isAssignableFrom(field.getType())) {
        field.setAccessible(true);
        actionBar=(WindowDecorActionBar)field.get(modeCompat);
        break;
      }
    }
    if (actionBar == null)     return;
    final Context context=actionBar.getThemedContext();
    final Field contextViewField=WindowDecorActionBar.class.getDeclaredField("mContextView");
    final Field decorToolbarField=WindowDecorActionBar.class.getDeclaredField("mDecorToolbar");
    contextViewField.setAccessible(true);
    decorToolbarField.setAccessible(true);
    final View contextView=(View)contextViewField.get(actionBar);
    final DecorToolbar decorToolbar=(DecorToolbar)decorToolbarField.get(actionBar);
    if (contextView == null || decorToolbar == null)     return;
    final Toolbar toolbar=(Toolbar)decorToolbar.getViewGroup();
    final int actionBarColor;
    if (isDarkTheme(themeRes)) {
      actionBarColor=context.getResources().getColor(R.color.background_color_action_bar_dark);
    }
 else {
      actionBarColor=accentColor;
    }
    toolbar.setTitleTextColor(getContrastActionBarTitleColor(context,themeRes,actionBarColor));
    ViewUtils.setBackground(contextView,getActionBarBackground(activity,themeRes,accentColor,backgroundOption,outlineEnabled));
  }
 catch (  Exception e) {
    e.printStackTrace();
  }
}
