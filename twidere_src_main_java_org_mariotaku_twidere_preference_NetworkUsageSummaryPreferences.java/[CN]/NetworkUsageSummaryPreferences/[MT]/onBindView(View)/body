{
  super.onBindView(view);
  final NetworkUsageInfo usage=mUsage;
  if (usage == null)   return;
  final double[][] chartUsage=usage.getChartUsage();
  final int days=chartUsage.length;
  final BarSet apiSet=new BarSet();
  final BarSet mediaSet=new BarSet();
  final BarSet usageStatisticsSet=new BarSet();
  double dayUsageMax=0;
  for (int i=0; i < days; i++) {
    String day=String.valueOf(i + 1);
    final double[] dayUsage=chartUsage[i];
    apiSet.addBar(day,(float)dayUsage[RequestType.API.getValue()]);
    mediaSet.addBar(day,(float)dayUsage[RequestType.MEDIA.getValue()]);
    usageStatisticsSet.addBar(day,(float)dayUsage[RequestType.USAGE_STATISTICS.getValue()]);
    dayUsageMax=Math.max(dayUsageMax,MathUtils.sum(dayUsage));
  }
  apiSet.setColor(Color.RED);
  mediaSet.setColor(Color.GREEN);
  usageStatisticsSet.setColor(Color.BLUE);
  final ArrayList<ChartSet> data=new ArrayList<>();
  data.add(apiSet);
  data.add(mediaSet);
  data.add(usageStatisticsSet);
  mChartView.addData(data);
  mChartView.show();
  mTotalUsage.setText(Utils.calculateProperSize((usage.getTotalSent() + usage.getTotalReceived()) * 1024));
  mDayUsageMax.setText(Utils.calculateProperSize((usage.getDayUsageMax()) * 1024));
  mDayMin.setText(String.valueOf(usage.getDayMin()));
  mDayMid.setText(String.valueOf((usage.getDayMin() + usage.getDayMax()) / 2));
  mDayMax.setText(String.valueOf(usage.getDayMax()));
}
