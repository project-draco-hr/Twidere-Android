{
  final String defConsumerKey=getNonEmptyString(mPreferences,KEY_CONSUMER_KEY,TWITTER_CONSUMER_KEY);
  final String defConsumerSecret=getNonEmptyString(mPreferences,KEY_CONSUMER_SECRET,TWITTER_CONSUMER_SECRET);
  final String consumerKey, consumerSecret;
  if (!isEmpty(mConsumerKey) && !isEmpty(mConsumerSecret)) {
    consumerKey=mConsumerKey;
    consumerSecret=mConsumerSecret;
  }
 else {
    consumerKey=defConsumerKey;
    consumerSecret=defConsumerSecret;
  }
  try {
    final Endpoint endpoint=new Endpoint(TwitterAPIUtils.getApiUrl(DEFAULT_TWITTER_API_URL_FORMAT,"api","oauth"));
    final Authorization auth=new OAuthAuthorization(consumerKey,consumerSecret);
    final TwitterOAuth twitter=TwitterAPIFactory.getInstance(mActivity,endpoint,auth,TwitterOAuth.class);
    return twitter.getRequestToken(OAUTH_CALLBACK_OOB);
  }
 catch (  final Exception e) {
    e.printStackTrace();
  }
  return null;
}
