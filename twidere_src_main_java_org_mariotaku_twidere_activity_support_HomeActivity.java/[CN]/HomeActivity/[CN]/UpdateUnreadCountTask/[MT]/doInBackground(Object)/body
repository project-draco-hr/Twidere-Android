{
  final SparseIntArray result=new SparseIntArray();
  for (int i=0, j=mTabs.size(); i < j; i++) {
    SupportTabSpec spec=mTabs.get(i);
    if (spec.type == null) {
      publishProgress(new TabBadge(i,-1));
      continue;
    }
switch (spec.type) {
case CustomTabType.HOME_TIMELINE:
{
        final AccountKey[] accountKeys=Utils.getAccountKeys(spec.args);
        final String tagWithAccounts=Utils.getReadPositionTagWithAccounts(mContext,true,ReadPositionTag.HOME_TIMELINE,accountKeys);
        final long position=mReadStateManager.getPosition(tagWithAccounts);
        final int count=DataStoreUtils.getStatusesCount(mContext,Statuses.CONTENT_URI,position,accountKeys);
        result.put(i,count);
        publishProgress(new TabBadge(i,count));
        break;
      }
case CustomTabType.NOTIFICATIONS_TIMELINE:
{
      final AccountKey[] accountIds=Utils.getAccountKeys(spec.args);
      final String tagWithAccounts=Utils.getReadPositionTagWithAccounts(mContext,true,ReadPositionTag.ACTIVITIES_ABOUT_ME,accountIds);
      final long position=mReadStateManager.getPosition(tagWithAccounts);
      final int count=DataStoreUtils.getInteractionsCount(mContext,spec.args,accountIds,position);
      publishProgress(new TabBadge(i,count));
      result.put(i,count);
      break;
    }
default :
{
    publishProgress(new TabBadge(i,-1));
    break;
  }
}
}
return result;
}
