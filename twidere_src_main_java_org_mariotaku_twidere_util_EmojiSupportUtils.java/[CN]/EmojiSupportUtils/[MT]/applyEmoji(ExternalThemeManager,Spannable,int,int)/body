{
  final ExternalThemeManager.Emoji emoji=manager.getEmoji();
  if (!emoji.isSupported())   return;
  final CodePointArray array=new CodePointArray(text);
  for (int arrayIdx=array.length() - 1; arrayIdx >= 0; arrayIdx--) {
    final int codePoint=array.get(arrayIdx);
    if (isEmoji(codePoint)) {
      int arrayEnd=arrayIdx + 1, arrayIdxOffset=0;
      int textIdx=array.indexOfText(codePoint,arrayIdx), textIdxOffset=0;
      int skippedIndex=0;
      if (textIdx == -1 || textIdx < textStart) {
        continue;
      }
      final int textEnd=textIdx + Character.charCount(codePoint);
      if (arrayIdx > 0) {
        final int prevCodePoint=array.get(arrayIdx - 1);
        if (isRegionalIndicatorSymbol(codePoint)) {
          if (isRegionalIndicatorSymbol(prevCodePoint)) {
            arrayIdxOffset=-1;
            textIdxOffset=-Character.charCount(prevCodePoint);
            skippedIndex=-1;
          }
        }
 else         if (isModifier(codePoint)) {
          if (isEmoji(prevCodePoint)) {
            arrayIdxOffset=-1;
            textIdxOffset=-Character.charCount(prevCodePoint);
            skippedIndex=-1;
          }
        }
 else         if (isKeyCap(codePoint)) {
          if (isPhoneNumberSymbol(prevCodePoint)) {
            arrayIdxOffset=-1;
            textIdxOffset=-Character.charCount(prevCodePoint);
            skippedIndex=-1;
          }
        }
 else         if (isZeroWidthJoin(prevCodePoint)) {
          int notValidControlCount=0;
          int charCount=0;
          for (int i=arrayIdx - 1; i >= 0; i--) {
            final int cp=array.get(i);
            charCount+=Character.charCount(cp);
            if (isZeroWidthJoin(cp) || isVariationSelector(cp)) {
              notValidControlCount=0;
              continue;
            }
            notValidControlCount++;
            if (notValidControlCount > 1 || i == 0) {
              arrayIdxOffset=i - arrayIdx + 1;
              textIdxOffset=-charCount + Character.charCount(cp);
              skippedIndex=i - arrayIdx + 1;
              break;
            }
          }
        }
      }
      if (textEnd > textStart + textLength)       continue;
      EmojiSpan[] spans=text.getSpans(textIdx + textIdxOffset,textEnd,EmojiSpan.class);
      if (spans.length == 0) {
        Drawable drawable=emoji.getEmojiDrawableFor(array.subarray(arrayIdx + arrayIdxOffset,arrayEnd));
        if (drawable == null) {
          textIdxOffset=0;
          arrayIdxOffset=0;
          skippedIndex=0;
          spans=text.getSpans(textIdx + textIdxOffset,textEnd,EmojiSpan.class);
          if (spans.length == 0) {
            drawable=emoji.getEmojiDrawableFor(array.subarray(arrayIdx + arrayIdxOffset,arrayEnd));
          }
        }
        if (drawable != null) {
          text.setSpan(new EmojiSpan(drawable),textIdx + textIdxOffset,textEnd,Spanned.SPAN_EXCLUSIVE_EXCLUSIVE);
        }
      }
      arrayIdx+=skippedIndex;
    }
  }
}
