{
  final ContentValues values;
switch (authType) {
case ParcelableCredentials.AUTH_TYPE_BASIC:
{
      values=createAccount(basicUsername,basicPassword,user,color,apiUrlFormat,noVersionSuffix);
      break;
    }
case ParcelableCredentials.AUTH_TYPE_TWIP_O_MODE:
{
    values=ContentValuesCreator.createAccount(user,color,apiUrlFormat,noVersionSuffix);
    break;
  }
case ParcelableCredentials.AUTH_TYPE_OAUTH:
case ParcelableCredentials.AUTH_TYPE_XAUTH:
{
  values=ContentValuesCreator.createAccount(oauth,user,authType,color,apiUrlFormat,sameOauthSigningUrl,noVersionSuffix);
  break;
}
default :
{
values=null;
}
}
if (values != null && accountType != null) {
values.put(Accounts.ACCOUNT_TYPE,accountType.first);
values.put(Accounts.ACCOUNT_EXTRAS,accountType.second);
final ParcelableUser parcelableUser=ParcelableUserUtils.fromUser(user,user.getId());
values.put(Accounts.ACCOUNT_HOST,ParcelableUserUtils.getUserHost(parcelableUser));
values.put(Accounts.ACCOUNT_USER,JsonSerializer.serialize(parcelableUser,ParcelableUser.class));
}
return values;
}
