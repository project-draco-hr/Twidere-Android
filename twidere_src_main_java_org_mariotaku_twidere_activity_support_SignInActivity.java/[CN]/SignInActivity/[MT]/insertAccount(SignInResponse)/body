{
  final ContentValues values;
switch (result.authType) {
case ParcelableCredentials.AUTH_TYPE_BASIC:
{
      values=createAccount(result.basicUsername,result.basicPassword,result.user,result.color,result.apiUrlFormat,result.noVersionSuffix);
      break;
    }
case ParcelableCredentials.AUTH_TYPE_TWIP_O_MODE:
{
    values=ContentValuesCreator.createAccount(result.user,result.color,result.apiUrlFormat,result.noVersionSuffix);
    break;
  }
case ParcelableCredentials.AUTH_TYPE_OAUTH:
case ParcelableCredentials.AUTH_TYPE_XAUTH:
{
  values=ContentValuesCreator.createAccount(result.oauth,result.user,result.authType,result.color,result.apiUrlFormat,result.sameOauthSigningUrl,result.noVersionSuffix);
  break;
}
default :
{
values=null;
}
}
if (values != null) {
mResolver.insert(Accounts.CONTENT_URI,values);
}
}
