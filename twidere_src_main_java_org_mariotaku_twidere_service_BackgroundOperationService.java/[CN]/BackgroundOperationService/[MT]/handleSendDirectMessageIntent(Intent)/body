{
  final long accountId=intent.getLongExtra(EXTRA_ACCOUNT_ID,-1);
  final long recipientId=intent.getLongExtra(EXTRA_RECIPIENT_ID,-1);
  final String imageUri=intent.getStringExtra(EXTRA_IMAGE_URI);
  final String text=intent.getStringExtra(EXTRA_TEXT);
  if (accountId <= 0 || recipientId <= 0 || isEmpty(text))   return;
  final String title=getString(R.string.sending_direct_message);
  final NotificationCompat.Builder builder=new NotificationCompat.Builder(this);
  builder.setSmallIcon(R.drawable.ic_stat_send);
  builder.setProgress(100,0,true);
  builder.setTicker(title);
  builder.setContentTitle(title);
  builder.setContentText(text);
  builder.setOngoing(true);
  final Notification notification=builder.build();
  startForeground(NOTIFICATION_ID_SEND_DIRECT_MESSAGE,notification);
  final SingleResponse<ParcelableDirectMessage> result=sendDirectMessage(builder,accountId,recipientId,text,imageUri);
  if (result.getData() != null && result.getData().id > 0) {
    final ContentValues values=makeDirectMessageContentValues(result.getData());
    final String delete_where=DirectMessages.ACCOUNT_ID + " = " + accountId+ " AND "+ DirectMessages.MESSAGE_ID+ " = "+ result.getData().id;
    mResolver.delete(DirectMessages.Outbox.CONTENT_URI,delete_where,null);
    mResolver.insert(DirectMessages.Outbox.CONTENT_URI,values);
    showOkMessage(R.string.direct_message_sent,false);
  }
 else {
    final ContentValues values=makeDirectMessageDraftContentValues(accountId,recipientId,text,imageUri);
    mResolver.insert(Drafts.CONTENT_URI,values);
    showErrorMessage(R.string.action_sending_direct_message,result.getException(),true);
  }
  stopForeground(false);
  mNotificationManager.cancel(NOTIFICATION_ID_SEND_DIRECT_MESSAGE);
}
