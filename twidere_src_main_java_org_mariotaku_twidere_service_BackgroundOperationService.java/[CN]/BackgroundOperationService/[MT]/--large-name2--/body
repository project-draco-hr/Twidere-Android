{
  try {
    if (ParcelableAccount.Type.FANFOU.equals(credentials.account_type)) {
      if (statusUpdate.media.length > 1) {
        throw new UpdateStatusException(getString(R.string.error_too_many_photos_fanfou));
      }
      ParcelableMediaUpdate media=statusUpdate.media[0];
      FileBody body=null;
      try {
        body=getBodyFromMedia(resolver,builder,media,statusUpdate);
        final PhotoStatusUpdate update=new PhotoStatusUpdate(body,statusText);
        if (statusUpdate.location != null) {
          update.setLocation(statusUpdate.location.toString());
        }
        final Status newStatus=twitter.uploadPhoto(update);
        final ParcelableStatus result=ParcelableStatusUtils.fromStatus(newStatus,credentials.account_key,false);
        if (shouldShorten && shortener != null && shortenedResult != null) {
          shortener.callback(shortenedResult,result);
        }
        if (uploader != null && uploadResult != null) {
          uploader.callback(uploadResult,result);
        }
        results.add(SingleResponse.getInstance(result));
      }
  finally {
        Utils.closeSilently(body);
      }
      return true;
    }
 else {
      final TwitterUpload upload=MicroBlogAPIFactory.getTwitterInstance(this,credentials,true,true,TwitterUpload.class);
      if (upload == null) {
        throw new UpdateStatusException("Twitter instance is null");
      }
      final String[] mediaIds=new String[statusUpdate.media.length];
      for (int i=0, j=mediaIds.length; i < j; i++) {
        final ParcelableMediaUpdate media=statusUpdate.media[i];
        FileBody body=null;
        final MediaUploadResponse uploadResp;
        try {
          body=getBodyFromMedia(resolver,builder,media,statusUpdate);
          uploadResp=upload.uploadMedia(body);
          if (!TextUtils.isEmpty(media.alt_text)) {
            upload.createMetadata(new NewMediaMetadata(uploadResp.getId(),media.alt_text));
          }
        }
  finally {
          Utils.closeSilently(body);
        }
        mediaIds[i]=uploadResp.getId();
      }
      status.mediaIds(mediaIds);
    }
  }
 catch (  final IOException e) {
    if (BuildConfig.DEBUG) {
      Log.w(LOGTAG,e);
    }
  }
catch (  final TwitterException e) {
    if (BuildConfig.DEBUG) {
      Log.w(LOGTAG,e);
    }
    final SingleResponse<ParcelableStatus> response=SingleResponse.getInstance(e);
    results.add(response);
    return true;
  }
  return false;
}
