{
  final Uri uri=intent.getData();
  if (uri == null)   return;
  mNotificationManager.cancel(uri.toString(),NOTIFICATION_ID_DRAFTS);
  final long def=-1;
  final long draftId=NumberUtils.toLong(uri.getLastPathSegment(),def);
  if (draftId == -1)   return;
  final Expression where=Expression.equals(Drafts._ID,draftId);
  final ContentResolver cr=getContentResolver();
  final Cursor c=cr.query(Drafts.CONTENT_URI,Drafts.COLUMNS,where.getSQL(),null,null);
  if (c == null)   return;
  final DraftCursorIndices i=new DraftCursorIndices(c);
  final Draft item;
  try {
    if (!c.moveToFirst())     return;
    item=i.newObject(c);
  }
  finally {
    c.close();
  }
  cr.delete(Drafts.CONTENT_URI,where.getSQL(),null);
  if (TextUtils.isEmpty(item.action_type)) {
    item.action_type=Draft.Action.UPDATE_STATUS;
  }
switch (item.action_type) {
case Draft.Action.UPDATE_STATUS_COMPAT_1:
case Draft.Action.UPDATE_STATUS_COMPAT_2:
case Draft.Action.UPDATE_STATUS:
case Draft.Action.REPLY:
case Draft.Action.QUOTE:
{
      updateStatuses(item.action_type,ParcelableStatusUpdateUtils.fromDraftItem(this,item));
      break;
    }
case Draft.Action.SEND_DIRECT_MESSAGE_COMPAT:
case Draft.Action.SEND_DIRECT_MESSAGE:
{
    String recipientId=null;
    if (item.action_extras instanceof SendDirectMessageActionExtra) {
      recipientId=((SendDirectMessageActionExtra)item.action_extras).getRecipientId();
    }
    if (ArrayUtils.isEmpty(item.account_keys) || recipientId == null) {
      return;
    }
    final UserKey accountKey=item.account_keys[0];
    final String imageUri=ArrayUtils.isEmpty(item.media) ? null : item.media[0].uri;
    sendMessage(accountKey,recipientId,item.text,imageUri);
    break;
  }
}
}
