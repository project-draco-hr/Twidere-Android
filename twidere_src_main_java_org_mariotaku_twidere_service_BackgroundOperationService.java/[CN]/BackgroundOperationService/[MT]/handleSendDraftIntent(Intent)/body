{
  final Uri uri=intent.getData();
  if (uri == null)   return;
  mNotificationManager.cancel(uri.toString(),NOTIFICATION_ID_DRAFTS);
  final long def=-1;
  final long draftId=NumberUtils.toLong(uri.getLastPathSegment(),def);
  if (draftId == -1)   return;
  final Expression where=Expression.equals(Drafts._ID,draftId);
  final ContentResolver cr=getContentResolver();
  final Cursor c=cr.query(Drafts.CONTENT_URI,Drafts.COLUMNS,where.getSQL(),null,null);
  if (c == null)   return;
  final DraftItemCursorIndices i=new DraftItemCursorIndices(c);
  final DraftItem item;
  try {
    if (!c.moveToFirst())     return;
    item=i.newObject(c);
  }
  finally {
    c.close();
  }
  cr.delete(Drafts.CONTENT_URI,where.getSQL(),null);
  if (item.action_type == Drafts.ACTION_UPDATE_STATUS || item.action_type <= 0) {
    updateStatuses(ParcelableStatusUpdateUtils.fromDraftItem(this,item));
  }
 else   if (item.action_type == Drafts.ACTION_SEND_DIRECT_MESSAGE) {
    final long recipientId=item.action_extras != null ? item.action_extras.getLong(EXTRA_RECIPIENT_ID) : -1;
    if (item.account_ids == null || item.account_ids.length <= 0 || recipientId <= 0) {
      return;
    }
    final long accountId=item.account_ids[0];
    final String imageUri=item.media != null && item.media.length > 0 ? item.media[0].uri : null;
    sendMessage(accountId,recipientId,item.text,imageUri);
  }
}
