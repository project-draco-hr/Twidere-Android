{
  final NotificationCompat.Builder builder=new NotificationCompat.Builder(this);
  final ParcelableStatusUpdate status=intent.getParcelableExtra(EXTRA_STATUS);
  final Parcelable[] status_parcelables=intent.getParcelableArrayExtra(EXTRA_STATUSES);
  final ParcelableStatusUpdate[] statuses;
  if (status_parcelables != null) {
    statuses=new ParcelableStatusUpdate[status_parcelables.length];
    for (int i=0, j=status_parcelables.length; i < j; i++) {
      statuses[i]=(ParcelableStatusUpdate)status_parcelables[i];
    }
  }
 else   if (status != null) {
    statuses=new ParcelableStatusUpdate[1];
    statuses[0]=status;
  }
 else   return;
  startForeground(NOTIFICATION_ID_UPDATE_STATUS,updateUpdateStatusNotificaion(this,builder,0,null));
  for (  final ParcelableStatusUpdate item : statuses) {
    mNotificationManager.notify(NOTIFICATION_ID_UPDATE_STATUS,updateUpdateStatusNotificaion(this,builder,0,item));
    final List<SingleResponse<ParcelableStatus>> result=updateStatus(builder,item);
    boolean failed=false;
    Exception exception=null;
    final List<Long> failed_account_ids=ListUtils.fromArray(Account.getAccountIds(item.accounts));
    for (    final SingleResponse<ParcelableStatus> response : result) {
      if (response.getData() == null) {
        failed=true;
        if (exception == null) {
          exception=response.getException();
        }
      }
 else       if (response.getData().account_id > 0) {
        failed_account_ids.remove(response.getData().account_id);
      }
    }
    if (result.isEmpty()) {
      saveDrafts(item,failed_account_ids);
      showErrorMessage(R.string.action_updating_status,getString(R.string.no_account_selected),false);
    }
 else     if (failed) {
      if (exception instanceof TwitterException && ((TwitterException)exception).getErrorCode() == StatusCodeMessageUtils.STATUS_IS_DUPLICATE) {
        showErrorMessage(getString(R.string.status_is_duplicate),false);
      }
 else {
        saveDrafts(item,failed_account_ids);
        showErrorMessage(R.string.action_updating_status,exception,true);
      }
    }
 else {
      showOkMessage(R.string.status_updated,false);
      if (item.medias != null) {
        for (        final ParcelableMediaUpdate media : item.medias) {
          final String path=getImagePathFromUri(this,Uri.parse(media.uri));
          if (path != null) {
            new File(path).delete();
          }
        }
      }
    }
    if (mPreferences.getBoolean(KEY_REFRESH_AFTER_TWEET,false)) {
      mTwitter.refreshAll();
    }
  }
  stopForeground(false);
  mNotificationManager.cancel(NOTIFICATION_ID_UPDATE_STATUS);
}
