{
  final String action=handler.getKeyAction("navigation",keyCode,event);
  if (action == null)   return false;
  final LinearLayoutManager layoutManager=this.manager;
  final View focusedChild=RecyclerViewUtils.findRecyclerViewChild(view,layoutManager.getFocusedChild());
  final int position;
  if (focusedChild != null) {
    position=view.getChildLayoutPosition(focusedChild);
  }
 else   if (layoutManager.findFirstVisibleItemPosition() == 0) {
    position=-1;
  }
 else {
    final int itemCount=adapter.getItemCount();
    if (layoutManager.findLastVisibleItemPosition() == itemCount - 1) {
      position=itemCount;
    }
 else {
      position=positionBackup;
    }
  }
  positionBackup=position;
switch (action) {
case "navigation.previous":
{
      RecyclerViewUtils.focusNavigate(view,layoutManager,position,-1);
      return true;
    }
case "navigation.next":
{
    RecyclerViewUtils.focusNavigate(view,layoutManager,position,1);
    return true;
  }
}
return false;
}
