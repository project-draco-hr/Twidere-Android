{
  final String action=handler.getKeyAction(CONTEXT_TAG_NAVIGATION,keyCode,event);
  if (action == null)   return false;
  final int direction;
switch (action) {
case ACTION_NAVIGATION_PREVIOUS:
{
      direction=-1;
      break;
    }
case ACTION_NAVIGATION_NEXT:
{
    direction=1;
    break;
  }
default :
{
  return false;
}
}
final LinearLayoutManager layoutManager=this.manager;
final View focusedChild=RecyclerViewUtils.findRecyclerViewChild(view,layoutManager.getFocusedChild());
final int position;
final int firstVisibleItemPosition=layoutManager.findFirstVisibleItemPosition();
final int lastVisibleItemPosition=layoutManager.findLastVisibleItemPosition();
final int itemCount=adapter.getItemCount();
if (focusedChild != null) {
position=view.getChildLayoutPosition(focusedChild);
}
 else if (firstVisibleItemPosition == 0) {
position=-1;
}
 else if (lastVisibleItemPosition == itemCount - 1) {
position=itemCount;
}
 else if (direction > 0 && positionBackup < firstVisibleItemPosition) {
position=firstVisibleItemPosition;
}
 else if (direction < 0 && positionBackup > lastVisibleItemPosition) {
position=lastVisibleItemPosition;
}
 else {
position=positionBackup;
}
positionBackup=position;
RecyclerViewUtils.focusNavigate(view,layoutManager,position,direction);
return false;
}
