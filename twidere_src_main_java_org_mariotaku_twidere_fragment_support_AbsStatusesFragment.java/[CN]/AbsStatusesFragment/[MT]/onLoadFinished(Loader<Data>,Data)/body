{
  final SharedPreferences preferences=getSharedPreferences();
  final boolean rememberPosition=preferences.getBoolean(KEY_REMEMBER_POSITION,false);
  final boolean readFromBottom=preferences.getBoolean(KEY_READ_FROM_BOTTOM,false);
  final long lastReadId;
  final int lastVisiblePos, lastVisibleTop;
  final String tag=getCurrentReadPositionTag();
  if (readFromBottom) {
    lastVisiblePos=mLayoutManager.findLastVisibleItemPosition();
  }
 else {
    lastVisiblePos=mLayoutManager.findFirstVisibleItemPosition();
  }
  if (lastVisiblePos != RecyclerView.NO_POSITION) {
    lastReadId=mAdapter.getStatusId(lastVisiblePos);
    final View positionView=mLayoutManager.findViewByPosition(lastVisiblePos);
    lastVisibleTop=positionView != null ? positionView.getTop() : 0;
  }
 else   if (rememberPosition && tag != null) {
    lastReadId=mReadStateManager.getPosition(tag);
    lastVisibleTop=0;
  }
 else {
    lastReadId=-1;
    lastVisibleTop=0;
  }
  mAdapter.setData(data);
  if (!(loader instanceof IExtendedLoader) || ((IExtendedLoader)loader).isFromUser()) {
    mAdapter.setLoadMoreSupported(hasMoreData(data));
    setRefreshEnabled(true);
    int pos=-1;
    for (int i=0, j=mAdapter.getItemCount(); i < j; i++) {
      if (lastReadId != -1 && lastReadId == mAdapter.getStatusId(i)) {
        pos=i;
        break;
      }
    }
    if (pos != -1 && mAdapter.isStatus(pos) && (readFromBottom || lastVisiblePos != 0)) {
      mLayoutManager.scrollToPositionWithOffset(pos,lastVisibleTop);
    }
  }
  if (loader instanceof IExtendedLoader) {
    ((IExtendedLoader)loader).setFromUser(false);
  }
  setListShown(true);
  onLoadingFinished();
}
