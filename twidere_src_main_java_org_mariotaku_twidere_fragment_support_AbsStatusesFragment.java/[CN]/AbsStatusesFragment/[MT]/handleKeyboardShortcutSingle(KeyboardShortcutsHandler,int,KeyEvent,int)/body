{
  String action=handler.getKeyAction(CONTEXT_TAG_NAVIGATION,keyCode,event,metaState);
  if (ACTION_NAVIGATION_REFRESH.equals(action)) {
    triggerRefresh();
    return true;
  }
  final RecyclerView recyclerView=getRecyclerView();
  final LinearLayoutManager layoutManager=getLayoutManager();
  if (recyclerView == null || layoutManager == null)   return false;
  final View focusedChild=RecyclerViewUtils.findRecyclerViewChild(recyclerView,layoutManager.getFocusedChild());
  int position=-1;
  if (focusedChild != null && focusedChild.getParent() == recyclerView) {
    position=recyclerView.getChildLayoutPosition(focusedChild);
  }
  if (position != -1) {
    final ParcelableStatus status=getAdapter().getStatus(position);
    if (status == null)     return false;
    if (keyCode == KeyEvent.KEYCODE_ENTER) {
      Utils.openStatus(getActivity(),status,null);
      return true;
    }
    if (action == null) {
      action=handler.getKeyAction(CONTEXT_TAG_STATUS,keyCode,event,metaState);
    }
    if (action == null)     return false;
switch (action) {
case ACTION_STATUS_REPLY:
{
        final Intent intent=new Intent(INTENT_ACTION_REPLY);
        intent.putExtra(EXTRA_STATUS,status);
        startActivity(intent);
        return true;
      }
case ACTION_STATUS_RETWEET:
{
      RetweetQuoteDialogFragment.show(getFragmentManager(),status);
      return true;
    }
case ACTION_STATUS_FAVORITE:
{
    final AsyncTwitterWrapper twitter=mTwitterWrapper;
    if (status.is_favorite) {
      twitter.destroyFavoriteAsync(new AccountKey(status.account_id,status.account_host),status.id);
    }
 else {
      final IStatusViewHolder holder=(IStatusViewHolder)recyclerView.findViewHolderForLayoutPosition(position);
      holder.playLikeAnimation(new DefaultOnLikedListener(twitter,status));
    }
    return true;
  }
}
}
return mNavigationHelper.handleKeyboardShortcutSingle(handler,keyCode,event,metaState);
}
