{
  final RestMethod method=methodInfo.getMethod();
  final String path=methodInfo.getPath();
  final List<Pair<String,String>> queries=new ArrayList<>(methodInfo.getQueries());
  final List<Pair<String,String>> forms=new ArrayList<>(methodInfo.getForms());
  final List<Pair<String,String>> headers=methodInfo.getHeaders();
  final List<Pair<String,TypedData>> parts=methodInfo.getParts();
  final FileValue file=methodInfo.getFile();
  final Map<String,Object> extras=methodInfo.getExtras();
  if (parts.isEmpty()) {
    final List<Pair<String,String>> params=method.hasBody() ? forms : queries;
    addParameter(params,"include_cards",true);
    addParameter(params,"cards_platform","Android-12");
    addParameter(params,"include_entities",true);
    addParameter(params,"include_my_retweet",1);
    addParameter(params,"include_rts",1);
    addParameter(params,"include_reply_count",true);
    addParameter(params,"include_descendent_reply_count",true);
  }
 else {
    addPart(parts,"include_cards",true);
    addPart(parts,"cards_platform","Android-12");
    addPart(parts,"include_entities",true);
    addPart(parts,"include_my_retweet",1);
    addPart(parts,"include_rts",1);
    addPart(parts,"include_reply_count",true);
    addPart(parts,"include_descendent_reply_count",true);
  }
  return new RestRequestInfo(method.value(),path,queries,forms,headers,parts,file,methodInfo.getBody(),extras);
}
