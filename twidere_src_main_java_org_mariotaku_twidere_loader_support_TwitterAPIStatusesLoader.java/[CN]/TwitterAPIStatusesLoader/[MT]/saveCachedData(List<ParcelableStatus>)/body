{
  final String key=getSerializationKey();
  if (key == null || data == null)   return;
  final SharedPreferences prefs=mContext.getSharedPreferences(SHARED_PREFERENCES_NAME,Context.MODE_PRIVATE);
  final int databaseItemLimit=prefs.getInt(KEY_DATABASE_ITEM_LIMIT,DEFAULT_DATABASE_ITEM_LIMIT);
  try {
    final List<ParcelableStatus> statuses=data.subList(0,Math.min(databaseItemLimit,data.size()));
    final PipedOutputStream pos=new PipedOutputStream();
    final PipedInputStream pis=new PipedInputStream(pos);
    new Thread(new Runnable(){
      @Override public void run(){
        try {
          LoganSquare.mapperFor(ParcelableStatus.class).serialize(statuses,pos);
        }
 catch (        IOException e) {
          e.printStackTrace();
        }
      }
    }
).start();
    mFileCache.save(key,pis,null);
  }
 catch (  final IOException e) {
  }
}
