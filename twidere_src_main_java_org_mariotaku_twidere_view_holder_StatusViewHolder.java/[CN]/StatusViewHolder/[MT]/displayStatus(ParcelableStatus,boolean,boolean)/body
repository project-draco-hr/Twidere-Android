{
  final MediaLoaderWrapper loader=adapter.getMediaLoader();
  final AsyncTwitterWrapper twitter=adapter.getTwitterWrapper();
  final TwidereLinkify linkify=adapter.getTwidereLinkify();
  final UserColorNameManager manager=adapter.getUserColorNameManager();
  final Context context=adapter.getContext();
  final boolean nameFirst=adapter.isNameFirst();
  final long reply_count=status.reply_count;
  final long retweetCount;
  final long favorite_count;
  if (TwitterCardUtils.isPoll(status)) {
    statusInfoLabel.setText(R.string.label_poll);
    statusInfoIcon.setImageResource(R.drawable.ic_activity_action_poll);
    statusInfoLabel.setVisibility(View.VISIBLE);
    statusInfoIcon.setVisibility(View.VISIBLE);
  }
 else   if (status.retweet_id > 0) {
    final String retweetedBy=manager.getDisplayName(status.retweeted_by_user_id,status.retweeted_by_user_name,status.retweeted_by_user_screen_name,nameFirst,false);
    statusInfoLabel.setText(context.getString(R.string.name_retweeted,retweetedBy));
    statusInfoIcon.setImageResource(R.drawable.ic_activity_action_retweet);
    statusInfoLabel.setVisibility(View.VISIBLE);
    statusInfoIcon.setVisibility(View.VISIBLE);
  }
 else   if (status.in_reply_to_status_id > 0 && status.in_reply_to_user_id > 0 && displayInReplyTo) {
    final String inReplyTo=manager.getDisplayName(status.in_reply_to_user_id,status.in_reply_to_name,status.in_reply_to_screen_name,nameFirst,false);
    statusInfoLabel.setText(context.getString(R.string.in_reply_to_name,inReplyTo));
    statusInfoIcon.setImageResource(R.drawable.ic_activity_action_reply);
    statusInfoLabel.setVisibility(View.VISIBLE);
    statusInfoIcon.setVisibility(View.VISIBLE);
  }
 else {
    statusInfoLabel.setVisibility(View.GONE);
    statusInfoIcon.setVisibility(View.GONE);
  }
  if (status.is_quote && ArrayUtils.isEmpty(status.media)) {
    quotedNameView.setVisibility(View.VISIBLE);
    quotedTextView.setVisibility(View.VISIBLE);
    quoteIndicator.setVisibility(View.VISIBLE);
    quotedNameView.setName(manager.getUserNickname(status.quoted_user_id,status.quoted_user_name,false));
    quotedNameView.setScreenName("@" + status.quoted_user_screen_name);
    if (adapter.getLinkHighlightingStyle() != VALUE_LINK_HIGHLIGHT_OPTION_CODE_NONE && !TextUtils.isEmpty(status.quoted_text_html)) {
      final Spanned text=HtmlSpanBuilder.fromHtml(status.quoted_text_html);
      quotedTextView.setText(linkify.applyAllLinks(text,status.account_id,getLayoutPosition(),status.is_possibly_sensitive,adapter.getLinkHighlightingStyle()));
    }
 else {
      final String text=status.quoted_text_unescaped;
      quotedTextView.setText(text);
    }
    quoteIndicator.setColor(manager.getUserColor(status.user_id,false));
    itemContent.drawStart(manager.getUserColor(status.quoted_user_id,false),manager.getUserColor(status.user_id,false));
  }
 else {
    quotedNameView.setVisibility(View.GONE);
    quotedTextView.setVisibility(View.GONE);
    quoteIndicator.setVisibility(View.GONE);
    if (status.is_retweet) {
      itemContent.drawStart(manager.getUserColor(status.retweeted_by_user_id,false),manager.getUserColor(status.user_id,false));
    }
 else {
      itemContent.drawStart(manager.getUserColor(status.user_id,false));
    }
  }
  if (status.is_retweet) {
    timeView.setTime(status.retweet_timestamp);
  }
 else {
    timeView.setTime(status.timestamp);
  }
  nameView.setName(manager.getUserNickname(status.user_id,status.user_name,false));
  nameView.setScreenName("@" + status.user_screen_name);
  if (adapter.isProfileImageEnabled()) {
    profileImageView.setVisibility(View.VISIBLE);
    final String user_profile_image_url=status.user_profile_image_url;
    loader.displayProfileImage(profileImageView,user_profile_image_url);
    profileTypeView.setImageResource(getUserTypeIconRes(status.user_is_verified,status.user_is_protected));
    profileTypeView.setVisibility(View.VISIBLE);
  }
 else {
    profileTypeView.setVisibility(View.GONE);
    profileImageView.setVisibility(View.GONE);
    loader.cancelDisplayTask(profileImageView);
    profileTypeView.setImageDrawable(null);
    profileTypeView.setVisibility(View.GONE);
  }
  if (adapter.shouldShowAccountsColor()) {
    itemContent.drawEnd(Utils.getAccountColor(context,status.account_id));
  }
 else {
    itemContent.drawEnd();
  }
  final ParcelableMedia[] media=Utils.getPrimaryMedia(status);
  if (adapter.isMediaPreviewEnabled()) {
    mediaPreview.setStyle(adapter.getMediaPreviewStyle());
    final boolean hasMedia=!ArrayUtils.isEmpty(media);
    if (hasMedia && (adapter.isSensitiveContentEnabled() || !status.is_possibly_sensitive)) {
      mediaPreview.setVisibility(View.VISIBLE);
      mediaPreview.displayMedia(media,loader,status.account_id,this,adapter.getMediaLoadingHandler());
    }
 else {
      mediaPreview.setVisibility(View.GONE);
    }
  }
 else {
    mediaPreview.setVisibility(View.GONE);
  }
  if (adapter.getLinkHighlightingStyle() == VALUE_LINK_HIGHLIGHT_OPTION_CODE_NONE) {
    textView.setText(status.text_unescaped);
  }
 else {
    final Spanned text=HtmlSpanBuilder.fromHtml(status.text_html);
    textView.setText(linkify.applyAllLinks(text,status.account_id,getLayoutPosition(),status.is_possibly_sensitive,adapter.getLinkHighlightingStyle()));
  }
  final Locale locale=Locale.getDefault();
  if (reply_count > 0) {
    replyCountView.setText(Utils.getLocalizedNumber(locale,reply_count));
  }
 else {
    replyCountView.setText(null);
  }
  if (twitter.isDestroyingStatus(status.account_id,status.my_retweet_id)) {
    retweetCountView.setActivated(false);
    retweetCount=Math.max(0,status.retweet_count - 1);
  }
 else {
    final boolean creatingRetweet=twitter.isCreatingRetweet(status.account_id,status.id);
    retweetCountView.setActivated(creatingRetweet || status.retweeted || Utils.isMyRetweet(status.account_id,status.retweeted_by_user_id,status.my_retweet_id));
    retweetCount=status.retweet_count + (creatingRetweet ? 1 : 0);
  }
  if (retweetCount > 0) {
    retweetCountView.setText(Utils.getLocalizedNumber(locale,retweetCount));
  }
 else {
    retweetCountView.setText(null);
  }
  if (twitter.isDestroyingFavorite(status.account_id,status.id)) {
    favoriteCountView.setActivated(false);
    favorite_count=Math.max(0,status.favorite_count - 1);
  }
 else {
    final boolean creatingFavorite=twitter.isCreatingFavorite(status.account_id,status.id);
    favoriteCountView.setActivated(creatingFavorite || status.is_favorite);
    favorite_count=status.favorite_count + (creatingFavorite ? 1 : 0);
  }
  if (favorite_count > 0) {
    favoriteCountView.setText(Utils.getLocalizedNumber(locale,favorite_count));
  }
 else {
    favoriteCountView.setText(null);
  }
  if (shouldDisplayExtraType) {
    displayExtraTypeIcon(status.card_name,media,status.location,status.place_full_name,status.is_possibly_sensitive);
  }
 else {
    extraTypeView.setVisibility(View.GONE);
  }
  nameView.updateText();
  quotedNameView.updateText();
}
