{
  final ParcelableMedia[] media=status.media;
  if (status.retweet_id > 0) {
    replyRetweetView.setText(context.getString(R.string.name_retweeted,status.retweeted_by_name));
    replyRetweetView.setVisibility(View.VISIBLE);
    retweetProfileImageView.setVisibility(View.GONE);
  }
 else   if (status.in_reply_to_status_id > 0 && status.in_reply_to_user_id > 0) {
    replyRetweetView.setText(context.getString(R.string.in_reply_to_name,status.in_reply_to_name));
    replyRetweetView.setVisibility(View.VISIBLE);
    retweetProfileImageView.setVisibility(View.GONE);
  }
 else {
    replyRetweetView.setText(null);
    replyRetweetView.setVisibility(View.GONE);
    replyRetweetView.setCompoundDrawablesWithIntrinsicBounds(0,0,0,0);
    retweetProfileImageView.setVisibility(View.GONE);
  }
  final int typeIconRes=getUserTypeIconRes(status.user_is_verified,status.user_is_protected);
  if (typeIconRes != 0) {
    profileTypeView.setImageResource(typeIconRes);
    profileTypeView.setVisibility(View.VISIBLE);
  }
 else {
    profileTypeView.setImageDrawable(null);
    profileTypeView.setVisibility(View.GONE);
  }
  nameView.setText(status.user_name);
  screenNameView.setText("@" + status.user_screen_name);
  timeView.setTime(status.timestamp);
  final int userColor=UserColorNicknameUtils.getUserColor(context,status.user_id);
  profileImageView.setBorderColor(userColor);
  loader.displayProfileImage(profileImageView,status.user_profile_image_url);
  mediaPreviewContainer.displayMedia(media,loader,status.account_id,null,handler);
  if (translation != null) {
    textView.setText(translation.getText());
  }
 else {
    textView.setText(status.text_unescaped);
  }
  if (status.reply_count > 0) {
    replyCountView.setText(Utils.getLocalizedNumber(Locale.getDefault(),status.reply_count));
  }
 else {
    replyCountView.setText(null);
  }
  final long retweet_count;
  if (twitter.isDestroyingStatus(status.account_id,status.my_retweet_id)) {
    retweetCountView.setActivated(false);
    retweet_count=Math.max(0,status.favorite_count - 1);
  }
 else {
    final boolean creatingRetweet=twitter.isCreatingRetweet(status.account_id,status.id);
    retweetCountView.setActivated(creatingRetweet || Utils.isMyRetweet(status));
    retweet_count=status.retweet_count + (creatingRetweet ? 1 : 0);
  }
  if (retweet_count > 0) {
    retweetCountView.setText(Utils.getLocalizedNumber(Locale.getDefault(),retweet_count));
  }
 else {
    retweetCountView.setText(null);
  }
  retweetCountView.setEnabled(!status.user_is_protected);
  final long favorite_count;
  if (twitter.isDestroyingFavorite(status.account_id,status.id)) {
    favoriteCountView.setActivated(false);
    favorite_count=Math.max(0,status.favorite_count - 1);
  }
 else {
    final boolean creatingFavorite=twitter.isCreatingFavorite(status.account_id,status.id);
    favoriteCountView.setActivated(creatingFavorite || status.is_favorite);
    favorite_count=status.favorite_count + (creatingFavorite ? 1 : 0);
  }
  if (favorite_count > 0) {
    favoriteCountView.setText(Utils.getLocalizedNumber(Locale.getDefault(),favorite_count));
  }
 else {
    favoriteCountView.setText(null);
  }
}
