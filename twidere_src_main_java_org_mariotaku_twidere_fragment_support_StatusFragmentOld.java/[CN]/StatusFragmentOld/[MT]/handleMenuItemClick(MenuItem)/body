{
  if (mStatus == null)   return false;
  final ParcelableStatus status=mStatus;
switch (item.getItemId()) {
case MENU_SHARE:
{
      startStatusShareChooser(getActivity(),status);
      break;
    }
case MENU_COPY:
{
    if (ClipboardUtils.setText(getActivity(),status.text_plain)) {
      showOkMessage(getActivity(),R.string.text_copied,false);
    }
    break;
  }
case MENU_RETWEET:
{
  if (isMyRetweet(status)) {
    cancelRetweet(mTwitterWrapper,status);
  }
 else {
    final long id_to_retweet=status.is_retweet && status.retweet_id > 0 ? status.retweet_id : status.id;
    mTwitterWrapper.retweetStatus(status.account_id,id_to_retweet);
  }
  break;
}
case MENU_QUOTE:
{
final Intent intent=new Intent(INTENT_ACTION_QUOTE);
intent.putExtra(EXTRA_STATUS,status);
startActivity(intent);
break;
}
case MENU_REPLY:
{
final Intent intent=new Intent(INTENT_ACTION_REPLY);
intent.putExtra(EXTRA_STATUS,status);
startActivity(intent);
break;
}
case MENU_FAVORITE:
{
if (status.is_favorite) {
mTwitterWrapper.destroyFavoriteAsync(status.account_id,status.id);
}
 else {
mTwitterWrapper.createFavoriteAsync(status.account_id,status.id);
}
break;
}
case MENU_DELETE:
{
DestroyStatusDialogFragment.show(getFragmentManager(),status);
break;
}
case MENU_ADD_TO_FILTER:
{
AddStatusFilterDialogFragment.show(getFragmentManager(),status);
break;
}
case MENU_SET_COLOR:
{
final Intent intent=new Intent(getActivity(),ColorPickerDialogActivity.class);
final int color=getUserColor(getActivity(),status.user_id,true);
if (color != 0) {
intent.putExtra(EXTRA_COLOR,color);
}
intent.putExtra(EXTRA_CLEAR_BUTTON,color != 0);
intent.putExtra(EXTRA_ALPHA_SLIDER,false);
startActivityForResult(intent,REQUEST_SET_COLOR);
break;
}
case MENU_CLEAR_NICKNAME:
{
clearUserNickname(getActivity(),status.user_id);
displayStatus(status);
break;
}
case MENU_SET_NICKNAME:
{
final String nick=getUserNickname(getActivity(),status.user_id,true);
SetUserNicknameDialogFragment.show(getFragmentManager(),status.user_id,nick);
break;
}
case MENU_TRANSLATE:
{
final ParcelableAccountWithCredentials account=ParcelableAccount.getAccountWithCredentials(getActivity(),status.account_id);
if (ParcelableAccountWithCredentials.isOfficialCredentials(getActivity(),account)) {
StatusTranslateDialogFragment.show(getFragmentManager(),status);
}
 else {
}
break;
}
case MENU_OPEN_WITH_ACCOUNT:
{
final Intent intent=new Intent(INTENT_ACTION_SELECT_ACCOUNT);
intent.setClass(getActivity(),AccountSelectorActivity.class);
intent.putExtra(EXTRA_SINGLE_SELECTION,true);
startActivityForResult(intent,REQUEST_SELECT_ACCOUNT);
break;
}
default :
{
if (item.getIntent() != null) {
try {
startActivity(item.getIntent());
}
 catch (final ActivityNotFoundException e) {
Log.w(LOGTAG,e);
return false;
}
}
break;
}
}
return true;
}
