{
  if (object == null)   return;
  if (isArray(fieldType)) {
    final Class<?> component=getArrayComponent(fieldType);
    JsonMapper<Object> mapper=(JsonMapper<Object>)LoganSquareMapperFinder.mapperFor(component);
    values.put(columnName,mapper.serialize(Arrays.asList((Object[])object)));
  }
 else   if (fieldType.getRawType() == List.class) {
    JsonMapper<Object> mapper=LoganSquareMapperFinder.mapperFor(fieldType.getActualTypeArguments()[0]);
    values.put(columnName,mapper.serialize((List)object));
  }
 else   if (fieldType.getRawType() == Map.class) {
    JsonMapper<Object> mapper=LoganSquareMapperFinder.mapperFor(fieldType.getActualTypeArguments()[1]);
    values.put(columnName,mapper.serialize((Map)object));
  }
 else {
    JsonMapper<T> mapper=LoganSquareMapperFinder.mapperFor(fieldType);
    values.put(columnName,mapper.serialize(object));
  }
}
