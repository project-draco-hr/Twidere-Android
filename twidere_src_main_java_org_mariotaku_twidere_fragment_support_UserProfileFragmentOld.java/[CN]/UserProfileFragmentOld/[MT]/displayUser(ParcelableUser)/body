{
  mRelationship=null;
  mUser=null;
  mAdapter.clear();
  if (user == null || user.id <= 0 || getActivity() == null)   return;
  final Resources res=getResources();
  final LoaderManager lm=getLoaderManager();
  lm.destroyLoader(LOADER_ID_USER);
  lm.destroyLoader(LOADER_ID_FRIENDSHIP);
  final boolean userIsMe=user.account_id == user.id;
  mErrorRetryContainer.setVisibility(View.GONE);
  mUser=user;
  mProfileNameContainer.drawStart(getUserColor(getActivity(),user.id,true));
  mProfileNameContainer.drawEnd(getAccountColor(getActivity(),user.account_id));
  final String nick=getUserNickname(getActivity(),user.id,true);
  mNameView.setText(TextUtils.isEmpty(nick) ? user.name : getString(R.string.name_with_nickname,user.name,nick));
  mProfileImageView.setUserType(user.is_verified,user.is_protected);
  mScreenNameView.setText("@" + user.screen_name);
  mDescriptionContainer.setVisibility(userIsMe || !isEmpty(user.description_html) ? View.VISIBLE : View.GONE);
  mDescriptionView.setText(user.description_html != null ? Html.fromHtml(user.description_html) : null);
  final TwidereLinkify linkify=new TwidereLinkify(this);
  linkify.setLinkTextColor(ThemeUtils.getUserLinkTextColor(getActivity()));
  linkify.applyAllLinks(mDescriptionView,user.account_id,false);
  mDescriptionView.setMovementMethod(null);
  mLocationContainer.setVisibility(userIsMe || !isEmpty(user.location) ? View.VISIBLE : View.GONE);
  mLocationView.setText(user.location);
  mURLContainer.setVisibility(userIsMe || !isEmpty(user.url) || !isEmpty(user.url_expanded) ? View.VISIBLE : View.GONE);
  mURLView.setText(isEmpty(user.url_expanded) ? user.url : user.url_expanded);
  mURLView.setMovementMethod(null);
  final String createdAt=formatToLongTimeString(getActivity(),user.created_at);
  final float daysSinceCreated=(System.currentTimeMillis() - user.created_at) / 1000 / 60/ 60/ 24;
  final int dailyTweets=Math.round(user.statuses_count / Math.max(1,daysSinceCreated));
  mCreatedAtView.setText(res.getQuantityString(R.plurals.created_at_with_N_tweets_per_day,dailyTweets,createdAt,dailyTweets));
  mTweetCount.setText(getLocalizedNumber(mLocale,user.statuses_count));
  mFollowersCount.setText(getLocalizedNumber(mLocale,user.followers_count));
  mFriendsCount.setText(getLocalizedNumber(mLocale,user.friends_count));
  if (mPreferences.getBoolean(KEY_DISPLAY_PROFILE_IMAGE,true)) {
    mProfileImageLoader.displayProfileImage(mProfileImageView,getOriginalTwitterProfileImage(user.profile_image_url));
    final int def_width=res.getDisplayMetrics().widthPixels;
    final int width=mBannerWidth > 0 ? mBannerWidth : def_width;
    mProfileBannerView.setImageBitmap(null);
    mProfileImageLoader.displayProfileBanner(mProfileBannerView,user.profile_banner_url,width);
  }
 else {
    mProfileImageView.setImageResource(R.drawable.ic_profile_image_default);
    mProfileBannerView.setImageResource(android.R.color.transparent);
  }
  if (isMyAccount(getActivity(),user.id)) {
    final ContentResolver resolver=getContentResolver();
    final ContentValues values=new ContentValues();
    values.put(Accounts.NAME,user.name);
    values.put(Accounts.SCREEN_NAME,user.screen_name);
    values.put(Accounts.PROFILE_IMAGE_URL,user.profile_image_url);
    values.put(Accounts.PROFILE_BANNER_URL,user.profile_banner_url);
    final String where=Accounts.ACCOUNT_ID + " = " + user.id;
    resolver.update(Accounts.CONTENT_URI,values,where,null);
  }
  mAdapter.add(new MediaTimelineAction(1));
  mAdapter.add(new FavoritesAction(2));
  mAdapter.add(new UserMentionsAction(3));
  mAdapter.add(new UserListsAction(4));
  mAdapter.add(new UserListMembershipsAction(5));
  if (userIsMe) {
    mAdapter.add(new SavedSearchesAction(11));
    if (user.is_protected) {
      mAdapter.add(new IncomingFriendshipsAction(12));
    }
    mAdapter.add(new UserBlocksAction(13));
    mAdapter.add(new MutesUsersAction(14));
  }
  mAdapter.notifyDataSetChanged();
  if (!user.is_cache) {
    getFriendship();
  }
  invalidateOptionsMenu();
  setMenu(mMenuBar.getMenu());
  mMenuBar.show();
}
