{
  final View mobileView=getViewForID(mMobileItemId);
  if (mCellIsMobile || mIsWaitingForScrollFinish) {
    mCellIsMobile=false;
    mIsWaitingForScrollFinish=false;
    mIsMobileScrolling=false;
    mActivePointerId=INVALID_POINTER_ID;
    if (mScrollState != OnScrollListener.SCROLL_STATE_IDLE) {
      mIsWaitingForScrollFinish=true;
      return;
    }
    mHoverCellCurrentBounds.offsetTo(mHoverCellOriginalBounds.left,mobileView.getTop());
    final ObjectAnimator hoverViewAnimator=ObjectAnimator.ofObject(mHoverCell,"bounds",sBoundEvaluator,mHoverCellCurrentBounds);
    hoverViewAnimator.addUpdateListener(new ValueAnimator.AnimatorUpdateListener(){
      @Override public void onAnimationUpdate(      final ValueAnimator valueAnimator){
        invalidate();
      }
    }
);
    hoverViewAnimator.addListener(new AnimatorListenerAdapter(){
      @Override public void onAnimationEnd(      final Animator animation){
        mAboveItemId=INVALID_ID;
        mMobileItemId=INVALID_ID;
        mBelowItemId=INVALID_ID;
        mobileView.setVisibility(VISIBLE);
        mHoverCell=null;
        setEnabled(true);
        invalidate();
      }
      @Override public void onAnimationStart(      final Animator animation){
        setEnabled(false);
      }
    }
);
    hoverViewAnimator.start();
  }
 else {
    touchEventsCancelled();
  }
}
