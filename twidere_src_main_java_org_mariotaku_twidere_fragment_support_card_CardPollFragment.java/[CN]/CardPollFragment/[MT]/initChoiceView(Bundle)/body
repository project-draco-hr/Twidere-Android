{
  final ParcelableCardEntity card=getCard();
  final ParcelableStatus status=getStatus();
  final int choicesCount=getChoicesCount(card);
  final LayoutInflater inflater=getLayoutInflater(savedInstanceState);
  int votesSum=0;
  final boolean countsAreFinal=card.getAsBoolean("counts_are_final",false);
  final boolean showResult=countsAreFinal || status.account_id == status.user_id;
  for (int i=0; i < choicesCount; i++) {
    final int choiceIndex=i + 1;
    votesSum+=card.getAsInteger("choice" + choiceIndex + "_count",0);
  }
  final View.OnClickListener clickListener=new View.OnClickListener(){
    @Override public void onClick(    View v){
      for (int i=0, j=mPollContainer.getChildCount(); i < j; i++) {
        final View pollItem=mPollContainer.getChildAt(i);
        final RadioButton choiceRadioButton=(RadioButton)pollItem.findViewById(R.id.choice_button);
        choiceRadioButton.setChecked(v == pollItem);
      }
    }
  }
;
  final int color=ContextCompat.getColor(getContext(),R.color.material_light_blue_a200);
  final float radius=getResources().getDimension(R.dimen.element_spacing_small);
  for (int i=0; i < choicesCount; i++) {
    final View pollItem=inflater.inflate(R.layout.layout_poll_item,mPollContainer,false);
    final TextView choicePercentView=(TextView)pollItem.findViewById(R.id.choice_percent);
    final TextView choiceLabelView=(TextView)pollItem.findViewById(R.id.choice_label);
    final RadioButton choiceRadioButton=(RadioButton)pollItem.findViewById(R.id.choice_button);
    final int choiceIndex=i + 1;
    final String label=card.getAsString("choice" + choiceIndex + "_label",null);
    final int value=card.getAsInteger("choice" + choiceIndex + "_count",0);
    if (label == null)     throw new NullPointerException();
    final float choicePercent=votesSum == 0 ? 0 : value / (float)votesSum;
    choiceLabelView.setText(label);
    ViewSupport.setBackground(choiceLabelView,new PercentDrawable(choicePercent,radius,color));
    choicePercentView.setText(String.format("%d%%",Math.round(choicePercent * 100)));
    pollItem.setOnClickListener(clickListener);
    if (showResult) {
      choicePercentView.setVisibility(View.VISIBLE);
      choiceRadioButton.setVisibility(View.GONE);
    }
 else {
      choicePercentView.setVisibility(View.GONE);
      choiceRadioButton.setVisibility(View.VISIBLE);
    }
    mPollContainer.addView(pollItem);
  }
  if (showResult) {
    mVoteButton.setVisibility(View.GONE);
  }
 else {
    mVoteButton.setVisibility(View.VISIBLE);
  }
  final String nVotes=getResources().getQuantityString(R.plurals.N_votes,votesSum,votesSum);
  mPollSummary.setText(getString(R.string.poll_summary_format,nVotes,"final result"));
}
