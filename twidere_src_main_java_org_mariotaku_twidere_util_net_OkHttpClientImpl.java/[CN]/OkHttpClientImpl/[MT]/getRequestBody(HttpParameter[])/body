{
  if (params == null)   return null;
  if (!HttpParameter.containsFile(params)) {
    return RequestBody.create(APPLICATION_FORM_URLENCODED,HttpParameter.encodeParameters(params));
  }
  if (params.length == 1) {
    final HttpParameter param=params[0];
    if (param.hasFileBody()) {
      final ByteArrayOutputStream os=new ByteArrayOutputStream();
      return RequestBody.create(MediaType.parse(param.getContentType()),os.toByteArray());
    }
 else {
      return RequestBody.create(MediaType.parse(param.getContentType()),param.getFile());
    }
  }
  String boundary=String.format("----%s",UUID.randomUUID().toString());
  final MediaType mediaType=MediaType.parse("multipart/form-data; boundary=" + boundary);
  boundary="--" + boundary;
  final ByteArrayOutputStream os=new ByteArrayOutputStream();
  for (  final HttpParameter param : params) {
    os.write(String.format("%s\r\n",boundary).getBytes("UTF-8"));
    if (param.isFile()) {
      os.write(String.format("Content-Disposition: form-data; name=\"%s\"; filename=\"%s\"\r\n",param.getName(),param.getFileName()).getBytes("UTF-8"));
      os.write(String.format("Content-Type: %s\r\n\r\n",param.getContentType()).getBytes("UTF-8"));
      final BufferedInputStream in=new BufferedInputStream(param.hasFileBody() ? param.getFileBody() : new FileInputStream(param.getFile()));
      byte[] buff=new byte[8192];
      while (in.read(buff) != -1) {
        os.write(buff);
      }
      in.close();
    }
 else {
      os.write(String.format("Content-Disposition: form-data; name=\"%s\"\r\n",param.getName()).getBytes("UTF-8"));
      os.write("Content-Type: text/plain; charset=UTF-8\r\n\r\n".getBytes("UTF-8"));
      os.write(param.getValue().getBytes("UTF-8"));
    }
    os.write("\r\n".getBytes("UTF-8"));
  }
  os.write(String.format("%s--\r\n",boundary).getBytes("UTF-8"));
  return RequestBody.create(mediaType,os.toByteArray());
}
