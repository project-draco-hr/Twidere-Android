{
  final OAuthToken requestToken;
  try {
    requestToken=oauth.getRequestToken(OAUTH_CALLBACK_OOB);
  }
 catch (  final MicroBlogException e) {
    if (e.isCausedByNetworkIssue())     throw new AuthenticationException(e);
    throw new AuthenticityTokenException(e);
  }
  try {
    final AuthorizeRequestData authorizeRequestData=getAuthorizeRequestData(requestToken);
    AuthorizeResponseData authorizeResponseData=getAuthorizeResponseData(requestToken,authorizeRequestData,username,password);
    if (!TextUtils.isEmpty(authorizeResponseData.oauthPin)) {
      return oauth.getAccessToken(requestToken,authorizeResponseData.oauthPin);
    }
 else     if (authorizeResponseData.challenge == null) {
      throw new WrongUserPassException();
    }
    final String challengeType=authorizeResponseData.challenge.challengeType;
    final String loginVerification=loginVerificationCallback.getLoginVerification(challengeType);
    final AuthorizeRequestData verificationData=getVerificationData(authorizeResponseData,loginVerification);
    authorizeResponseData=getAuthorizeResponseData(requestToken,verificationData,username,password);
    if (TextUtils.isEmpty(authorizeResponseData.oauthPin)) {
      throw new LoginVerificationException();
    }
    return oauth.getAccessToken(requestToken,authorizeResponseData.oauthPin);
  }
 catch (  final IOException|NullPointerException|MicroBlogException e) {
    throw new AuthenticationException(e);
  }
}
