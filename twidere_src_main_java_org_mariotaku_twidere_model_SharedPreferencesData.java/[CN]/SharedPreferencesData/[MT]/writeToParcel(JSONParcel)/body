{
  final Map<String,Preference> supportedMap=DataImportExportUtils.getSupportedPreferencesMap();
  for (  final String key : preferencesMap.keySet()) {
    if (!preferencesMap.containsKey(key)) {
      continue;
    }
    final String value=ParseUtils.parseString(preferencesMap.get(key));
    if (value == null) {
      out.writeValue(key,JSONObject.NULL);
      continue;
    }
    final Preference annotation=supportedMap.get(key);
    if (annotation == null) {
      continue;
    }
switch (annotation.type()) {
case BOOLEAN:
{
        out.writeBoolean(key,Boolean.parseBoolean(value));
        break;
      }
case INT:
{
      out.writeInt(key,ParseUtils.parseInt(value,annotation.defaultInt()));
      break;
    }
case LONG:
{
    out.writeLong(key,ParseUtils.parseLong(value,annotation.defaultLong()));
    break;
  }
case FLOAT:
{
  out.writeFloat(key,ParseUtils.parseFloat(value,annotation.defaultFloat()));
  break;
}
case STRING:
{
out.writeString(key,value);
break;
}
default :
{
break;
}
}
}
}
