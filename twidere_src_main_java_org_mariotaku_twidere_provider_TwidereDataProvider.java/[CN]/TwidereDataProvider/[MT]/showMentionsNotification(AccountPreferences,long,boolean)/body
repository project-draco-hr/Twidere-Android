{
  final long accountId=pref.getAccountId();
  final Context context=getContext();
  final Resources resources=context.getResources();
  final NotificationManagerWrapper nm=mNotificationManager;
  final Expression selection;
  if (pref.isNotificationFollowingOnly()) {
    selection=Expression.and(Expression.equals(Statuses.ACCOUNT_ID,accountId),Expression.greaterThan(Statuses.STATUS_ID,position),Expression.equals(Statuses.IS_FOLLOWING,1));
  }
 else {
    selection=Expression.and(Expression.equals(Statuses.ACCOUNT_ID,accountId),Expression.greaterThan(Statuses.STATUS_ID,position));
  }
  final int itemsLimit=5;
  final String filteredSelection=Utils.buildStatusFilterWhereClause(Mentions.TABLE_NAME,selection).getSQL();
  final String[] statusProjection={Statuses.STATUS_ID,Statuses.USER_ID,Statuses.USER_NAME,Statuses.USER_SCREEN_NAME,Statuses.TEXT_UNESCAPED,Statuses.STATUS_TIMESTAMP};
  final Cursor statusCursor=mDatabaseWrapper.query(Mentions.TABLE_NAME,statusProjection,filteredSelection,null,null,null,Statuses.SORT_ORDER_TIMESTAMP_DESC,String.valueOf(itemsLimit));
  final int statusesCount=DatabaseQueryUtils.count(mDatabaseWrapper.getSQLiteDatabase(),Mentions.TABLE_NAME,filteredSelection,null,null,null,null);
  try {
    if (combined) {
      displayGroupedMentionsNotifications(pref,accountId,context,resources,nm,filteredSelection,statusCursor,statusesCount);
    }
 else {
      displaySeparateMentionsNotifications(pref,accountId,context,resources,nm,filteredSelection,statusCursor,statusesCount);
    }
  }
  finally {
    statusCursor.close();
  }
}
