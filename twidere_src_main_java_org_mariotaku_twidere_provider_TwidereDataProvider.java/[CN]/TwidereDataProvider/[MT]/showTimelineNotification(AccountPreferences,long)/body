{
  final long accountId=pref.getAccountId();
  final Context context=getContext();
  if (context == null)   return;
  final Resources resources=context.getResources();
  final NotificationManagerWrapper nm=mNotificationManager;
  final Expression selection=Expression.and(Expression.equals(Statuses.ACCOUNT_ID,accountId),Expression.greaterThan(Statuses.STATUS_ID,position));
  final String filteredSelection=DataStoreUtils.buildStatusFilterWhereClause(Statuses.TABLE_NAME,selection).getSQL();
  final String[] userProjection={Statuses.USER_ID,Statuses.USER_NAME,Statuses.USER_SCREEN_NAME};
  final String[] statusProjection={Statuses.STATUS_ID};
  final Cursor statusCursor=mDatabaseWrapper.query(Statuses.TABLE_NAME,statusProjection,filteredSelection,null,null,null,Statuses.SORT_ORDER_TIMESTAMP_DESC);
  final Cursor userCursor=mDatabaseWrapper.query(Statuses.TABLE_NAME,userProjection,filteredSelection,null,Statuses.USER_ID,null,Statuses.SORT_ORDER_TIMESTAMP_DESC);
  try {
    final int usersCount=userCursor.getCount();
    final int statusesCount=statusCursor.getCount();
    if (statusesCount == 0 || usersCount == 0)     return;
    final int idxStatusId=statusCursor.getColumnIndex(Statuses.STATUS_ID), idxUserName=userCursor.getColumnIndex(Statuses.USER_NAME), idxUserScreenName=userCursor.getColumnIndex(Statuses.USER_NAME), idxUserId=userCursor.getColumnIndex(Statuses.USER_NAME);
    final long statusId=statusCursor.moveToFirst() ? statusCursor.getLong(idxStatusId) : -1;
    final String notificationTitle=resources.getQuantityString(R.plurals.N_new_statuses,statusesCount,statusesCount);
    final String notificationContent;
    userCursor.moveToFirst();
    final String displayName=mUserColorNameManager.getUserNickname(userCursor.getLong(idxUserId),mNameFirst ? userCursor.getString(idxUserName) : userCursor.getString(idxUserScreenName));
    if (usersCount == 1) {
      notificationContent=context.getString(R.string.from_name,displayName);
    }
 else     if (usersCount == 2) {
      userCursor.moveToPosition(1);
      final String othersName=mUserColorNameManager.getUserNickname(userCursor.getLong(idxUserId),mNameFirst ? userCursor.getString(idxUserName) : userCursor.getString(idxUserScreenName));
      notificationContent=resources.getString(R.string.from_name_and_name,displayName,othersName);
    }
 else {
      notificationContent=resources.getString(R.string.from_name_and_N_others,displayName,usersCount - 1);
    }
    final NotificationCompat.Builder builder=new NotificationCompat.Builder(context);
    builder.setAutoCancel(true);
    builder.setSmallIcon(R.drawable.ic_stat_twitter);
    builder.setTicker(notificationTitle);
    builder.setContentTitle(notificationTitle);
    builder.setContentText(notificationContent);
    builder.setCategory(NotificationCompat.CATEGORY_SOCIAL);
    builder.setContentIntent(getContentIntent(context,CustomTabType.HOME_TIMELINE,NotificationType.HOME_TIMELINE,accountId));
    builder.setDeleteIntent(getMarkReadDeleteIntent(context,NotificationType.HOME_TIMELINE,accountId,statusId,false));
    builder.setNumber(statusesCount);
    builder.setCategory(NotificationCompat.CATEGORY_SOCIAL);
    applyNotificationPreferences(builder,pref,pref.getHomeTimelineNotificationType());
    try {
      nm.notify("home_" + accountId,Utils.getNotificationId(NOTIFICATION_ID_HOME_TIMELINE,accountId),builder.build());
      Utils.sendPebbleNotification(context,notificationContent);
    }
 catch (    SecurityException e) {
    }
  }
  finally {
    statusCursor.close();
    userCursor.close();
  }
}
