{
  final int tableId=DataStoreUtils.getTableId(uri);
  final String table=DataStoreUtils.getTableNameById(tableId);
  checkWritePermission(tableId,table);
switch (tableId) {
case TABLE_ID_DIRECT_MESSAGES_CONVERSATION:
case TABLE_ID_DIRECT_MESSAGES:
case TABLE_ID_DIRECT_MESSAGES_CONVERSATIONS_ENTRIES:
    return null;
}
final long rowId;
if (tableId == TABLE_ID_CACHED_USERS) {
  final Expression where=Expression.and(Expression.equalsArgs(CachedUsers.USER_ID),Expression.equalsArgs(CachedUsers.USER_HOST));
  final String[] whereArgs={values.getAsString(CachedUsers.USER_ID),values.getAsString(CachedUsers.USER_HOST)};
  mDatabaseWrapper.update(table,values,where.getSQL(),whereArgs);
  rowId=mDatabaseWrapper.insertWithOnConflict(table,null,values,SQLiteDatabase.CONFLICT_IGNORE);
}
 else if (tableId == TABLE_ID_SEARCH_HISTORY) {
  values.put(SearchHistory.RECENT_QUERY,System.currentTimeMillis());
  final Expression where=Expression.equalsArgs(SearchHistory.QUERY);
  final String[] args={values.getAsString(SearchHistory.QUERY)};
  mDatabaseWrapper.update(table,values,where.getSQL(),args);
  rowId=mDatabaseWrapper.insertWithOnConflict(table,null,values,SQLiteDatabase.CONFLICT_IGNORE);
}
 else if (tableId == TABLE_ID_CACHED_RELATIONSHIPS) {
  final long accountId=values.getAsLong(CachedRelationships.ACCOUNT_ID);
  final long userId=values.getAsLong(CachedRelationships.USER_ID);
  final Expression where=Expression.and(Expression.equals(CachedRelationships.ACCOUNT_ID,accountId),Expression.equals(CachedRelationships.USER_ID,userId));
  if (mDatabaseWrapper.update(table,values,where.getSQL(),null) > 0) {
    final String[] projection={CachedRelationships._ID};
    final Cursor c=mDatabaseWrapper.query(table,projection,where.getSQL(),null,null,null,null);
    if (c.moveToFirst()) {
      rowId=c.getLong(0);
    }
 else {
      rowId=0;
    }
    c.close();
  }
 else {
    rowId=mDatabaseWrapper.insertWithOnConflict(table,null,values,SQLiteDatabase.CONFLICT_IGNORE);
  }
}
 else if (tableId == VIRTUAL_TABLE_ID_DRAFTS_NOTIFICATIONS) {
  rowId=showDraftNotification(values);
}
 else if (shouldReplaceOnConflict(tableId)) {
  rowId=mDatabaseWrapper.insertWithOnConflict(table,null,values,SQLiteDatabase.CONFLICT_REPLACE);
}
 else if (table != null) {
  rowId=mDatabaseWrapper.insert(table,null,values);
}
 else {
  return null;
}
onDatabaseUpdated(tableId,uri);
onNewItemsInserted(uri,tableId,values);
return Uri.withAppendedPath(uri,String.valueOf(rowId));
}
