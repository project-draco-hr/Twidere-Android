{
  final ViewPager viewPager=findViewPager();
  final PagerAdapter adapter=viewPager.getAdapter();
  final int currentItem=viewPager.getCurrentItem();
  if (currentItem < 0 || currentItem >= adapter.getCount())   return false;
  final Object object=adapter.instantiateItem(viewPager,currentItem);
  if (!(object instanceof MediaViewerFragment))   return false;
switch (item.getItemId()) {
case R.id.refresh:
{
      if (object instanceof CacheDownloadMediaViewerFragment) {
        final CacheDownloadMediaViewerFragment fragment=(CacheDownloadMediaViewerFragment)object;
        fragment.startLoading(true);
        fragment.showProgress(true,0);
        fragment.setMediaViewVisible(false);
      }
      return true;
    }
case R.id.share:
{
    if (object instanceof CacheDownloadMediaViewerFragment) {
      if (object instanceof VideoPageFragment) {
        shareMedia(CacheProvider.Type.VIDEO);
      }
 else       if (object instanceof ImagePageFragment) {
        shareMedia(CacheProvider.Type.IMAGE);
      }
 else       if (object instanceof GifPageFragment) {
        shareMedia(CacheProvider.Type.IMAGE);
      }
 else {
        throw new UnsupportedOperationException("Unsupported fragment " + object);
      }
    }
 else {
      final ParcelableMedia media=getMedia()[currentItem];
      final Intent intent=new Intent(Intent.ACTION_SEND);
      intent.setType("text/plain");
      intent.putExtra(Intent.EXTRA_TEXT,media.url);
      startActivity(Intent.createChooser(intent,getString(R.string.share)));
    }
    return true;
  }
case R.id.save:
{
  requestAndSaveToStorage(currentItem);
  return true;
}
case R.id.open_in_browser:
{
final ParcelableMedia media=getMedia()[currentItem];
try {
  startActivity(new Intent(Intent.ACTION_VIEW,Uri.parse(media.url)));
}
 catch (ActivityNotFoundException e) {
}
return true;
}
}
return super.onOptionsItemSelected(item);
}
