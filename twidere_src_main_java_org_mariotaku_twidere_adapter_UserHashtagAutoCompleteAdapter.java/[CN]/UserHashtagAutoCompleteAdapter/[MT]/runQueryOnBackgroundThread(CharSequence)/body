{
  char token=mToken;
  if (mEditText != null && constraint != null) {
    final CharSequence text=mEditText.getText();
    token=text.charAt(mEditText.getSelectionEnd() - constraint.length() - 1);
  }
  if (isAtSymbol(token) == isAtSymbol(mToken)) {
    final FilterQueryProvider filter=getFilterQueryProvider();
    if (filter != null)     return filter.runQuery(constraint);
  }
  mToken=token;
  final String constraintEscaped=constraint != null ? constraint.toString().replaceAll("_","^_") : null;
  if (isAtSymbol(token)) {
    final String selection=constraintEscaped != null ? (CachedUsers.SCREEN_NAME + " LIKE ?||'%' ESCAPE '^'") + " OR " + CachedUsers.NAME+ " LIKE ?||'%' ESCAPE '^'"+ " OR "+ Expression.in(new Column(CachedUsers.USER_ID),new RawItemArray(getMatchedNicknameIds(ParseUtils.parseString(constraint)))).getSQL() : null;
    final String[] selectionArgs=constraintEscaped != null ? new String[]{constraintEscaped,constraintEscaped} : null;
    final String orderBy=CachedUsers.SCREEN_NAME + ", " + CachedUsers.NAME;
    return mResolver.query(CachedUsers.CONTENT_URI,CACHED_USERS_COLUMNS,selection,selectionArgs,orderBy);
  }
 else {
    final String selection=constraintEscaped != null ? CachedHashtags.NAME + " LIKE ?||'%' ESCAPE '^'" : null;
    final String[] selectionArgs=constraintEscaped != null ? new String[]{constraintEscaped} : null;
    return mDatabase.query(true,CachedHashtags.TABLE_NAME,CachedHashtags.COLUMNS,selection,selectionArgs,null,null,CachedHashtags.NAME,null);
  }
}
