{
  final HomeActivity activity=(HomeActivity)getActivity();
  if (activity == null)   return;
  final List<SupportTabSpec> tabs=activity.getTabs();
  final ParcelableAccount account=mAccountsAdapter.getSelectedAccount();
  if (account == null)   return;
  boolean hasDmTab=false, hasInteractionsTab=false;
  for (  SupportTabSpec tab : tabs) {
    if (tab.type == null)     continue;
switch (tab.type) {
case CustomTabType.DIRECT_MESSAGES:
{
        if (!hasDmTab) {
          hasDmTab=hasAccountInTab(tab,account.account_key,account.is_activated);
        }
        break;
      }
case CustomTabType.NOTIFICATIONS_TIMELINE:
{
      if (!hasInteractionsTab) {
        hasInteractionsTab=hasAccountInTab(tab,account.account_key,account.is_activated);
      }
      break;
    }
}
}
final Menu menu=mNavigationView.getMenu();
MenuUtils.setMenuItemAvailability(menu,R.id.interactions,!hasInteractionsTab);
MenuUtils.setMenuItemAvailability(menu,R.id.messages,!hasDmTab);
if (mUseStarsForLikes) {
MenuUtils.setMenuItemTitle(menu,R.id.favorites,R.string.favorites);
MenuUtils.setMenuItemIcon(menu,R.id.favorites,R.drawable.ic_action_star);
}
 else {
MenuUtils.setMenuItemTitle(menu,R.id.favorites,R.string.likes);
MenuUtils.setMenuItemIcon(menu,R.id.favorites,R.drawable.ic_action_heart);
}
boolean hasLists=false, hasGroups=false, hasPublicTimeline=false;
switch (ParcelableAccountUtils.getAccountType(account)) {
case ParcelableAccount.Type.TWITTER:
{
  hasLists=true;
  break;
}
case ParcelableAccount.Type.STATUSNET:
{
hasGroups=true;
break;
}
case ParcelableAccount.Type.FANFOU:
{
hasPublicTimeline=true;
break;
}
}
MenuUtils.setMenuItemAvailability(menu,R.id.groups,hasGroups);
MenuUtils.setMenuItemAvailability(menu,R.id.lists,hasLists);
MenuUtils.setMenuItemAvailability(menu,R.id.public_timeline,hasPublicTimeline);
}
