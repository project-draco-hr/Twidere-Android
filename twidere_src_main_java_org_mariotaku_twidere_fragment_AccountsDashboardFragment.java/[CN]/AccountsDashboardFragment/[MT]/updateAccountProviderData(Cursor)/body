{
  if (cursor == null)   return;
  final Menu menu=mAccountsToggleMenu.getMenu();
  mAccountActionProvider=(AccountToggleProvider)MenuItemCompat.getActionProvider(menu.findItem(R.id.select_account));
  final ParcelableAccount[] accounts=ParcelableAccountUtils.getAccounts(cursor);
  if (accounts.length > 0) {
    mNoAccountContainer.setVisibility(View.GONE);
    mAccountProfileContainer.setVisibility(View.VISIBLE);
  }
 else {
    mNoAccountContainer.setVisibility(View.VISIBLE);
    mAccountProfileContainer.setVisibility(View.INVISIBLE);
  }
  UserKey defaultId=null;
  for (  ParcelableAccount account : accounts) {
    if (account.is_activated) {
      defaultId=account.account_key;
      break;
    }
  }
  mUseStarsForLikes=mPreferences.getBoolean(KEY_I_WANT_MY_STARS_BACK);
  mAccountsAdapter.setAccounts(accounts);
  UserKey accountKey=UserKey.valueOf(mPreferences.getString(KEY_DEFAULT_ACCOUNT_KEY,null));
  if (accountKey == null) {
    accountKey=defaultId;
  }
  ParcelableAccount selectedAccount=null;
  for (  ParcelableAccount account : accounts) {
    if (account.account_key.maybeEquals(accountKey)) {
      selectedAccount=account;
      break;
    }
  }
  mAccountsAdapter.setSelectedAccount(selectedAccount);
  if (mAccountActionProvider != null) {
    mAccountActionProvider.setExclusive(false);
    mAccountActionProvider.setAccounts(accounts);
  }
  updateAccountActions();
  ParcelableAccount currentAccount=mAccountsAdapter.getSelectedAccount();
  if (currentAccount != null) {
    displayAccountBanner(currentAccount);
    displayCurrentAccount(null);
  }
  updateDefaultAccountState();
}
