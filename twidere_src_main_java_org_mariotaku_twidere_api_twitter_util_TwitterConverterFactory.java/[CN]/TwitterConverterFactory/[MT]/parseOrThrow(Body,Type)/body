{
  try {
    if (BuildConfig.DEBUG) {
      Log.d("TwitterConverter",TwidereTypeUtils.toSimpleName(type) + " ---> ?");
    }
    final ParameterizedType<T> parameterizedType=ParameterizedTypeAccessor.create(type);
    final WatchdogRunnable runnable=new WatchdogRunnable(new Exception());
    sWatchDogExecutor.execute(runnable);
    final JsonMapper<T> mapper;
synchronized (TwitterConverterFactory.class) {
      mapper=LoganSquare.mapperFor(parameterizedType);
    }
    runnable.finished();
    if (BuildConfig.DEBUG) {
      Log.d("TwitterConverter",TwidereTypeUtils.toSimpleName(type) + " ---> " + TwidereTypeUtils.toSimpleName(mapper.getClass()));
    }
    final T parsed=mapper.parse(body.stream());
    if (BuildConfig.DEBUG) {
      Log.d("TwitterConverter",TwidereTypeUtils.toSimpleName(type) + " Finished");
    }
    if (parsed == null) {
      throw new TwitterException("Empty data");
    }
    return parsed;
  }
 catch (  JsonParseException e) {
    throw new RestConverter.ConvertException("Malformed JSON Data");
  }
}
