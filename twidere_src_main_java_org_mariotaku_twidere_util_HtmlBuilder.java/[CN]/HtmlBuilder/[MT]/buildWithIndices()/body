{
  if (spanSpecs.isEmpty())   return Pair.create(escapeSource(),new SpanItem[0]);
  Collections.sort(spanSpecs);
  final StringBuilder sb=new StringBuilder();
  final int linksSize=spanSpecs.size();
  SpanItem[] items=new SpanItem[linksSize];
  for (int i=0; i < linksSize; i++) {
    final SpanSpec spec=spanSpecs.get(i);
    final int start=spec.getStart(), end=spec.getEnd();
    if (i == 0) {
      if (start >= 0 && start <= sourceLength) {
        appendSource(sb,0,start,false,sourceIsEscaped);
      }
    }
 else     if (i > 0) {
      final int lastEnd=spanSpecs.get(i - 1).end;
      if (lastEnd >= 0 && lastEnd <= start && start <= sourceLength) {
        appendSource(sb,lastEnd,start,false,sourceIsEscaped);
      }
    }
    int spanStart=sb.length();
    if (start >= 0 && start <= end && end <= sourceLength) {
      spec.appendTo(sb);
    }
    final SpanItem item=new SpanItem();
    item.start=spanStart;
    item.end=sb.length();
    if (spec instanceof LinkSpec) {
      item.link=((LinkSpec)spec).link;
    }
    items[i]=item;
    if (i == linksSize - 1 && end >= 0 && end <= sourceLength) {
      appendSource(sb,end,sourceLength,false,sourceIsEscaped);
    }
  }
  return Pair.create(sb.toString(),items);
}
