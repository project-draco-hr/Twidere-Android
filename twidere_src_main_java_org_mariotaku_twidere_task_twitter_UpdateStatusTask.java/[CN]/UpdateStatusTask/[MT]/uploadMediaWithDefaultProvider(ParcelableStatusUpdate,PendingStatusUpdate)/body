{
  if (ArrayUtils.isEmpty(update.media))   return;
  List<UserKey> ownersList=new ArrayList<>();
  List<String> ownerIdsList=new ArrayList<>();
  for (  ParcelableAccount item : update.accounts) {
    if (ParcelableAccount.Type.TWITTER.equals(ParcelableAccountUtils.getAccountType(item))) {
      ownersList.add(item.account_key);
      ownerIdsList.add(item.account_key.getId());
    }
  }
  String[] ownerIds=ownerIdsList.toArray(new String[ownerIdsList.size()]);
  for (int i=0; i < pendingUpdate.length; i++) {
    final ParcelableAccount account=update.accounts[i];
    String[] mediaIds;
switch (ParcelableAccountUtils.getAccountType(account)) {
case ParcelableAccount.Type.TWITTER:
{
        final TwitterUpload upload=MicroBlogAPIFactory.getInstance(context,account.account_key,true,true,TwitterUpload.class);
        if (pendingUpdate.sharedMediaIds != null) {
          mediaIds=pendingUpdate.sharedMediaIds;
        }
 else {
          mediaIds=uploadAllMediaShared(upload,update,ownerIds,true);
          pendingUpdate.sharedMediaIds=mediaIds;
        }
        break;
      }
case ParcelableAccount.Type.FANFOU:
{
      mediaIds=null;
      break;
    }
case ParcelableAccount.Type.STATUSNET:
{
    final TwitterUpload upload=MicroBlogAPIFactory.getInstance(context,account.account_key,true,true,TwitterUpload.class);
    mediaIds=uploadAllMediaShared(upload,update,ownerIds,false);
    break;
  }
default :
{
  mediaIds=null;
  break;
}
}
pendingUpdate.mediaIds[i]=mediaIds;
}
pendingUpdate.sharedMediaOwners=ownersList.toArray(new UserKey[ownersList.size()]);
}
