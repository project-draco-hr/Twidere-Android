{
  try {
    final JSONArray indicesArray=json.getJSONArray("indices");
    start=indicesArray.getInt(0);
    end=indicesArray.getInt(1);
    id=getLong("id",json);
    try {
      url=new URL(json.getString("url"));
    }
 catch (    final MalformedURLException ignore) {
    }
    if (!json.isNull("expanded_url")) {
      try {
        expandedURL=new URL(json.getString("expanded_url"));
      }
 catch (      final MalformedURLException ignore) {
      }
    }
    if (!json.isNull("media_url")) {
      try {
        mediaURL=new URL(json.getString("media_url"));
      }
 catch (      final MalformedURLException ignore) {
      }
    }
    if (!json.isNull("media_url_https")) {
      try {
        mediaURLHttps=new URL(json.getString("media_url_https"));
      }
 catch (      final MalformedURLException ignore) {
      }
    }
    if (!json.isNull("display_url")) {
      displayURL=json.getString("display_url");
    }
    if (!json.isNull("video_info")) {
      videoInfo=new VideoInfoJSONImpl(json.getJSONObject("video_info"));
    }
    final JSONObject sizes=json.getJSONObject("sizes");
    this.sizes=new HashMap<Integer,MediaEntity.Size>(4);
    addMediaEntitySizeIfNotNull(this.sizes,sizes,MediaEntity.Size.LARGE,"large");
    addMediaEntitySizeIfNotNull(this.sizes,sizes,MediaEntity.Size.MEDIUM,"medium");
    addMediaEntitySizeIfNotNull(this.sizes,sizes,MediaEntity.Size.SMALL,"small");
    addMediaEntitySizeIfNotNull(this.sizes,sizes,MediaEntity.Size.THUMB,"thumb");
    if (!json.isNull("type")) {
      type=Type.parse(json.getString("type"));
    }
  }
 catch (  final JSONException jsone) {
    throw new TwitterException(jsone);
  }
}
