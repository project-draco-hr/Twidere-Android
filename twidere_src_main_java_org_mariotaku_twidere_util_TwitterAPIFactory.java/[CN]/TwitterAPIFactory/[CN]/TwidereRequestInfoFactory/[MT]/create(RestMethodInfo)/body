{
  final RestMethod method=methodInfo.getMethod();
  final String path=methodInfo.getPath();
  final List<Pair<String,String>> queries=new ArrayList<>(methodInfo.getQueries());
  final List<Pair<String,String>> forms=new ArrayList<>(methodInfo.getForms());
  final List<Pair<String,String>> headers=methodInfo.getHeaders();
  final List<Pair<String,TypedData>> parts=methodInfo.getParts();
  final FileValue file=methodInfo.getFile();
  final Map<String,Object> extras=methodInfo.getExtras();
  final MethodExtra methodExtra=methodInfo.getMethodExtra();
  if (methodExtra != null && "extra_params".equals(methodExtra.name())) {
    final String[] extraParamKeys=methodExtra.values();
    if (parts.isEmpty()) {
      final List<Pair<String,String>> params=method.hasBody() ? forms : queries;
      for (      String key : extraParamKeys) {
        if (extraRequestParams != null && extraRequestParams.containsKey(key)) {
          addParam(params,key,extraRequestParams.get(key));
        }
 else {
          addParam(params,key,sDefaultRequestParams.get(key));
        }
      }
    }
 else {
      for (      String key : extraParamKeys) {
        if (extraRequestParams != null && extraRequestParams.containsKey(key)) {
          addPart(parts,key,extraRequestParams.get(key));
        }
 else {
          addPart(parts,key,sDefaultRequestParams.get(key));
        }
      }
    }
  }
  return new RestRequestInfo(method.value(),path,queries,forms,headers,parts,file,methodInfo.getBody(),extras);
}
