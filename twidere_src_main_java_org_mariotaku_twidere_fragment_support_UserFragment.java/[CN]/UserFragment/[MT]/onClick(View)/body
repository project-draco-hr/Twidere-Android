{
  final FragmentActivity activity=getActivity();
  final ParcelableUser user=getUser();
  if (activity == null || user == null)   return;
switch (view.getId()) {
case R.id.retry:
{
      getUserInfo(true);
      break;
    }
case R.id.follow:
{
    if (user.id == user.account_id) {
      final Bundle extras=new Bundle();
      extras.putLong(EXTRA_ACCOUNT_ID,user.account_id);
      final Intent intent=new Intent(INTENT_ACTION_EDIT_USER_PROFILE);
      intent.setClass(getActivity(),UserProfileEditorActivity.class);
      intent.putExtras(extras);
      startActivity(intent);
      break;
    }
    final Relationship relationship=mRelationship;
    final AsyncTwitterWrapper twitter=getTwitterWrapper();
    if (relationship == null || twitter == null)     return;
    if (relationship.isSourceBlockingTarget()) {
      twitter.destroyBlockAsync(user.account_id,user.id);
    }
 else     if (relationship.isSourceFollowingTarget()) {
      DestroyFriendshipDialogFragment.show(getFragmentManager(),user);
    }
 else {
      twitter.createFriendshipAsync(user.account_id,user.id);
    }
    break;
  }
case R.id.profile_image:
{
  final String url=Utils.getOriginalTwitterProfileImage(user.profile_image_url);
  final ParcelableMedia[] media={ParcelableMedia.newImage(url,url)};
  Bundle options=null;
  Utils.openMedia(activity,user.account_id,false,null,media,options);
  break;
}
case R.id.profile_banner:
{
if (user.profile_banner_url == null) return;
final String url=user.profile_banner_url + "/ipad_retina";
final ParcelableMedia[] media={ParcelableMedia.newImage(url,url)};
Bundle options=null;
Utils.openMedia(activity,user.account_id,false,null,media,options);
break;
}
case R.id.listed_container:
{
Utils.openUserLists(getActivity(),user.account_id,user.id,user.screen_name);
break;
}
case R.id.followers_container:
{
Utils.openUserFollowers(getActivity(),user.account_id,user.id,user.screen_name);
break;
}
case R.id.friends_container:
{
Utils.openUserFriends(getActivity(),user.account_id,user.id,user.screen_name);
break;
}
case R.id.name_container:
{
if (user.account_id != user.id) return;
startActivity(new Intent(getActivity(),UserProfileEditorActivity.class));
break;
}
}
}
