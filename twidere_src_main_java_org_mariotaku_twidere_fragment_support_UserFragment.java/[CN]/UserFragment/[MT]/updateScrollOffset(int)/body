{
  final View space=mProfileBannerSpace;
  final ProfileBannerImageView profileBannerView=mProfileBannerView;
  final View profileBannerContainer=mProfileBannerContainer;
  final int spaceHeight=space.getHeight();
  final float factor=MathUtils.clamp(offset / (float)spaceHeight,0,1);
  profileBannerContainer.setTranslationY(Math.max(-offset,-spaceHeight));
  profileBannerView.setTranslationY(Math.min(offset,spaceHeight) / 2);
  if (mActionBarBackground != null && mTintedStatusContent != null) {
    mActionBarBackground.setFactor(factor);
    mTintedStatusContent.setFactor(factor);
    final float profileContentHeight=mProfileNameContainer.getHeight() + mProfileDetailsContainer.getHeight();
    final float tabOutlineAlphaFactor;
    if ((offset - spaceHeight) > 0) {
      tabOutlineAlphaFactor=1f - MathUtils.clamp((offset - spaceHeight) / profileContentHeight,0,1);
    }
 else {
      tabOutlineAlphaFactor=1f;
    }
    mActionBarBackground.setOutlineAlphaFactor(tabOutlineAlphaFactor);
    final ThemedAppCompatActivity activity=(ThemedAppCompatActivity)getActivity();
    if (Build.VERSION.SDK_INT < Build.VERSION_CODES.LOLLIPOP) {
      setCompatToolbarOverlayAlpha(activity,factor * tabOutlineAlphaFactor);
    }
    final Drawable drawable=mPagerIndicator.getBackground();
    final int stackedTabColor;
    final int themeId=activity.getCurrentThemeResourceId();
    if (ThemeUtils.isDarkTheme(themeId)) {
      stackedTabColor=getResources().getColor(R.color.background_color_action_bar_dark);
      final int contrastColor=TwidereColorUtils.getContrastYIQ(stackedTabColor,ThemeUtils.ACCENT_COLOR_THRESHOLD);
      mPagerIndicator.setIconColor(contrastColor);
      mPagerIndicator.setLabelColor(contrastColor);
      mPagerIndicator.setStripColor(mUiColor);
    }
 else     if (drawable instanceof ColorDrawable) {
      stackedTabColor=mUiColor;
      final int tabColor=(Integer)sArgbEvaluator.evaluate(tabOutlineAlphaFactor,stackedTabColor,mCardBackgroundColor);
      ((ColorDrawable)drawable).setColor(tabColor);
      final int contrastColor=TwidereColorUtils.getContrastYIQ(tabColor,ThemeUtils.ACCENT_COLOR_THRESHOLD);
      mPagerIndicator.setIconColor(contrastColor);
      mPagerIndicator.setLabelColor(contrastColor);
      mPagerIndicator.setStripColor(contrastColor);
    }
 else {
      return;
    }
    final int barColor=(Integer)sArgbEvaluator.evaluate(factor,mActionBarShadowColor,stackedTabColor);
    final int itemColor=ThemeUtils.getContrastActionBarItemColor(activity,themeId,barColor);
    final Toolbar actionBarView=activity.getActionBarToolbar();
    if (actionBarView != null) {
      actionBarView.setTitleTextColor(itemColor);
      actionBarView.setSubtitleTextColor(itemColor);
      ThemeUtils.setActionBarOverflowColor(actionBarView,itemColor);
      ThemeUtils.wrapToolbarMenuIcon(ViewSupport.findViewByType(actionBarView,ActionMenuView.class),itemColor,itemColor);
      final Drawable navigationIcon=actionBarView.getNavigationIcon();
      if (navigationIcon != null) {
        navigationIcon.setColorFilter(itemColor,Mode.SRC_ATOP);
      }
      actionBarView.setNavigationIcon(navigationIcon);
    }
    mPagerIndicator.updateAppearance();
  }
  updateTitleAlpha();
}
