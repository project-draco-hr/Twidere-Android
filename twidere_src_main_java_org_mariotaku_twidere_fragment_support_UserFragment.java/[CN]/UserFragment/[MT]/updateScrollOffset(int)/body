{
  final View space=mProfileBannerSpace;
  final ProfileBannerImageView profileBannerView=mProfileBannerView;
  final View profileBannerContainer=mProfileBannerContainer;
  final int spaceHeight=space.getHeight();
  final float factor=MathUtils.clamp(offset / (float)spaceHeight,0,1);
  profileBannerContainer.setTranslationY(Math.max(-offset,-spaceHeight));
  profileBannerView.setTranslationY(Math.min(offset,spaceHeight) / 2);
  if (mActionBarBackground != null && mTintedStatusContent != null) {
    mActionBarBackground.setFactor(factor);
    mTintedStatusContent.setFactor(factor);
    final float profileContentHeight=mProfileNameContainer.getHeight() + mProfileDetailsContainer.getHeight();
    final float tabOutlineAlphaFactor;
    if ((offset - spaceHeight) > 0) {
      tabOutlineAlphaFactor=1f - MathUtils.clamp((offset - spaceHeight) / profileContentHeight,0,1);
    }
 else {
      tabOutlineAlphaFactor=1f;
    }
    mActionBarBackground.setOutlineAlphaFactor(tabOutlineAlphaFactor);
    final FragmentActivity activity=getActivity();
    if (Build.VERSION.SDK_INT < Build.VERSION_CODES.LOLLIPOP) {
      setCompatToolbarOverlayAlpha(activity,factor * tabOutlineAlphaFactor);
    }
    final int color=mActionBarBackground.getColor();
    if (activity instanceof IThemedActivity) {
      final Drawable drawable=mPagerIndicator.getBackground();
      final int stackedTabColor;
      if (ThemeUtils.isDarkTheme(((IThemedActivity)activity).getCurrentThemeResourceId())) {
        stackedTabColor=getResources().getColor(R.color.background_color_action_bar_dark);
        final int contrastColor=ColorUtils.getContrastYIQ(stackedTabColor,192);
        mPagerIndicator.setIconColor(contrastColor);
        mPagerIndicator.setLabelColor(contrastColor);
        mPagerIndicator.setStripColor(color);
      }
 else       if (drawable instanceof ColorDrawable) {
        stackedTabColor=color;
        final int tabColor=(Integer)sArgbEvaluator.evaluate(tabOutlineAlphaFactor,stackedTabColor,mCardBackgroundColor);
        ((ColorDrawable)drawable).setColor(tabColor);
        final int contrastColor=ColorUtils.getContrastYIQ(tabColor,192);
        mPagerIndicator.setIconColor(contrastColor);
        mPagerIndicator.setLabelColor(contrastColor);
        mPagerIndicator.setStripColor(contrastColor);
      }
    }
 else {
      final int contrastColor=ColorUtils.getContrastYIQ(color,192);
      mPagerIndicator.setIconColor(contrastColor);
      mPagerIndicator.setLabelColor(contrastColor);
      mPagerIndicator.setStripColor(contrastColor);
    }
    mPagerIndicator.updateAppearance();
  }
  updateTitleColor();
}
