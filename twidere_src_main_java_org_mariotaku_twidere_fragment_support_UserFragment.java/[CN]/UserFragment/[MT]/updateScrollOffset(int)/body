{
  final View space=mProfileBannerSpace;
  final ProfileBannerImageView profileBannerView=mProfileBannerView;
  final View profileBirthdayBannerView=mProfileBirthdayBannerView;
  final View profileBannerContainer=mProfileBannerContainer;
  final int spaceHeight=space.getHeight();
  final float factor=TwidereMathUtils.clamp(spaceHeight == 0 ? 0 : (offset / (float)spaceHeight),0,1);
  profileBannerContainer.setTranslationY(-offset);
  profileBannerView.setTranslationY(offset / 2);
  profileBirthdayBannerView.setTranslationY(offset / 2);
  if (mActionBarBackground != null && mTintedStatusContent != null) {
    mActionBarBackground.setFactor(factor);
    mTintedStatusContent.setFactor(factor);
    final float profileContentHeight=mProfileNameContainer.getHeight() + mProfileDetailsContainer.getHeight();
    final float tabOutlineAlphaFactor;
    if ((offset - spaceHeight) > 0) {
      tabOutlineAlphaFactor=1f - TwidereMathUtils.clamp((offset - spaceHeight) / profileContentHeight,0,1);
    }
 else {
      tabOutlineAlphaFactor=1f;
    }
    mActionBarBackground.setOutlineAlphaFactor(tabOutlineAlphaFactor);
    final ThemedAppCompatActivity activity=(ThemedAppCompatActivity)getActivity();
    if (Build.VERSION.SDK_INT < Build.VERSION_CODES.LOLLIPOP) {
      setCompatToolbarOverlayAlpha(activity,factor * tabOutlineAlphaFactor);
    }
    final Drawable tabBackground=mPagerIndicator.getBackground();
    int stackedTabColor=ThemeUtils.getActionBarColor(activity,mUiColor,activity.getThemeBackgroundOption());
    if (ThemeUtils.isTransparentBackground(activity.getCurrentThemeBackgroundOption())) {
      stackedTabColor=ColorUtils.setAlphaComponent(stackedTabColor,ThemeUtils.getActionBarAlpha(activity.getCurrentThemeBackgroundAlpha()));
    }
    final int tabColor=(Integer)sArgbEvaluator.evaluate(tabOutlineAlphaFactor,stackedTabColor,mCardBackgroundColor);
    ((ColorDrawable)tabBackground).setColor(tabColor);
    final boolean tabItemIsDark=TwidereColorUtils.getYIQLuminance(tabColor) > ThemeUtils.ACCENT_COLOR_THRESHOLD;
    if (mPreviousTabItemIsDark == 0 || (tabItemIsDark ? 1 : -1) != mPreviousTabItemIsDark) {
      final int[] primaryColors=new int[2];
      ThemeUtils.getDarkLightForegroundColors(activity,primaryColors);
      final int tabContrastColor=primaryColors[tabItemIsDark ? 0 : 1];
      mPagerIndicator.setIconColor(tabContrastColor);
      mPagerIndicator.setLabelColor(tabContrastColor);
      if (ThemeUtils.isDarkTheme(activity)) {
        mPagerIndicator.setStripColor(ThemeUtils.getOptimalAccentColor(mUiColor,tabContrastColor));
      }
 else {
        mPagerIndicator.setStripColor(tabContrastColor);
      }
      mPagerIndicator.updateAppearance();
    }
    mPreviousTabItemIsDark=(tabItemIsDark ? 1 : -1);
    final int barColor=(Integer)sArgbEvaluator.evaluate(factor,mActionBarShadowColor,stackedTabColor);
    final boolean actionItemIsDark=TwidereColorUtils.getYIQLuminance(barColor) > ThemeUtils.ACCENT_COLOR_THRESHOLD;
    if (mPreviousActionBarItemIsDark == 0 || (actionItemIsDark ? 1 : -1) != mPreviousActionBarItemIsDark) {
      ThemeUtils.applyToolbarItemColor(activity,activity.getActionBarToolbar(),barColor);
    }
    mPreviousActionBarItemIsDark=actionItemIsDark ? 1 : -1;
  }
  updateTitleAlpha();
}
