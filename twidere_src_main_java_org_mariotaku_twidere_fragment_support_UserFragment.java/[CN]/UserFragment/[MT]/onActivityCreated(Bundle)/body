{
  super.onActivityCreated(savedInstanceState);
  final FragmentActivity activity=getActivity();
  setHasOptionsMenu(true);
  getSharedPreferences(USER_COLOR_PREFERENCES_NAME,Context.MODE_PRIVATE).registerOnSharedPreferenceChangeListener(this);
  getSharedPreferences(USER_NICKNAME_PREFERENCES_NAME,Context.MODE_PRIVATE).registerOnSharedPreferenceChangeListener(this);
  mUserColorNameManager=UserColorNameManager.getInstance(activity);
  mPreferences=SharedPreferencesWrapper.getInstance(activity,SHARED_PREFERENCES_NAME,Context.MODE_PRIVATE,SharedPreferenceConstants.class);
  mNameFirst=mPreferences.getBoolean(KEY_NAME_FIRST);
  mLocale=getResources().getConfiguration().locale;
  mCardBackgroundColor=ThemeUtils.getCardBackgroundColor(activity,ThemeUtils.getThemeBackgroundOption(activity),ThemeUtils.getUserThemeBackgroundAlpha(activity));
  mActionBarShadowColor=0xA0000000;
  final TwidereApplication app=TwidereApplication.getInstance(activity);
  mProfileImageLoader=app.getMediaLoaderWrapper();
  final Bundle args=getArguments();
  long accountId=-1, userId=-1;
  String screenName=null;
  if (savedInstanceState != null) {
    args.putAll(savedInstanceState);
  }
 else {
    accountId=args.getLong(EXTRA_ACCOUNT_ID,-1);
    userId=args.getLong(EXTRA_USER_ID,-1);
    screenName=args.getString(EXTRA_SCREEN_NAME);
  }
  Utils.setNdefPushMessageCallback(activity,new CreateNdefMessageCallback(){
    @Override public NdefMessage createNdefMessage(    NfcEvent event){
      final ParcelableUser user=getUser();
      if (user == null)       return null;
      return new NdefMessage(new NdefRecord[]{NdefRecord.createUri(LinkCreator.getTwitterUserLink(user.screen_name))});
    }
  }
);
  activity.setEnterSharedElementCallback(new SharedElementCallback(){
    @Override public void onSharedElementStart(    List<String> sharedElementNames,    List<View> sharedElements,    List<View> sharedElementSnapshots){
      final int idx=sharedElementNames.indexOf(TRANSITION_NAME_PROFILE_IMAGE);
      if (idx != -1) {
        final View view=sharedElements.get(idx);
        int[] location=new int[2];
        final RectF bounds=new RectF(0,0,view.getWidth(),view.getHeight());
        view.getLocationOnScreen(location);
        bounds.offsetTo(location[0],location[1]);
        mProfileImageView.setTransitionSource(bounds);
      }
      super.onSharedElementStart(sharedElementNames,sharedElements,sharedElementSnapshots);
    }
    @Override public void onSharedElementEnd(    List<String> sharedElementNames,    List<View> sharedElements,    List<View> sharedElementSnapshots){
      int idx=sharedElementNames.indexOf(TRANSITION_NAME_PROFILE_IMAGE);
      if (idx != -1) {
        final View view=sharedElements.get(idx);
        int[] location=new int[2];
        final RectF bounds=new RectF(0,0,view.getWidth(),view.getHeight());
        view.getLocationOnScreen(location);
        bounds.offsetTo(location[0],location[1]);
        mProfileImageView.setTransitionDestination(bounds);
      }
      super.onSharedElementEnd(sharedElementNames,sharedElements,sharedElementSnapshots);
    }
  }
);
  ViewCompat.setTransitionName(mProfileImageView,TRANSITION_NAME_PROFILE_IMAGE);
  ViewCompat.setTransitionName(mProfileTypeView,TRANSITION_NAME_PROFILE_TYPE);
  mHeaderDrawerLayout.setDrawerCallback(this);
  mPagerAdapter=new SupportTabsAdapter(activity,getChildFragmentManager());
  mViewPager.setOffscreenPageLimit(3);
  mViewPager.setAdapter(mPagerAdapter);
  mPagerIndicator.setViewPager(mViewPager);
  mPagerIndicator.setTabDisplayOption(TabPagerIndicator.LABEL);
  mPagerIndicator.setOnPageChangeListener(this);
  mFollowButton.setOnClickListener(this);
  mProfileImageView.setOnClickListener(this);
  mProfileBannerView.setOnClickListener(this);
  mListedContainer.setOnClickListener(this);
  mFollowersContainer.setOnClickListener(this);
  mFriendsContainer.setOnClickListener(this);
  mHeaderErrorIcon.setOnClickListener(this);
  mProfileBannerView.setOnSizeChangedListener(this);
  mProfileBannerSpace.setOnTouchListener(this);
  mProfileNameBackground.setBackgroundColor(mCardBackgroundColor);
  mProfileDetailsContainer.setBackgroundColor(mCardBackgroundColor);
  mPagerIndicator.setBackgroundColor(mCardBackgroundColor);
  mUuckyFooter.setBackgroundColor(mCardBackgroundColor);
  final float actionBarElevation=ThemeUtils.getSupportActionBarElevation(activity);
  ViewCompat.setElevation(mPagerIndicator,actionBarElevation);
  if (activity instanceof IThemedActivity) {
    ViewSupport.setBackground(mPagerOverlay,ThemeUtils.getNormalWindowContentOverlay(activity,((IThemedActivity)activity).getCurrentThemeResourceId()));
  }
  setupBaseActionBar();
  setupUserPages();
  if (activity instanceof IThemedActivity) {
    setUiColor(((IThemedActivity)activity).getCurrentThemeColor());
  }
  getUserInfo(accountId,userId,screenName,false);
}
