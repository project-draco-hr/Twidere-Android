{
  final ParcelableUser user=mUser;
switch (requestCode) {
case REQUEST_SET_COLOR:
{
      if (user == null)       return;
      if (resultCode == Activity.RESULT_OK) {
        if (data == null)         return;
        final int color=data.getIntExtra(EXTRA_COLOR,Color.TRANSPARENT);
        UserColorNameUtils.setUserColor(getActivity(),mUser.id,color);
      }
 else       if (resultCode == ColorPickerDialogActivity.RESULT_CLEARED) {
        clearUserColor(getActivity(),mUser.id);
      }
      break;
    }
case REQUEST_ADD_TO_LIST:
{
    if (user == null)     return;
    if (resultCode == Activity.RESULT_OK && data != null) {
      final AsyncTwitterWrapper twitter=getTwitterWrapper();
      final ParcelableUserList list=data.getParcelableExtra(EXTRA_USER_LIST);
      if (list == null || twitter == null)       return;
      twitter.addUserListMembersAsync(user.account_id,list.id,user);
    }
    break;
  }
case REQUEST_SELECT_ACCOUNT:
{
  if (user == null)   return;
  if (resultCode == Activity.RESULT_OK) {
    if (data == null || !data.hasExtra(EXTRA_ID))     return;
    final long accountId=data.getLongExtra(EXTRA_ID,-1);
    openUserProfile(getActivity(),accountId,user.id,user.screen_name,null);
  }
  break;
}
}
}
