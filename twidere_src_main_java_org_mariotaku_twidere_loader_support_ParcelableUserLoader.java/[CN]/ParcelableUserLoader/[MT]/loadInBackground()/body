{
  final Context context=getContext();
  final ContentResolver resolver=context.getContentResolver();
  if (!mOmitIntentExtra && mExtras != null) {
    final ParcelableUser user=mExtras.getParcelable(EXTRA_USER);
    if (user != null) {
      final ContentValues values=ContentValuesCreator.makeCachedUserContentValues(user);
      resolver.insert(CachedUsers.CONTENT_URI,values);
      return SingleResponse.getInstance(user);
    }
  }
  final Twitter twitter=TwitterAPIFactory.getTwitterInstance(context,mAccountId,true);
  if (twitter == null)   return SingleResponse.getInstance();
  if (mLoadFromCache) {
    final Expression where;
    final String[] whereArgs;
    if (mUserId > 0) {
      where=Expression.equals(CachedUsers.USER_ID,mUserId);
      whereArgs=null;
    }
 else {
      where=Expression.equalsArgs(CachedUsers.SCREEN_NAME);
      whereArgs=new String[]{mScreenName};
    }
    final Cursor cur=resolver.query(CachedUsers.CONTENT_URI,CachedUsers.COLUMNS,where.getSQL(),whereArgs,null);
    final int count=cur.getCount();
    try {
      if (count > 0) {
        final CachedIndices indices=new CachedIndices(cur);
        cur.moveToFirst();
        return SingleResponse.getInstance(new ParcelableUser(cur,indices,mAccountId));
      }
    }
  finally {
      cur.close();
    }
  }
  try {
    final User user=TwitterWrapper.tryShowUser(twitter,mUserId,mScreenName);
    final ContentValues cachedUserValues=createCachedUser(user);
    final long userId=user.getId();
    resolver.insert(CachedUsers.CONTENT_URI,cachedUserValues);
    final ParcelableUser result=new ParcelableUser(user,mAccountId);
    if (isMyAccount(context,userId)) {
      final ContentValues accountValues=new ContentValues();
      accountValues.put(Accounts.NAME,result.name);
      accountValues.put(Accounts.SCREEN_NAME,result.screen_name);
      accountValues.put(Accounts.PROFILE_IMAGE_URL,result.profile_image_url);
      accountValues.put(Accounts.PROFILE_BANNER_URL,result.profile_banner_url);
      final String accountWhere=Expression.equals(Accounts.ACCOUNT_ID,userId).getSQL();
      resolver.update(Accounts.CONTENT_URI,accountValues,accountWhere,null);
    }
    return SingleResponse.getInstance(result);
  }
 catch (  final TwitterException e) {
    Log.w(LOGTAG,e);
    return SingleResponse.getInstance(e);
  }
}
