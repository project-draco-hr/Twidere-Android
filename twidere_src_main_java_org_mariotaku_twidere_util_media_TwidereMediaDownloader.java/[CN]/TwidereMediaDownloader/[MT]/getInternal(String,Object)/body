{
  final Uri uri=Uri.parse(url);
  Authorization auth=null;
  ParcelableCredentials account=null;
  boolean useThumbor=true;
  if (extra instanceof MediaExtra) {
    useThumbor=((MediaExtra)extra).isUseThumbor();
    UserKey accountKey=((MediaExtra)extra).getAccountKey();
    if (accountKey != null) {
      account=ParcelableCredentialsUtils.getCredentials(mContext,accountKey);
      auth=MicroBlogAPIFactory.getAuthorization(account);
    }
  }
  final Uri modifiedUri=getReplacedUri(uri,account != null ? account.api_url_format : null);
  final MultiValueMap<String> additionalHeaders=new MultiValueMap<>();
  additionalHeaders.add("User-Agent",mUserAgent);
  final String method=GET.METHOD;
  final String requestUri;
  if (isAuthRequired(uri,account) && auth != null && auth.hasAuthorization()) {
    final Endpoint endpoint;
    if (auth instanceof OAuthAuthorization) {
      endpoint=new OAuthEndpoint(getEndpoint(modifiedUri),getEndpoint(uri));
    }
 else {
      endpoint=new Endpoint(getEndpoint(modifiedUri));
    }
    final MultiValueMap<String> queries=new MultiValueMap<>();
    for (    String name : uri.getQueryParameterNames()) {
      for (      String value : uri.getQueryParameters(name)) {
        queries.add(name,value);
      }
    }
    final RestRequest info=new RestRequest(method,false,uri.getPath(),additionalHeaders,queries,null,null,null,null);
    additionalHeaders.add("Authorization",auth.getHeader(endpoint,info));
    requestUri=modifiedUri.toString();
  }
 else   if (mThumbor != null && useThumbor) {
    requestUri=mThumbor.buildImage(modifiedUri.toString()).filter(ThumborUrlBuilder.quality(85)).toUrl();
    if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.JELLY_BEAN_MR1) {
      additionalHeaders.add("Accept","image/webp, */*");
    }
  }
 else {
    requestUri=modifiedUri.toString();
  }
  final HttpRequest.Builder builder=new HttpRequest.Builder();
  builder.method(method);
  builder.url(requestUri);
  builder.headers(additionalHeaders);
  builder.tag(NoIntercept.INSTANCE);
  final HttpResponse resp=mClient.newCall(builder.build()).execute();
  if (!resp.isSuccessful()) {
    final String detailMessage="Unable to get " + requestUri + ", response code: "+ resp.getStatus();
    if (resp.getStatus() == 404) {
      throw new FileNotFoundException(detailMessage);
    }
    throw new IOException(detailMessage);
  }
  final Body body=resp.getBody();
  final CacheMetadata metadata=new CacheMetadata();
  metadata.setContentType(body.contentType().getContentType());
  return new TwidereDownloadResult(body,metadata);
}
