{
  final Resources resources=context.getResources();
switch (activity.action) {
case Activity.Action.FOLLOW:
{
      int typeIcon=(R.drawable.ic_activity_action_follow);
      int color=ContextCompat.getColor(context,R.color.highlight_follow);
      CharSequence title;
      if (byFriends) {
        title=getTitleStringByFriends(resources,manager,R.string.activity_by_friends_follow,R.string.activity_by_friends_follow_multi,sources,activity.target_users,nameFirst);
      }
 else {
        title=(getTitleStringAboutMe(resources,manager,R.string.activity_about_me_follow,R.string.activity_about_me_follow_multi,sources,nameFirst));
      }
      return new ActivityTitleSummaryMessage(typeIcon,color,title,null);
    }
case Activity.Action.FAVORITE:
{
    int typeIcon;
    int color;
    CharSequence title;
    if (shouldUseStarsForLikes) {
      typeIcon=(R.drawable.ic_activity_action_favorite);
      color=ContextCompat.getColor(context,R.color.highlight_favorite);
      if (byFriends) {
        title=getTitleStringByFriends(resources,manager,R.string.activity_by_friends_favorite,R.string.activity_by_friends_favorite_multi,sources,activity.target_statuses,nameFirst);
      }
 else {
        title=(getTitleStringAboutMe(resources,manager,R.string.activity_about_me_favorite,R.string.activity_about_me_favorite_multi,sources,nameFirst));
      }
    }
 else {
      typeIcon=(R.drawable.ic_activity_action_like);
      color=ContextCompat.getColor(context,R.color.highlight_like);
      if (byFriends) {
        title=(getTitleStringByFriends(resources,manager,R.string.activity_by_friends_like,R.string.activity_by_friends_like_multi,sources,activity.target_statuses,nameFirst));
      }
 else {
        title=(getTitleStringAboutMe(resources,manager,R.string.activity_about_me_like,R.string.activity_about_me_like_multi,sources,nameFirst));
      }
    }
    final StringBuilder summaryBuilder=new StringBuilder();
    boolean first=true;
    for (    ParcelableStatus status : activity.target_statuses) {
      if (!first) {
        summaryBuilder.append('\n');
      }
      summaryBuilder.append(status.text_unescaped.replace('\n',' '));
      first=false;
    }
    return new ActivityTitleSummaryMessage(typeIcon,color,title,summaryBuilder.toString());
  }
case Activity.Action.RETWEET:
{
  int typeIcon=(R.drawable.ic_activity_action_retweet);
  int color=ContextCompat.getColor(context,R.color.highlight_retweet);
  CharSequence title;
  if (byFriends) {
    title=getTitleStringByFriends(resources,manager,R.string.activity_by_friends_retweet,R.string.activity_by_friends_retweet_multi,sources,activity.target_statuses,nameFirst);
  }
 else {
    title=getTitleStringAboutMe(resources,manager,R.string.activity_about_me_retweet,R.string.activity_about_me_retweet_multi,sources,nameFirst);
  }
  final String summary=activity.target_statuses[0].text_unescaped;
  return new ActivityTitleSummaryMessage(typeIcon,color,title,summary);
}
case Activity.Action.FAVORITED_RETWEET:
{
if (byFriends) return null;
int typeIcon;
int color;
CharSequence title;
if (shouldUseStarsForLikes) {
  typeIcon=(R.drawable.ic_activity_action_favorite);
  color=ContextCompat.getColor(context,R.color.highlight_favorite);
  title=getTitleStringAboutMe(resources,manager,R.string.activity_about_me_favorited_retweet,R.string.activity_about_me_favorited_retweet_multi,sources,nameFirst);
}
 else {
  typeIcon=(R.drawable.ic_activity_action_like);
  color=ContextCompat.getColor(context,R.color.highlight_like);
  title=getTitleStringAboutMe(resources,manager,R.string.activity_about_me_liked_retweet,R.string.activity_about_me_liked_retweet_multi,sources,nameFirst);
}
final String summary=activity.target_statuses[0].text_unescaped;
return new ActivityTitleSummaryMessage(typeIcon,color,title,summary);
}
case Activity.Action.RETWEETED_RETWEET:
{
if (byFriends) return null;
int typeIcon=(R.drawable.ic_activity_action_retweet);
int color=ContextCompat.getColor(context,R.color.highlight_retweet);
CharSequence title=(getTitleStringAboutMe(resources,manager,R.string.activity_about_me_retweeted_retweet,R.string.activity_about_me_retweeted_retweet_multi,sources,nameFirst));
final String summary=activity.target_statuses[0].text_unescaped;
return new ActivityTitleSummaryMessage(typeIcon,color,title,summary);
}
case Activity.Action.RETWEETED_MENTION:
{
if (byFriends) return null;
int typeIcon=(R.drawable.ic_activity_action_retweet);
int color=ContextCompat.getColor(context,R.color.highlight_retweet);
CharSequence title=(getTitleStringAboutMe(resources,manager,R.string.activity_about_me_retweeted_mention,R.string.activity_about_me_retweeted_mention_multi,sources,nameFirst));
final String summary=activity.target_statuses[0].text_unescaped;
return new ActivityTitleSummaryMessage(typeIcon,color,title,summary);
}
case Activity.Action.FAVORITED_MENTION:
{
if (byFriends) return null;
int typeIcon;
int color;
CharSequence title;
if (shouldUseStarsForLikes) {
typeIcon=(R.drawable.ic_activity_action_favorite);
color=ContextCompat.getColor(context,R.color.highlight_favorite);
title=(getTitleStringAboutMe(resources,manager,R.string.activity_about_me_favorited_mention,R.string.activity_about_me_favorited_mention_multi,sources,nameFirst));
}
 else {
typeIcon=(R.drawable.ic_activity_action_like);
color=ContextCompat.getColor(context,R.color.highlight_like);
title=(getTitleStringAboutMe(resources,manager,R.string.activity_about_me_liked_mention,R.string.activity_about_me_liked_mention_multi,sources,nameFirst));
}
final String summary=activity.target_statuses[0].text_unescaped;
return new ActivityTitleSummaryMessage(typeIcon,color,title,summary);
}
case Activity.Action.LIST_CREATED:
{
if (!byFriends) return null;
int typeIcon=(R.drawable.ic_activity_action_list_added);
CharSequence title=(getTitleStringByFriends(resources,manager,R.string.activity_by_friends_list_created,R.string.activity_by_friends_list_created_multi,sources,activity.target_object_user_lists,nameFirst));
boolean firstLine=true;
StringBuilder sb=new StringBuilder();
for (ParcelableUserList item : activity.target_object_user_lists) {
if (!firstLine) {
sb.append("\n");
}
sb.append(item.description.replace('\n',' '));
firstLine=false;
}
return new ActivityTitleSummaryMessage(typeIcon,defaultColor,title,sb);
}
case Activity.Action.LIST_MEMBER_ADDED:
{
if (byFriends) return null;
CharSequence title;
int icon=R.drawable.ic_activity_action_list_added;
if (sources.length == 1 && activity.target_object_user_lists != null && activity.target_object_user_lists.length == 1) {
final SpannableString firstDisplayName=new SpannableString(manager.getDisplayName(sources[0],nameFirst,false));
final SpannableString listName=new SpannableString(activity.target_object_user_lists[0].name);
firstDisplayName.setSpan(new StyleSpan(Typeface.BOLD),0,firstDisplayName.length(),Spanned.SPAN_EXCLUSIVE_EXCLUSIVE);
listName.setSpan(new StyleSpan(Typeface.BOLD),0,listName.length(),Spanned.SPAN_EXCLUSIVE_EXCLUSIVE);
final String format=context.getString(R.string.activity_about_me_list_member_added_with_name);
final Configuration configuration=resources.getConfiguration();
title=SpanFormatter.format(configuration.locale,format,firstDisplayName,listName);
}
 else {
title=getTitleStringAboutMe(resources,manager,R.string.activity_about_me_list_member_added,R.string.activity_about_me_list_member_added_multi,sources,nameFirst);
}
return new ActivityTitleSummaryMessage(icon,defaultColor,title,null);
}
case Activity.Action.MENTION:
case Activity.Action.REPLY:
case Activity.Action.QUOTE:
{
final ParcelableStatus status=ParcelableActivityUtils.getActivityStatus(activity);
if (status == null) return null;
final SpannableString title=new SpannableString(manager.getDisplayName(status,nameFirst,false));
title.setSpan(new StyleSpan(Typeface.BOLD),0,title.length(),Spanned.SPAN_EXCLUSIVE_EXCLUSIVE);
return new ActivityTitleSummaryMessage(0,0,title,status.text_unescaped);
}
}
return null;
}
