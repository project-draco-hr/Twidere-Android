{
  final ParcelableStatus result=new ParcelableStatus();
  result.is_gap=isGap;
  result.account_key=accountKey;
  result.id=orig.getId();
  result.sort_id=orig.getSortId();
  result.timestamp=getTime(orig.getCreatedAt());
  result.extras=new ParcelableStatus.Extras();
  result.extras.external_url=orig.getExternalUrl();
  result.extras.support_entities=orig.getEntities() != null;
  result.extras.statusnet_conversation_id=orig.getStatusnetConversationId();
  final Status retweetedStatus=orig.getRetweetedStatus();
  result.is_retweet=orig.isRetweet();
  result.retweeted=orig.wasRetweeted();
  if (retweetedStatus != null) {
    final User retweetUser=orig.getUser();
    result.retweet_id=retweetedStatus.getId();
    result.retweet_timestamp=getTime(retweetedStatus.getCreatedAt());
    result.retweeted_by_user_key=UserKeyUtils.fromUser(retweetUser);
    result.retweeted_by_user_name=retweetUser.getName();
    result.retweeted_by_user_screen_name=retweetUser.getScreenName();
    result.retweeted_by_user_profile_image=TwitterContentUtils.getProfileImageUrl(retweetUser);
  }
  final Status quoted=orig.getQuotedStatus();
  result.is_quote=orig.isQuote();
  if (quoted != null) {
    final User quotedUser=quoted.getUser();
    result.quoted_id=quoted.getId();
    final String quotedText=quoted.getHtmlText();
    if (isHtml(quotedText)) {
      final CharSequence html=HtmlSpanBuilder.fromHtml(quotedText,quoted.getText());
      result.quoted_text_unescaped=html.toString();
      result.quoted_text_plain=result.quoted_text_unescaped;
      result.quoted_spans=getSpanItems(html);
    }
 else {
      final Pair<String,List<SpanItem>> textWithIndices=InternalTwitterContentUtils.formatStatusTextWithIndices(quoted);
      result.quoted_text_plain=InternalTwitterContentUtils.unescapeTwitterStatusText(quotedText);
      result.quoted_text_unescaped=textWithIndices.first;
      result.quoted_spans=textWithIndices.second.toArray(new SpanItem[textWithIndices.second.size()]);
    }
    result.quoted_timestamp=quoted.getCreatedAt().getTime();
    result.quoted_source=quoted.getSource();
    result.quoted_media=ParcelableMediaUtils.fromStatus(quoted);
    result.quoted_location=getLocation(quoted);
    result.quoted_place_full_name=getPlaceFullName(quoted);
    result.quoted_user_key=UserKeyUtils.fromUser(quotedUser);
    result.quoted_user_name=quotedUser.getName();
    result.quoted_user_screen_name=quotedUser.getScreenName();
    result.quoted_user_profile_image=TwitterContentUtils.getProfileImageUrl(quotedUser);
    result.quoted_user_is_protected=quotedUser.isProtected();
    result.quoted_user_is_verified=quotedUser.isVerified();
  }
  final Status status;
  if (retweetedStatus != null) {
    status=retweetedStatus;
    result.reply_count=retweetedStatus.getReplyCount();
    result.retweet_count=retweetedStatus.getRetweetCount();
    result.favorite_count=retweetedStatus.getFavoriteCount();
    result.in_reply_to_name=getInReplyToName(retweetedStatus);
    result.in_reply_to_screen_name=retweetedStatus.getInReplyToScreenName();
    result.in_reply_to_status_id=retweetedStatus.getInReplyToStatusId();
    result.in_reply_to_user_id=getInReplyToUserId(retweetedStatus,accountKey);
  }
 else {
    status=orig;
    result.reply_count=orig.getReplyCount();
    result.retweet_count=orig.getRetweetCount();
    result.favorite_count=orig.getFavoriteCount();
    result.in_reply_to_name=getInReplyToName(orig);
    result.in_reply_to_screen_name=orig.getInReplyToScreenName();
    result.in_reply_to_status_id=orig.getInReplyToStatusId();
    result.in_reply_to_user_id=getInReplyToUserId(orig,accountKey);
  }
  final User user=status.getUser();
  result.user_key=UserKeyUtils.fromUser(user);
  result.user_name=user.getName();
  result.user_screen_name=user.getScreenName();
  result.user_profile_image_url=TwitterContentUtils.getProfileImageUrl(user);
  result.user_is_protected=user.isProtected();
  result.user_is_verified=user.isVerified();
  result.user_is_following=user.isFollowing();
  result.extras.user_profile_image_url_profile_size=user.getProfileImageUrlProfileSize();
  if (result.extras.user_profile_image_url_profile_size == null) {
    result.extras.user_profile_image_url_profile_size=user.getProfileImageUrlLarge();
  }
  final String text=status.getHtmlText();
  if (isHtml(text)) {
    final CharSequence html=HtmlSpanBuilder.fromHtml(text,status.getText());
    result.text_unescaped=html.toString();
    result.text_plain=result.text_unescaped;
    result.spans=getSpanItems(html);
  }
 else {
    final Pair<String,List<SpanItem>> textWithIndices=InternalTwitterContentUtils.formatStatusTextWithIndices(status);
    result.text_plain=InternalTwitterContentUtils.unescapeTwitterStatusText(text);
    result.text_unescaped=textWithIndices.first;
    result.spans=textWithIndices.second.toArray(new SpanItem[textWithIndices.second.size()]);
  }
  result.media=ParcelableMediaUtils.fromStatus(status);
  result.source=status.getSource();
  result.location=getLocation(status);
  result.is_favorite=status.isFavorited();
  if (result.account_key.maybeEquals(result.retweeted_by_user_key)) {
    result.my_retweet_id=result.id;
  }
 else {
    result.my_retweet_id=status.getCurrentUserRetweet();
  }
  result.is_possibly_sensitive=status.isPossiblySensitive();
  result.mentions=ParcelableUserMentionUtils.fromUserMentionEntities(user,status.getUserMentionEntities());
  result.card=ParcelableCardEntityUtils.fromCardEntity(status.getCard(),accountKey);
  result.place_full_name=getPlaceFullName(status);
  result.card_name=result.card != null ? result.card.name : null;
  result.lang=status.getLang();
  return result;
}
