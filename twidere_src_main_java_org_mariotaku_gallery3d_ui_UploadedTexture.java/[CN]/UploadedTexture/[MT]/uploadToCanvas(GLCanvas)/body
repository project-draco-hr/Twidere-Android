{
  final GL11 gl=canvas.getGLInstance();
  final Bitmap bitmap=getBitmap();
  if (bitmap != null) {
    try {
      final int bWidth=bitmap.getWidth();
      final int bHeight=bitmap.getHeight();
      final int texWidth=getTextureWidth();
      final int texHeight=getTextureHeight();
      GalleryUtils.assertTrue(bWidth <= texWidth && bHeight <= texHeight);
      sCropRect[0]=mBorder;
      sCropRect[1]=mBorder + bHeight;
      sCropRect[2]=bWidth;
      sCropRect[3]=-bHeight;
      GLId.glGenTextures(1,sTextureId,0);
      gl.glBindTexture(GL11.GL_TEXTURE_2D,sTextureId[0]);
      gl.glTexParameterfv(GL11.GL_TEXTURE_2D,GL11Ext.GL_TEXTURE_CROP_RECT_OES,sCropRect,0);
      gl.glTexParameteri(GL11.GL_TEXTURE_2D,GL11.GL_TEXTURE_WRAP_S,GL11.GL_CLAMP_TO_EDGE);
      gl.glTexParameteri(GL11.GL_TEXTURE_2D,GL11.GL_TEXTURE_WRAP_T,GL11.GL_CLAMP_TO_EDGE);
      gl.glTexParameterf(GL11.GL_TEXTURE_2D,GL11.GL_TEXTURE_MIN_FILTER,GL11.GL_LINEAR);
      gl.glTexParameterf(GL11.GL_TEXTURE_2D,GL11.GL_TEXTURE_MAG_FILTER,GL11.GL_LINEAR);
      if (bWidth == texWidth && bHeight == texHeight) {
        GLUtils.texImage2D(GL11.GL_TEXTURE_2D,0,bitmap,0);
      }
 else {
        final int format=GLUtils.getInternalFormat(bitmap);
        final int type=GLUtils.getType(bitmap);
        final Config config=bitmap.getConfig();
        gl.glTexImage2D(GL11.GL_TEXTURE_2D,0,format,texWidth,texHeight,0,format,type,null);
        GLUtils.texSubImage2D(GL11.GL_TEXTURE_2D,0,mBorder,mBorder,bitmap,format,type);
        if (mBorder > 0) {
          Bitmap line=getBorderLine(true,config,texHeight);
          GLUtils.texSubImage2D(GL11.GL_TEXTURE_2D,0,0,0,line,format,type);
          line=getBorderLine(false,config,texWidth);
          GLUtils.texSubImage2D(GL11.GL_TEXTURE_2D,0,0,0,line,format,type);
        }
        if (mBorder + bWidth < texWidth) {
          final Bitmap line=getBorderLine(true,config,texHeight);
          GLUtils.texSubImage2D(GL11.GL_TEXTURE_2D,0,mBorder + bWidth,0,line,format,type);
        }
        if (mBorder + bHeight < texHeight) {
          final Bitmap line=getBorderLine(false,config,texWidth);
          GLUtils.texSubImage2D(GL11.GL_TEXTURE_2D,0,0,mBorder + bHeight,line,format,type);
        }
      }
    }
  finally {
      freeBitmap();
    }
    setAssociatedCanvas(canvas);
    mId=sTextureId[0];
    mState=STATE_LOADED;
    mContentValid=true;
  }
 else {
    mState=STATE_ERROR;
  }
}
