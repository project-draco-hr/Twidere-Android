{
  mUploadQuota=UPLOAD_LIMIT;
  mRenderComplete=true;
  final int level=mLevel;
  final int rotation=mRotation;
  int flags=0;
  if (rotation != 0) {
    flags|=GLCanvas.SAVE_FLAG_MATRIX;
  }
  if (flags != 0) {
    canvas.save(flags);
    if (rotation != 0) {
      final int centerX=getWidth() / 2, centerY=getHeight() / 2;
      canvas.translate(centerX,centerY);
      canvas.rotate(rotation,0,0,1);
      canvas.translate(-centerX,-centerY);
    }
  }
  try {
    if (level != mLevelCount && !isScreenNailAnimating()) {
      if (mScreenNail != null) {
        mScreenNail.noDraw();
      }
      final int size=TILE_SIZE << level;
      final float length=size * mScale;
      final Rect r=mTileRange;
      for (int ty=r.top, i=0; ty < r.bottom; ty+=size, i++) {
        final float y=mOffsetY + i * length;
        for (int tx=r.left, j=0; tx < r.right; tx+=size, j++) {
          final float x=mOffsetX + j * length;
          drawTile(canvas,tx,ty,level,x,y,length);
        }
      }
    }
 else     if (mScreenNail != null) {
      mScreenNail.draw(canvas,mOffsetX,mOffsetY,Math.round(mImageWidth * mScale),Math.round(mImageHeight * mScale));
      if (isScreenNailAnimating()) {
        invalidate();
      }
    }
  }
  finally {
    if (flags != 0) {
      canvas.restore();
    }
  }
  if (mRenderComplete) {
    if (!mBackgroundTileUploaded) {
      uploadBackgroundTiles(canvas);
    }
  }
 else {
    invalidate();
  }
}
