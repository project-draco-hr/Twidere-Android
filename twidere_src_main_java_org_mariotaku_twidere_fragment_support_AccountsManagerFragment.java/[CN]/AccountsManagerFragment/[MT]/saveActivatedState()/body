{
  final Set<UserKey> trueIds=new CompactHashSet<>(), falseIds=new CompactHashSet<>();
  for (int i=0, j=mActivatedState.size(); i < j; i++) {
    if (mActivatedState.valueAt(i)) {
      trueIds.add(mActivatedState.keyAt(i));
    }
 else {
      falseIds.add(mActivatedState.keyAt(i));
    }
  }
  final ContentResolver cr=getContentResolver();
  final ContentValues values=new ContentValues();
  values.put(Accounts.IS_ACTIVATED,true);
  Expression where=Expression.in(new Columns.Column(Accounts.ACCOUNT_KEY),new ArgsArray(trueIds.size()));
  String[] whereArgs=TwidereCollectionUtils.toStringArray(trueIds);
  cr.update(Accounts.CONTENT_URI,values,where.getSQL(),whereArgs);
  values.put(Accounts.IS_ACTIVATED,false);
  where=Expression.in(new Columns.Column(Accounts.ACCOUNT_KEY),new ArgsArray(falseIds.size()));
  whereArgs=TwidereCollectionUtils.toStringArray(falseIds);
  cr.update(Accounts.CONTENT_URI,values,where.getSQL(),whereArgs);
}
