{
  if ("action".equals(fieldName)) {
    final String rawAction=jsonParser.getValueAsString();
    instance.action=Activity.Action.parse(rawAction);
    instance.rawAction=rawAction;
  }
 else   if ("created_at".equals(fieldName)) {
    try {
      instance.createdAt=ActivityImpl.DATE_FORMAT.parse(jsonParser.getValueAsString());
    }
 catch (    ParseException e) {
      throw new IOException(e);
    }
  }
 else   if ("min_position".equals(fieldName)) {
    instance.minPosition=jsonParser.getValueAsLong();
  }
 else   if ("max_position".equals(fieldName)) {
    instance.maxPosition=jsonParser.getValueAsLong();
  }
 else   if ("sources_size".equals(fieldName)) {
    instance.sourcesSize=jsonParser.getValueAsInt();
  }
 else   if ("targets_size".equals(fieldName)) {
    instance.targetsSize=jsonParser.getValueAsInt();
  }
 else   if ("target_objects_size".equals(fieldName)) {
    instance.targetObjectsSize=jsonParser.getValueAsInt();
  }
 else   if ("sources".equals(fieldName)) {
    instance.sources=LoganSquare.mapperFor(User.class).parseList(jsonParser).toArray(new User[instance.sourcesSize]);
  }
 else   if ("targets".equals(fieldName)) {
    if (instance.action == null)     throw new IOException();
switch (instance.action) {
case FAVORITE:
case REPLY:
case RETWEET:
case QUOTE:
case FAVORITED_RETWEET:
case RETWEETED_RETWEET:
case RETWEETED_MENTION:
case FAVORITED_MENTION:
case MEDIA_TAGGED:
case FAVORITED_MEDIA_TAGGED:
case RETWEETED_MEDIA_TAGGED:
{
        instance.targetStatuses=LoganSquare.mapperFor(Status.class).parseList(jsonParser).toArray(new Status[instance.targetsSize]);
        break;
      }
case FOLLOW:
case MENTION:
case LIST_MEMBER_ADDED:
{
      instance.targetUsers=LoganSquare.mapperFor(User.class).parseList(jsonParser).toArray(new User[instance.targetsSize]);
      break;
    }
case LIST_CREATED:
{
    instance.targetUserLists=LoganSquare.mapperFor(UserList.class).parseList(jsonParser).toArray(new UserList[instance.targetsSize]);
    break;
  }
}
}
 else if ("target_objects".equals(fieldName)) {
if (instance.action == null) throw new IOException();
switch (instance.action) {
case FAVORITE:
case FOLLOW:
case MENTION:
case REPLY:
case RETWEET:
case LIST_CREATED:
case QUOTE:
{
  instance.targetObjectStatuses=LoganSquare.mapperFor(Status.class).parseList(jsonParser).toArray(new Status[instance.targetObjectsSize]);
  break;
}
case LIST_MEMBER_ADDED:
{
instance.targetObjectUserLists=LoganSquare.mapperFor(UserList.class).parseList(jsonParser).toArray(new UserList[instance.targetObjectsSize]);
break;
}
case FAVORITED_RETWEET:
case RETWEETED_RETWEET:
case RETWEETED_MENTION:
case FAVORITED_MENTION:
case MEDIA_TAGGED:
case FAVORITED_MEDIA_TAGGED:
case RETWEETED_MEDIA_TAGGED:
{
instance.targetObjectUsers=LoganSquare.mapperFor(User.class).parseList(jsonParser).toArray(new User[instance.targetObjectsSize]);
break;
}
}
}
}
