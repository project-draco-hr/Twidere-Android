{
  if (json.get("sender") != null) {
    return Type.SENDER;
  }
 else   if (json.get("text") != null) {
    return Type.STATUS;
  }
 else   if (json.get("direct_message") != null) {
    return Type.DIRECT_MESSAGE;
  }
 else   if (json.get("delete") != null) {
    return Type.DELETE;
  }
 else   if (json.get("limit") != null) {
    return Type.LIMIT;
  }
 else   if (json.get("warning") != null) {
    return Type.STALL_WARNING;
  }
 else   if (json.get("scrub_geo") != null) {
    return Type.SCRUB_GEO;
  }
 else   if (json.get("friends") != null) {
    return Type.FRIENDS;
  }
 else   if (json.get("event") != null) {
    String event;
    event=json.get("event").asToken().asString();
    if ("favorite".equals(event)) {
      return Type.FAVORITE;
    }
 else     if ("unfavorite".equals(event)) {
      return Type.UNFAVORITE;
    }
 else     if ("follow".equals(event)) {
      return Type.FOLLOW;
    }
 else     if ("unfollow".equals(event)) {
      return Type.UNFOLLOW;
    }
 else     if (event.startsWith("list")) {
      if ("list_member_added".equals(event)) {
        return Type.USER_LIST_MEMBER_ADDED;
      }
 else       if ("list_member_removed".equals(event)) {
        return Type.USER_LIST_MEMBER_DELETED;
      }
 else       if ("list_user_subscribed".equals(event)) {
        return Type.USER_LIST_SUBSCRIBED;
      }
 else       if ("list_user_unsubscribed".equals(event)) {
        return Type.USER_LIST_UNSUBSCRIBED;
      }
 else       if ("list_created".equals(event)) {
        return Type.USER_LIST_CREATED;
      }
 else       if ("list_updated".equals(event)) {
        return Type.USER_LIST_UPDATED;
      }
 else       if ("list_destroyed".equals(event)) {
        return Type.USER_LIST_DESTROYED;
      }
    }
 else     if ("user_update".equals(event)) {
      return Type.USER_UPDATE;
    }
 else     if ("user_delete".equals(event)) {
      return Type.USER_DELETE;
    }
 else     if ("user_suspend".equals(event)) {
      return Type.USER_SUSPEND;
    }
 else     if ("block".equals(event)) {
      return Type.BLOCK;
    }
 else     if ("unblock".equals(event)) {
      return Type.UNBLOCK;
    }
  }
 else   if (json.get("disconnect") != null) {
    return Type.DISCONNECTION;
  }
  return Type.UNKNOWN;
}
