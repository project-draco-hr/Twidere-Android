{
  if (mAccountKey == null) {
    return ListResponse.getListInstance(new MicroBlogException("No Account"));
  }
  final ParcelableCredentials credentials=ParcelableCredentialsUtils.getCredentials(getContext(),mAccountKey);
  if (credentials == null) {
    return ListResponse.getListInstance(new MicroBlogException("No Account"));
  }
  final MicroBlog twitter=MicroBlogAPIFactory.getInstance(getContext(),credentials,true,true);
  if (twitter == null)   return ListResponse.getListInstance(new MicroBlogException("No Account"));
  final List<ParcelableUser> data=getData();
  final List<User> users;
  try {
    users=getUsers(twitter,credentials);
  }
 catch (  final MicroBlogException e) {
    Log.w(LOGTAG,e);
    return ListResponse.getListInstance(data);
  }
  int pos=data.size();
  for (  final User user : users) {
    if (hasId(user.getId())) {
      continue;
    }
    data.add(ParcelableUserUtils.fromUser(user,mAccountKey,pos));
    pos++;
  }
  Collections.sort(data);
  return ListResponse.getListInstance(data);
}
